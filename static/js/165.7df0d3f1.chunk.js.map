{"version":3,"file":"static/js/165.7df0d3f1.chunk.js","mappings":"mJACe,SAASA,EAAeC,EAAQC,GAC7C,MAAQC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,IAEpC,QADfD,GAAS,EAAAM,EAAA,GAAeN,MAG1B,OAAOA,CACT,CCNe,SAASO,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIC,OAEZ,SAAcC,EAAQV,EAAUW,GACrC,IAAIC,EAAO,EAAcF,EAAQV,GACjC,GAAKY,EAAL,CACA,IAAIC,EAAOZ,OAAOa,yBAAyBF,EAAMZ,GACjD,OAAIa,EAAKL,IACAK,EAAKL,IAAIJ,KAAKW,UAAUC,OAAS,EAAIN,EAASC,GAEhDE,EAAKI,KALK,CAMnB,EAEKX,EAAKY,MAAMC,KAAMJ,UAC1B,C,gFCXMK,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAD,OAAOA,CAAP,EACpBC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCGrC,IAAMM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,GACrD,IAAMC,GLJCC,EAAAA,EAAAA,YAAWf,GAAegB,cKK3BC,GAAcF,EAAAA,EAAAA,YAAWR,GACzBW,GAAkBH,EAAAA,EAAAA,YAAWd,GAC7BkB,GAAsBJ,EAAAA,EAAAA,YAAWrB,GAAqBK,cACtDqB,GAAmBC,EAAAA,EAAAA,UAIzBR,EAAsBA,GAAuBI,EAAYK,UACpDF,EAAiBG,SAAWV,IAC7BO,EAAiBG,QAAUV,EAAoBH,EAAW,CACtDC,YAAAA,EACAG,OAAAA,EACAF,MAAAA,EACAY,WAAYN,EAAkBA,EAAgBO,QAAKC,EACnDC,wBAAuBT,IACW,IAA5BA,EAAgBU,QAEtBT,oBAAAA,KAGR,IAAMH,EAAgBI,EAAiBG,QAevC,OAdAnB,GAA0B,WACtBY,GAAiBA,EAAca,QAClC,IAMDzB,GAA0B,WAClBY,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,gBAEpC,IACD3B,GAA0B,kBAAM,kBAAMY,GAAiBA,EAAcgB,OAAO,UAA5C,CAAN,GAA8D,IACjFhB,CACV,CC7CD,SAASiB,EAAYC,GACjB,MAAuB,kBAARA,GACX3D,OAAOC,UAAUC,eAAeC,KAAKwD,EAAK,UACjD,CCAD,SAASC,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EACjD,CCLD,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC5C,CCCD,IAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsB9B,GAC3B,OAAQ2B,EAAoB3B,EAAM+B,UAC9BF,EAAaG,MAAK,SAACC,GAAD,OAAUV,EAAevB,EAAMiC,GAA/B,GACzB,CACD,SAASC,EAAclC,GACnB,OAAOmC,QAAQL,EAAsB9B,IAAUA,EAAMoC,SACxD,CCfD,SAASC,EAAuBrC,GAC5B,MCFJ,SAAgCA,EAAOsC,GACnC,GAAIR,EAAsB9B,GAAQ,CAC9B,IAAQgB,EAAqBhB,EAArBgB,QAASe,EAAY/B,EAAZ+B,QACjB,MAAO,CACHf,SAAqB,IAAZA,GAAqBO,EAAeP,GACvCA,OACAF,EACNiB,QAASR,EAAeQ,GAAWA,OAAUjB,EAEpD,CACD,OAAyB,IAAlBd,EAAMuC,QAAoBD,EAAU,CAAC,CAC/C,CDTgCE,CAAuBxC,GAAOG,EAAAA,EAAAA,YAAWf,IAA9D4B,EAAR,EAAQA,QAASe,EAAjB,EAAiBA,QACjB,OAAOU,EAAAA,EAAAA,UAAQ,iBAAO,CAAEzB,QAAAA,EAASe,QAAAA,EAAlB,GAA8B,CAACW,EAA0B1B,GAAU0B,EAA0BX,IAC/G,CACD,SAASW,EAA0BC,GAC/B,OAAOlB,MAAMC,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,CACjD,CEVD,IAAME,EAAmB,SAACC,GAAD,MAAgB,CACrCC,UAAW,SAAC/C,GAAD,OAAW8C,EAAUd,MAAK,SAACC,GAAD,QAAYjC,EAAMiC,EAAlB,GAA1B,EADU,EAGnBe,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDK,UAAWL,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJM,KAAMN,EAAiB,CAAC,SACxBO,KAAMP,EAAiB,CAAC,OAAQ,iBAChCQ,MAAOR,EAAiB,CAAC,eACzBS,MAAOT,EAAiB,CAAC,aAAc,eAAgB,eACvDU,IAAKV,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DW,IAAKX,EAAiB,CAClB,QACA,aACA,oBACA,aAEJY,OAAQZ,EAAiB,CACrB,cACA,kBACA,qBCpBR,SAASa,EAAYC,GACjB,IAAMrC,GAAMb,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBa,EAAIX,UACJW,EAAIX,QAAUgD,KAEXrC,EAAIX,OACd,CCVD,IAAMiD,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBjD,EAAK,ECDT,IAAMkD,GAAqBhF,EAAAA,EAAAA,eAAc,CAAC,G,uCCApCiF,EAAAA,SAAAA,I,8IAIF,WACI,MAAiCnF,KAAKmB,MAA9BI,EAAR,EAAQA,cAAeJ,EAAvB,EAAuBA,MAGvB,OAFII,GACAA,EAAc6D,SAASjE,GACpB,IACV,G,gCACD,WAAwB,G,oBACxB,WACI,OAAOnB,KAAKmB,MAAMkE,QACrB,K,EAbCF,CAA6BG,EAAAA,WCG7BC,GAA2BrF,EAAAA,EAAAA,eAAc,CAAC,GCL1CsF,EAAwBC,OAAOC,IAAI,yBC0BzC,SAASC,EAAT,GAA6I,IAA5GC,EAA4G,EAA5GA,kBAAmBxE,EAAyF,EAAzFA,oBAAqByE,EAAoE,EAApEA,0BAA2BC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eAAgB9E,EAAc,EAAdA,UAC3H2E,GCzBJ,SAAsBI,GAClB,IAAK,IAAMC,KAAOD,EACF,8BAARC,EACA9B,EAAmB0B,0BAA4BG,EAASC,GAGxD9B,EAAmB8B,GAAKhF,UAAY+E,EAASC,EAGxD,CDgBwBC,CAAaN,GAuDlC,IAAMO,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBjF,EAAOkF,GAC5B,IAAMC,GAAiB,2BAChBhF,EAAAA,EAAAA,YAAWrB,IACXkB,GAFa,IAGhBoF,SAAUC,EAAYrF,KAElBd,EAAaiG,EAAbjG,SACJ2F,EAAW,KACTvC,EAAUD,EAAuBrC,GAYjCsF,EAAepG,OAAW4B,EL3C7B4C,GAAY,WACf,GAAIE,EAAsBE,eACtB,OAAOjD,GAEd,IK2CSd,EAAc6E,EAAe5E,EAAOd,GAC1C,IAAKA,GAAYI,EAAW,CAOxBgD,EAAQlC,cAAgBP,EAAiBC,EAAWC,EAAaoF,EAAgBlF,GAKjF,IAAMsF,GAAiBpF,EAAAA,EAAAA,YAAWR,GAAaC,OACzC4F,GAA2BrF,EAAAA,EAAAA,YAAWiE,GACxC9B,EAAQlC,gBACRyE,EAAWvC,EAAQlC,cAAc2E,aAEjCI,EAAgBI,EAAgBd,EAAmBa,EAAcZ,GAC7D1B,EAAmB0B,0BAA2Bc,GAEzD,CAKD,OAAQC,EAAAA,cAAoBzB,EAAsB,CAAE5D,cAAekC,EAAQlC,cAAeJ,MAAOmF,GAC7FN,EACAY,EAAAA,cAAoBrG,EAAcsG,SAAU,CAAE/G,MAAO2D,GAAWqC,EAAU7E,EAAWE,EAAOsF,EEzExG,SAAsBvF,EAAaK,EAAe8E,GAC9C,OAAOS,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAY7F,EAAY8F,OAAS9F,EAAY8F,MAAMD,GAC/CxF,IACAwF,EACMxF,EAAcyF,MAAMD,GACpBxF,EAAc0F,WAEpBZ,IAC2B,oBAAhBA,EACPA,EAAYU,GAEPvE,EAAY6D,KACjBA,EAAYvE,QAAUiF,GAGjC,GAMD,CAACxF,GACJ,CFkDqH2F,CAAahG,EAAauC,EAAQlC,cAAe8E,GAAcnF,EAAab,EAAUoD,EAAQlC,gBAC/M,IAGD,OADA4E,EAAoBX,GAAyBvE,EACtCkF,CACV,CACD,SAASK,EAAT,GAAmC,IAAZD,EAAY,EAAZA,SACbY,GAAgB7F,EAAAA,EAAAA,YAAW4D,GAAoBlD,GACrD,OAAOmF,QAA8BlF,IAAbsE,EAClBY,EAAgB,IAAMZ,EACtBA,CACT,CG3ED,SAASa,EAAkBC,GACvB,SAASC,EAAOrG,GAA6C,IAAlCsG,EAAkC,uDAAJ,CAAC,EACtD,OAAO5B,EAAsB0B,EAAapG,EAAWsG,GACxD,CACD,GAAqB,qBAAVC,MACP,OAAOF,EAMX,IAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBjI,IAAK,SAACsI,EAAS1B,GAOX,OAHKwB,EAAeG,IAAI3B,IACpBwB,EAAeI,IAAI5B,EAAKqB,EAAOrB,IAE5BwB,EAAepI,IAAI4G,EAC7B,GAER,CCxCD,IAAM6B,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe9G,GACpB,MAKqB,kBAAdA,IAIHA,EAAU+G,SAAS,SAOvBF,EAAqBG,QAAQhH,IAAc,GAIvC,QAAQiH,KAAKjH,GAIpB,CC3BD,IAAMkH,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBtC,EAA7B,GAAwD,IAApBuC,EAAoB,EAApBA,OAAQjC,EAAY,EAAZA,SACxC,OAAQ8B,EAAeT,IAAI3B,IACvBA,EAAIwC,WAAW,YACbD,QAAuBvG,IAAbsE,OACL4B,EAAgBlC,IAAgB,YAARA,EACtC,CCRD,IAAMyC,EAAgB,SAAC5I,GAAD,SAAwB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAM6I,YAAlE,E,UCEhBC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAKpBC,EAAqB,SAACC,EAAGC,GAAJ,OAAUf,EAAmBH,QAAQiB,GAAKd,EAAmBH,QAAQkB,EAArE,ECR3B,SAASC,EAAcnD,GACnB,OAAOA,EAAIwC,WAAW,KACzB,CCFD,IAAMY,EAAiB,SAACvJ,EAAOwJ,GAC3B,OAAOA,GAAyB,kBAAVxJ,EAChBwJ,EAAKC,UAAUzJ,GACfA,CACT,ECPK0J,EAAQ,SAACC,EAAKC,EAAK/G,GAAX,OAAiBgH,KAAKF,IAAIE,KAAKD,IAAI/G,EAAG8G,GAAMC,EAA5C,ECERE,EAAS,CACX1B,KAAM,SAACvF,GAAD,MAAoB,kBAANA,CAAd,EACNkH,MAAOC,WACPP,UAAW,SAAC5G,GAAD,OAAOA,CAAP,GAEToH,GAAQ,kBACPH,GADI,IAEPL,UAAW,SAAC5G,GAAD,OAAO6G,EAAM,EAAG,EAAG7G,EAAnB,IAETqH,GAAQ,kBACPJ,GADI,IAEPK,QAAS,ICPPC,EAAW,SAACvH,GAAD,OAAOgH,KAAKQ,MAAU,IAAJxH,GAAc,GAAhC,EACXyH,EAAa,uBACbC,GAAa,+HACbC,GAAmB,mHACzB,SAASC,GAAS5H,GACd,MAAoB,kBAANA,CACjB,CCVD,IAAM6H,GAAiB,SAACC,GAAD,MAAW,CAC9BvC,KAAM,SAACvF,GAAD,OAAO4H,GAAS5H,IAAMA,EAAE+H,SAASD,IAAiC,IAAxB9H,EAAEgI,MAAM,KAAK9K,MAAvD,EACNgK,MAAOC,WACPP,UAAW,SAAC5G,GAAD,gBAAUA,GAAV,OAAc8H,EAAd,EAHQ,EAKjBG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,IAAqB,kBACpBJ,IADiB,IAEpBhB,MAAO,SAAClH,GAAD,OAAOkI,GAAQhB,MAAMlH,GAAK,GAA1B,EACP4G,UAAW,SAAC5G,GAAD,OAAOkI,GAAQtB,UAAc,IAAJ5G,EAAzB,ICbTuI,IAAM,kBACLtB,GADE,IAELL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZjC,EAAGiC,GACHhC,EAAGgC,GACH/B,EAAG+B,GACHkD,YAAalD,GACb9B,qBAAsB8B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA2DJ,EAA3DI,MAAOC,EAAoDL,EAApDK,KAAMxF,EAA8CmF,EAA9CnF,UAAWyF,EAAmCN,EAAnCM,cAAeC,EAAoBP,EAApBO,gBAC/CD,EAAcnP,OAAS,EAEvB,IAAIqP,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMnJ,KAAO0I,EAAc,CAC5B,IAAM7O,EAAQ6O,EAAa1I,GAI3B,GAAImD,EAAcnD,GACd8I,EAAK9I,GAAOnG,MADhB,CAKA,IAAMuP,EAAYlE,GAAiBlF,GAC7BqJ,EAAcjG,EAAevJ,EAAOuP,GAC1C,GAAIhH,EAAeT,IAAI3B,GAAM,CAMzB,GAJAiJ,GAAe,EACf3F,EAAUtD,GAAOqJ,EACjBN,EAAcO,KAAKtJ,IAEdmJ,EACD,SAEAtP,KAAWuP,EAAUpF,SAAW,KAChCmF,GAAkB,EACzB,MACQnJ,EAAIwC,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgBhJ,GAAOqJ,GAGvBR,EAAM7I,GAAOqJ,CAtBhB,CAwBJ,CAiBD,GAhBKX,EAAapF,YACV2F,GAAgBL,EAChBC,EAAMvF,UTrClB,aAA0HiG,EAAoBX,GAAmB,IAAvItF,EAAuI,EAAvIA,UAAWyF,EAA4H,EAA5HA,cAA4H,IAAxGS,2BAAAA,OAAwG,aAArEC,mBAAAA,OAAqE,SAEzJC,EAAkB,GAEtBX,EAAcY,KAAK3G,GAJ0I,gBAM3I+F,GAN2I,IAM7J,2BAAiC,KAAtB/I,EAAsB,QAC7B0J,GAAmB,GAAJ,OAAO/G,EAAe3C,IAAQA,EAA9B,YAAqCsD,EAAUtD,GAA/C,KAClB,CAR4J,+BAqB7J,OAZIwJ,IAA+BlG,EAAUR,IACzC4G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBtF,EAAWiG,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACV,CSe6BG,CAAepB,EAAOE,EAASQ,EAAiBP,GAE7DC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB4F,EAAoB,CACpB,MAA2DF,EAAnDf,QAAAA,OAAR,MAAkB,MAAlB,IAA2De,EAAlCd,QAAAA,OAAzB,MAAmC,MAAnC,IAA2Dc,EAAjBb,QAAAA,OAA1C,MAAoD,EAApD,EACAU,EAAMG,gBAAN,UAA2Bf,EAA3B,YAAsCC,EAAtC,YAAiDC,EACpD,CACJ,CCzED,IAAM2B,GAAwB,iBAAO,CACjCjB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EALmB,ECM9B,SAASiB,GAAkBzQ,EAAQ0Q,EAAQ9O,GACvC,IAAK,IAAM8E,KAAOgK,EACTvH,EAAcuH,EAAOhK,KAAUsC,EAAoBtC,EAAK9E,KACzD5B,EAAO0G,GAAOgK,EAAOhK,GAGhC,CAQD,SAASiK,GAAS/O,EAAOD,EAAab,GAClC,IACMyO,EAAQ,CAAC,EAMf,OAFAkB,GAAkBlB,EALA3N,EAAM2N,OAAS,CAAC,EAKE3N,GACpCrC,OAAOqR,OAAOrB,EAdlB,WAAuD5N,EAAab,GAAU,IAA5CwO,EAA4C,EAA5CA,kBAC9B,OAAOjL,EAAAA,EAAAA,UAAQ,WACX,IAAM8K,EDfuB,CACjCI,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,GCYH,OADAN,GAAgBC,EAAOxN,EAAa,CAAEuO,4BAA6BpP,GAAYwO,GACxE/P,OAAOqR,OAAO,CAAC,EAAGzB,EAAMK,KAAML,EAAMI,MAC9C,GAAE,CAAC5N,GACP,CAQwBkP,CAAuBjP,EAAOD,EAAab,IACzDc,EAAMkP,gBAAkBlP,EAAMkP,gBAAgBvB,GAASA,CACjE,CACD,SAASwB,GAAanP,EAAOD,EAAab,GAEtC,IAAMkQ,EAAY,CAAC,EACbzB,EAAQoB,GAAS/O,EAAOD,EAAab,GAgB3C,OAfIc,EAAMoD,OAA+B,IAAvBpD,EAAMqP,eAEpBD,EAAUE,WAAY,EAEtB3B,EAAM4B,WACF5B,EAAM6B,iBACF7B,EAAM8B,mBACF,OAEZ9B,EAAM+B,aACa,IAAf1P,EAAMoD,KACA,OADN,cAE4B,MAAfpD,EAAMoD,KAAe,IAAM,MAEhDgM,EAAUzB,MAAQA,EACXyB,CACV,CClDD,IAwBMO,GAAmB,IAAIxI,IAAJ,CACrB,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,gBAxCqB,OAZL,CAChB,cACA,kBACA,kBACA,YANa,CAAC,WAAY,QAAS,aAAc,eAV9B,CACnB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,eAGa,CAAC,QAAS,aAAc,oBAAqB,cAmE9D,SAASyI,GAAkB9K,GACvB,OAAO6K,GAAiBlJ,IAAI3B,EAC/B,CC9ED,IACiC+K,GAD7BC,GAAgB,SAAChL,GAAD,OAAU8K,GAAkB9K,EAA5B,EAoBpB,KAnBiC+K,GAyBLE,QAAQ,0BAA0BjH,WArB1DgH,GAAgB,SAAChL,GAAD,OAASA,EAAIwC,WAAW,OAASsI,GAAkB9K,GAAO+K,GAAY/K,EAAtE,EAyBnB,CAFD,MAAOkL,IAEN,CACD,SAASC,GAAYjQ,EAAOkQ,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMtL,KAAO9E,GACV8P,GAAchL,KACU,IAAvBqL,GAA+BP,GAAkB9K,KAChDoL,IAAUN,GAAkB9K,IAE7B9E,EAAK,WAAiB8E,EAAIwC,WAAW,aACtC8I,EAActL,GAAO9E,EAAM8E,IAGnC,OAAOsL,CACV,C,eC3CD,SAASC,GAAWC,EAAQC,EAAQvF,GAChC,MAAyB,kBAAXsF,EACRA,EACA3G,GAAGvB,UAAUmI,EAASvF,EAAOsF,EACtC,CCJD,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAcpD,EAAvB,EAEaE,EAASmD,EAAUlD,GAAmB,IAFnBmD,EAEmB,EAFnBA,MAAOC,EAEY,EAFZA,MAAO/D,EAEK,EAFLA,QAASC,EAEJ,EAFIA,QAAS+D,EAEb,EAFaA,WAEb,IAFyBC,YAAAA,OAEzB,MAFuC,EAEvC,MAF0CC,WAAAA,OAE1C,MAFuD,EAEvD,EAM/C,GALA3D,GAAgBC,GAD+B,cAChBE,EAASC,GAKpCkD,EACIrD,EAAMI,MAAMuD,UACZ3D,EAAM4D,MAAMD,QAAU3D,EAAMI,MAAMuD,aAF1C,CAMA3D,EAAM4D,MAAQ5D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQwD,EAA6B5D,EAA7B4D,MAAOxD,EAAsBJ,EAAtBI,MAAOyD,EAAe7D,EAAf6D,WAKlBD,EAAM/I,YACFgJ,IACAzD,EAAMvF,UAAY+I,EAAM/I,kBACrB+I,EAAM/I,WAGbgJ,SACatQ,IAAZiM,QAAqCjM,IAAZkM,GAAyBW,EAAMvF,aACzDuF,EAAMG,gBFzBd,SAAgCsD,EAAYrE,EAASC,GACjD,IAAMqE,EAAYhB,GAAWtD,EAASqE,EAAW1J,EAAG0J,EAAWxG,OACzD0G,EAAYjB,GAAWrD,EAASoE,EAAWzJ,EAAGyJ,EAAWtG,QAC/D,gBAAUuG,EAAV,YAAuBC,EAC1B,CEqB+BC,CAAuBH,OAAwBtQ,IAAZiM,EAAwBA,EAAU,QAAiBjM,IAAZkM,EAAwBA,EAAU,UAG1HlM,IAAV+P,IACAM,EAAMzJ,EAAImJ,QACA/P,IAAVgQ,IACAK,EAAMxJ,EAAImJ,QAEKhQ,IAAfiQ,GD3BR,SAAsBI,EAAOzS,GAAqD,IAA7C8S,EAA6C,uDAAnC,EAAGjB,EAAgC,uDAAvB,EAAGkB,IAAoB,yDAE9EN,EAAMJ,WAAa,EAGnB,IAAMW,EAAOD,EAAcjB,GAAWE,GAEtCS,EAAMO,EAAKnB,QAAU5G,GAAGvB,WAAWmI,GAEnC,IAAMQ,EAAapH,GAAGvB,UAAU1J,GAC1BsS,EAAcrH,GAAGvB,UAAUoJ,GACjCL,EAAMO,EAAKjB,OAAX,UAAuBM,EAAvB,YAAqCC,EACxC,CCgBOW,CAAaR,EAAOJ,EAAYC,EAAaC,GAAY,EAzB5D,CA2BJ,CC7CD,IAAMW,GAAuB,0BAAC,UPFO,CACjCjE,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,IOHkB,IAEzBuD,MAAO,CAAC,GAFiB,ECFvBP,GAAW,SAACiB,GAAD,MAAwB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAxC,ECMjB,SAASC,GAAY/R,EAAOD,EAAaiS,EAAWlS,GAChD,IAAMmS,GAAcxP,EAAAA,EAAAA,UAAQ,WACxB,IAAM8K,EAAQqE,KAEd,OADAjB,GAAcpD,EAAOxN,EAAa,CAAEuO,4BAA4B,GAASsC,GAAS9Q,GAAYE,EAAM0N,oBACpG,kBACOH,EAAM4D,OADb,IAEIxD,OAAO,UAAKJ,EAAMI,QAEzB,GAAE,CAAC5N,IACJ,GAAIC,EAAM2N,MAAO,CACb,IAAMuE,EAAY,CAAC,EACnBrD,GAAkBqD,EAAWlS,EAAM2N,MAAO3N,GAC1CiS,EAAYtE,OAAZ,kBAAyBuE,GAAcD,EAAYtE,MACtD,CACD,OAAOsE,CACV,CCfD,SAASE,KAA4C,IAA5BhC,EAA4B,wDAC3CxL,EAAY,SAAC7E,EAAWE,EAAOsF,EAAchE,EAAjC,EAAwDpC,GAAa,IAA7BsO,EAA6B,EAA7BA,aAIhDyE,GAHiBrL,EAAe9G,GAChCiS,GACA5C,IAC6BnP,EAAOwN,EAActO,EAAUY,GAC5DsQ,EAAgBH,GAAYjQ,EAA4B,kBAAdF,EAAwBqQ,GAClEiC,GAAe,0BACdhC,GACA6B,GAFW,IAGd3Q,IAAAA,IAKJ,OAHIgE,IACA8M,EAAa,sBAAwB9M,IAElC+M,EAAAA,EAAAA,eAAcvS,EAAWsS,EACnC,EACD,OAAOzN,CACV,CCrBD,IAAM2N,GAAc,SAACC,GAAD,OAASA,EAAIC,QAAQ,kBAAmB,SAASV,aAAjD,ECHpB,SAASW,GAAWC,EAApB,EAA8CC,EAAWC,GAAY,IAAtCjF,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAGlC,IAAK,IAAM9I,KAFXnH,OAAOqR,OAAO0D,EAAQ/E,MAAOA,EAAOiF,GAAcA,EAAWC,oBAAoBF,IAE/D/E,EACd8E,EAAQ/E,MAAMmF,YAAYhO,EAAK8I,EAAK9I,GAE3C,CCHD,IAAMiO,GAAsB,IAAI5L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS6L,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAM9N,KADX2N,GAAWC,EAASO,OAAanS,EAAW8R,GAC1BK,EAAY9B,MAC1BuB,EAAQS,aAAcJ,GAAoBtM,IAAI3B,GAA0BA,EAAnBwN,GAAYxN,GAAYmO,EAAY9B,MAAMrM,GAEtG,CCND,SAASsO,GAA4BpT,GACjC,IAAQ2N,EAAU3N,EAAV2N,MACF0F,EAAY,CAAC,EACnB,IAAK,IAAMvO,KAAO6I,GACVpG,EAAcoG,EAAM7I,KAASsC,EAAoBtC,EAAK9E,MACtDqT,EAAUvO,GAAO6I,EAAM7I,IAG/B,OAAOuO,CACV,CCTD,SAASD,GAA4BpT,GACjC,IAAMqT,EAAYC,GAA8BtT,GAChD,IAAK,IAAM8E,KAAO9E,EAAO,CACrB,GAAIuH,EAAcvH,EAAM8E,IAEpBuO,EAD0B,MAARvO,GAAuB,MAARA,EAAc,OAASA,EAAIyO,cAAgBzO,GACrD9E,EAAM8E,EAEpC,CACD,OAAOuO,CACV,CCZD,SAASG,GAAwBxT,EAAOyT,EAAYtN,GAAkD,IAA1CuN,EAA0C,uDAA1B,CAAC,EAAGC,EAAsB,uDAAJ,CAAC,EAsB/F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsB3S,IAAXqF,EAAuBA,EAASnG,EAAMmG,OAAQuN,EAAeC,IAM/D,kBAAfF,IACPA,EAAazT,EAAMoC,UAAYpC,EAAMoC,SAASqR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB3S,IAAXqF,EAAuBA,EAASnG,EAAMmG,OAAQuN,EAAeC,IAElFF,CACV,CCvBD,IAAMG,GAAoB,SAACpS,GACvB,OAAOC,MAAMC,QAAQF,EACxB,ECMD,SAASqS,GAAmBlV,GACxB,ICPmB6C,EDObsS,EAAiBvM,EAAc5I,GAASA,EAAMT,MAAQS,EAC5D,OCRmB6C,EDQEsS,ECPd3R,QAAQX,GAAkB,kBAANA,GAAkBA,EAAEuS,KAAOvS,EAAEwS,SDQlDF,EAAeE,UACfF,CACT,C,sCEMD,IAAMG,GAAqB,SAACC,GAAD,OAAY,SAAClU,EAAOd,GAC3C,IAAMoD,GAAUnC,EAAAA,EAAAA,YAAWf,GACrBkB,GAAkBH,EAAAA,EAAAA,YAAWd,GAC7B8U,EAAO,kBAbjB,WAAiFnU,EAAOsC,EAAShC,GAAiB,IAA7F8S,EAA6F,EAA7FA,4BAA6BgB,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,QAC3D9G,EAAQ,CACVC,aAAc8G,GAAiBtU,EAAOsC,EAAShC,EAAiB8S,GAChEH,YAAamB,KAKjB,OAHIC,IACA9G,EAAM1H,MAAQ,SAACD,GAAD,OAAcyO,EAAQrU,EAAO4F,EAAU2H,EAAvC,GAEXA,CACV,CAIsBgH,CAAUL,EAAQlU,EAAOsC,EAAShC,EAAxC,EACb,OAAOpB,EAAWiV,IAASzQ,EAAYyQ,EAC1C,CAL0B,EAM3B,SAASG,GAAiBtU,EAAOsC,EAAShC,EAAiBkU,GACvD,IAAMC,EAAS,CAAC,EACVC,EAAeF,EAAmBxU,GACxC,IAAK,IAAM8E,KAAO4P,EACdD,EAAO3P,GAAO+O,GAAmBa,EAAa5P,IAElD,IAAM9D,EAAqBhB,EAArBgB,QAASe,EAAY/B,EAAZ+B,QACT4S,EAA0B7S,EAAsB9B,GAChD4U,EAAkB1S,EAAclC,GAClCsC,GACAsS,IACCD,IACiB,IAAlB3U,EAAMuC,eACUzB,IAAZE,IACAA,EAAUsB,EAAQtB,cACNF,IAAZiB,IACAA,EAAUO,EAAQP,UAE1B,IAAI8S,IAA4BvU,IACE,IAA5BA,EAAgBU,QAGhB8T,GADND,EAA4BA,IAAyC,IAAZ7T,GACRe,EAAUf,EACvD8T,GACwB,mBAAjBA,IACNnT,EAAoBmT,KACRrT,MAAMC,QAAQoT,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACtB,GACV,IAAMuB,EAAWxB,GAAwBxT,EAAOyT,GAChD,GAAKuB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8B7W,GAAW4W,EAA1BE,YAAvB,QAAiDF,EAAjD,KACA,IAAK,IAAMlQ,KAAO1G,EAAQ,CACtB,IAAI+W,EAAc/W,EAAO0G,GACzB,GAAIrD,MAAMC,QAAQyT,GAQdA,EAAcA,EAHAN,EACRM,EAAYzW,OAAS,EACrB,GAGU,OAAhByW,IACAV,EAAO3P,GAAOqQ,EAErB,CACD,IAAK,IAAMrQ,KAAOmQ,EACdR,EAAO3P,GAAOmQ,EAAcnQ,EAnBtB,CAoBb,IAEL,OAAO2P,CACV,CCvED,ICPIW,GDOEC,GAAkB,CACpBzQ,eAAgBqP,GAAmB,CAC/Bb,4BAA6BA,GAC7BgB,kBAAmBxC,GACnByC,QAAS,SAACrU,EAAO4F,EAAR,GAAoD,IAAhCqN,EAAgC,EAAhCA,YAAazF,EAAmB,EAAnBA,aACtC,IACIyF,EAAY7B,WAEJ,oBADGxL,EAAS0P,QAEV1P,EAAS0P,UACT1P,EAAS2P,uBAUtB,CARD,MAAOC,GAEHvC,EAAY7B,WAAa,CACrB1J,EAAG,EACHC,EAAG,EACHiD,MAAO,EACPE,OAAQ,EAEf,CACD6F,GAAcsC,EAAazF,EAAc,CAAEc,4BAA4B,GAASsC,GAAShL,EAAS6P,SAAUzV,EAAM0N,mBAClHsF,GAAUpN,EAAUqN,EACvB,KE1BHyC,GAAmB,CACrB9Q,eAAgBqP,GAAmB,CAC/Bb,4BAAAA,GACAgB,kBAAmBxF,MCL3B,SAAS+G,GAAYvX,EAAQwX,EAAWC,GAAsC,IAA7BpI,EAA6B,uDAAnB,CAAEqI,SAAS,GAElE,OADA1X,EAAO2X,iBAAiBH,EAAWC,EAASpI,GACrC,kBAAMrP,EAAO4X,oBAAoBJ,EAAWC,EAA5C,CACV,CAsBD,SAASI,GAAY3U,EAAKsU,EAAWC,EAASpI,IAC1C/N,EAAAA,EAAAA,YAAU,WACN,IAAMgT,EAAUpR,EAAIX,QACpB,GAAIkV,GAAWnD,EACX,OAAOiD,GAAYjD,EAASkD,EAAWC,EAASpI,EAEvD,GAAE,CAACnM,EAAKsU,EAAWC,EAASpI,GAChC,EFjCD,SAAW2H,GACPA,EAAa,QAAc,UAC3BA,EAAa,MAAY,aACzBA,EAAa,IAAU,WACvBA,EAAa,KAAW,YACxBA,EAAa,MAAY,aACzBA,EAAa,OAAa,cAC1BA,EAAa,KAAW,MAP5B,EAQGA,KAAkBA,GAAgB,CAAC,IGLtC,IAAMc,GAAmB,SAACC,GAAD,OAA+B,IAApBA,EAAMC,SAAjB,ECFzB,SAASC,GAAiBF,GAA2B,IAApBG,EAAoB,uDAAR,OACzC,MAAO,CACHC,MAAO,CACH7O,EAAGyO,EAAMG,EAAY,KACrB3O,EAAGwO,EAAMG,EAAY,MAGhC,CACD,IAAME,GAAc,SAACX,GAAgD,IAAvCY,EAAuC,wDAC3DC,EAAW,SAACP,GAAD,OAAWN,EAAQM,EAAOE,GAAiBF,GAA3C,EACjB,OAAOM,EACD,SAACN,GAAD,OAAWD,GAAiBC,IAAUO,EAASP,EAA/C,EACAO,CACT,ECZD,SAASC,GAAgBvY,EAAQwX,EAAWC,EAASpI,GACjD,OAAOkI,GAAYvX,EAAQwX,EAAWY,GAAYX,EAAuB,gBAAdD,GAA8BnI,EAC5F,CACD,SAASmJ,GAAgBtV,EAAKsU,EAAWC,EAASpI,GAC9C,OAAOwI,GAAY3U,EAAKsU,EAAWC,GAAWW,GAAYX,EAAuB,gBAAdD,GAA8BnI,EACpG,CCRD,SAASoJ,GAAW5U,GAChB,IAAI6U,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO7U,EAJM,WACb6U,EAAO,IACV,EAMJ,CACJ,CACD,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAc7T,GACnB,IAAI0T,GAAO,EACX,GAAa,MAAT1T,EACA0T,EAAOE,UAEN,GAAa,MAAT5T,EACL0T,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACH,GAIGD,GACAA,IACAC,GACAA,IAEX,CACD,OAAOL,CACV,CACD,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACV,CC3CD,SAASC,GAAiBlX,EAAemX,EAAUC,GAC/C,OAAO,SAACrB,EAAOsB,IAJnB,SAAsBtB,GAClB,MAAsB,QAAfA,EAAMhO,MAAiC,UAAfgO,EAAMhO,IACxC,EAGYuP,CAAavB,KAAUiB,OAKxBhX,EAAcc,gBACdd,EAAcc,eAAeyW,UAAUvC,GAAcwC,MAAOL,GAEhEC,GAAYA,EAASrB,EAAOsB,GAC/B,CACJ,CCZD,IAAMI,GAAgB,SAAhBA,EAAiB3X,EAAQ4X,GAC3B,QAAKA,IAGI5X,IAAW4X,GAITD,EAAc3X,EAAQ4X,EAAMC,eAE1C,ECfD,SAASC,GAAiBR,GACtB,OAAO9X,EAAAA,EAAAA,YAAU,kBAAM,kBAAM8X,GAAN,CAAN,GAAwB,GAC5C,CCGD,IAAMS,GAAmB,SAAClQ,EAAGC,GAAJ,OAAU,SAACxG,GAAD,OAAOwG,EAAED,EAAEvG,GAAX,CAAV,EACnB0W,GAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAqBA,EAAaC,OAAOH,GAAzC,ECRE,IAAI9Q,I,gBCKbkR,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMjB,EAAWa,GAAkBna,IAAIua,EAAMra,QAC7CoZ,GAAYA,EAASiB,EACxB,EACKC,GAA2B,SAACC,GAC9BA,EAAQ5D,QAAQyD,GACnB,EAoBD,SAASI,GAAoBlG,EAASjF,EAAS+J,GAC3C,IAAMqB,EApBV,YAAwD,IAApBC,EAAoB,EAApBA,KAASrL,GAAW,cAC9CsL,EAAaD,GAAQvZ,SAItBgZ,GAAU9R,IAAIsS,IACfR,GAAU7R,IAAIqS,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUra,IAAI6a,GAC9BjU,EAAMmU,KAAKC,UAAUzL,GAQ3B,OAHKuL,EAAclU,KACfkU,EAAclU,GAAO,IAAIqU,qBAAqBT,IAAzB,QAAqDI,KAAAA,GAASrL,KAEhFuL,EAAclU,EACxB,CAEqCsU,CAAyB3L,GAG3D,OAFA4K,GAAkB3R,IAAIgM,EAAS8E,GAC/BqB,EAA0BQ,QAAQ3G,GAC3B,WACH2F,GAAkBiB,OAAO5G,GACzBmG,EAA0BU,UAAU7G,EACvC,CACJ,CC3BD,IAAM8G,GAAiB,CACnBxX,KAAM,EACNyX,IAAK,GAET,SAASC,GAAwBC,EAAepM,EAAOnN,EAAvD,GAA2H,IAAnD0Y,EAAmD,EAAnDA,KAAcc,EAAqC,EAA7ClO,OAA6C,IAAzBmO,OAAAA,OAAyB,MAAhB,OAAgB,EAARC,EAAQ,EAARA,MAC/Gpa,EAAAA,EAAAA,YAAU,WACN,GAAKia,GAAkBvZ,EAAcO,QAArC,CAEA,IAAM8M,EAAU,CACZqL,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAKnY,QACvDiZ,WAAAA,EACAG,UAA6B,kBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOjB,GAAoBxY,EAAcO,QAAS8M,GA/BrB,SAACgL,GAC1B,IAAQuB,EAAmBvB,EAAnBuB,eAIR,GAAIzM,EAAM0M,WAAaD,IAEvBzM,EAAM0M,SAAWD,GAKbF,GAASE,IAAkBzM,EAAM2M,gBAArC,CAGSF,IACLzM,EAAM2M,gBAAiB,GAEvB9Z,EAAcc,gBACdd,EAAcc,eAAeyW,UAAUvC,GAAc+E,OAAQH,GAMjE,IAAMha,EAAQI,EAAcga,WACtB5C,EAAWwC,EACXha,EAAMqa,gBACNra,EAAMsa,gBACZ9C,GAAYA,EAASiB,EAZpB,CAaJ,GApCS,CAsCb,GAAE,CAACkB,EAAeb,EAAMc,EAAYC,GACxC,CAMD,SAASU,GAA+BZ,EAAepM,EAAOnN,EAA9D,GAAkG,QAAnBoa,SAAAA,OAAmB,UAC9F9a,EAAAA,EAAAA,YAAU,WACDia,GAAkBa,GAavBC,uBAAsB,WAClBlN,EAAM2M,gBAAiB,EACvB,IAAQG,EAAoBja,EAAcga,WAAlCC,gBACRA,GAAmBA,EAAgB,MAC/Bja,EAAcc,gBACdd,EAAcc,eAAeyW,UAAUvC,GAAc+E,QAAQ,EAEpE,GACJ,GAAE,CAACR,GACP,CC/FD,IAAMe,GAA0B,SAACC,GAAD,OAAU,SAAC3a,GAEvC,OADA2a,EAAK3a,GACE,IACV,CAH+B,ECM1B4a,GAAoB,CACtBnX,OAAQiX,IFDZ,YAAuG,IAAhFta,EAAgF,EAAhFA,cAAeya,EAAiE,EAAjEA,YAAaR,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,gBAAmC,IAAlBQ,SAAAA,OAAkB,MAAP,CAAC,EAAM,EAC7FvN,GAAQ9M,EAAAA,EAAAA,QAAO,CACjByZ,gBAAgB,EAChBD,UAAU,IAEVN,EAAgBxX,QAAQ0Y,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQvM,EAAM5M,QAAQuZ,iBAC/BP,GAAgB,IACgC,qBAAzBR,qBACrBoB,GACAb,IACMC,EAAepM,EAAM5M,QAASP,EAAe0a,EAC5D,IEVGvX,IAAKmX,ICIT,YAAqF,IAA5DK,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAU9a,EAAkB,EAAlBA,cACzD+a,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAa3a,EAAAA,EAAAA,SAAO,GACpB4a,GAA4B5a,EAAAA,EAAAA,QAAO,MAInC6a,EAAe,CACjBxF,UAAWkF,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0B1a,SAAW0a,EAA0B1a,UAC/D0a,EAA0B1a,QAAU,IACvC,CACD,SAAS8a,IAKL,OAJAD,IACAJ,EAAWza,SAAU,EACrBP,EAAcc,gBACVd,EAAcc,eAAeyW,UAAUvC,GAAcsG,KAAK,IACtDtE,IACX,CACD,SAASuE,EAAYxF,EAAOsB,GACnBgE,MAMJ5D,GAAczX,EAAcO,QAASwV,EAAM/X,QAEtC2c,GAASA,EAAM5E,EAAOsB,GADtBwD,GAAeA,EAAY9E,EAAOsB,GAE3C,CACD,SAASmE,EAAgBzF,EAAOsB,GACvBgE,KAELR,GAAeA,EAAY9E,EAAOsB,EACrC,CACD,SAAS8D,EAAcpF,EAAOsB,GAC1B+D,IACIJ,EAAWza,UAEfya,EAAWza,SAAU,EACrB0a,EAA0B1a,QAAUuX,GAAKvB,GAAgBkF,OAAQ,YAAaF,EAAaL,GAAe3E,GAAgBkF,OAAQ,gBAAiBD,EAAiBN,IAIpKlb,EAAcc,gBACVd,EAAcc,eAAeyW,UAAUvC,GAAcsG,KAAK,GAC9DV,GAAcA,EAAW7E,EAAOsB,GACnC,CACDb,GAAgBxW,EAAe,cAAe+a,EAAoBI,OAAgBza,EAAWwa,GAC7FtD,GAAiBwD,EACpB,IDvDGnY,MAAOqX,IEAX,YAAyD,IAA9BoB,EAA8B,EAA9BA,WAAY1b,EAAkB,EAAlBA,cAC3Bc,EAAmBd,EAAnBc,eAOR+U,GAAY7V,EAAe,QAAS0b,EANpB,WACZ5a,GAAkBA,EAAeyW,UAAUvC,GAAc2G,OAAO,EACnE,OAI0Djb,GAC3DmV,GAAY7V,EAAe,OAAQ0b,EAJpB,WACX5a,GAAkBA,EAAeyW,UAAUvC,GAAc2G,OAAO,EACnE,OAEwDjb,EAC5D,IFTGwC,MAAOoX,IRUX,YAAmF,IAAxDsB,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,WAAY9b,EAAkB,EAAlBA,cAC7DwW,GAAgBxW,EAAe,eAAgB4b,GAAgBE,EACzD5E,GAAiBlX,GAAe,EAAM4b,QACtClb,EAAW,CAAEgV,SAAUkG,IAC7BpF,GAAgBxW,EAAe,eAAgB6b,GAAcC,EACvD5E,GAAiBlX,GAAe,EAAO6b,QACvCnb,EAAW,CAAEgV,SAAUmG,GAChC,K,WWDD,SAASE,KACL,IAAM7Z,GAAUnC,EAAAA,EAAAA,YAAWd,GAC3B,GAAgB,OAAZiD,EACA,MAAO,EAAC,EAAM,MAClB,IAAQ8Z,EAAwC9Z,EAAxC8Z,UAAWC,EAA6B/Z,EAA7B+Z,eAAgBC,EAAaha,EAAbga,SAI7Bzb,GAAK0b,EAAAA,EAAAA,UACX7c,EAAAA,EAAAA,YAAU,kBAAM4c,EAASzb,EAAf,GAAoB,IAE9B,OAAQub,GAAaC,EAAiB,EAAC,EADlB,kBAAMA,GAAkBA,EAAexb,EAAvC,GACyC,EAAC,EAClE,C,0BCtCD,SAAS2b,GAAeC,EAAMC,GAC1B,IAAKjb,MAAMC,QAAQgb,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKhe,OACxB,GAAIie,IAAeF,EAAK/d,OACpB,OAAO,EACX,IAAK,IAAIke,EAAI,EAAGA,EAAID,EAAYC,IAC5B,GAAIF,EAAKE,KAAOH,EAAKG,GACjB,OAAO,EAEf,OAAO,CACV,CCRD,ICAMC,GAAoB,SAACrb,GAAD,MAAO,aAAauF,KAAKvF,EAAzB,ECHpBsb,GAAY,CACdC,MAAO,EACPC,UAAW,GCCTC,GAAmB,EAAI,GAAM,IAC7BC,GAAwC,qBAAhBC,YACxB,kBAAMA,YAAYC,KAAlB,EACA,kBAAMC,KAAKD,KAAX,EACAE,GAAgC,qBAAXzB,OACrB,SAACrE,GAAD,OAAcqE,OAAOpB,sBAAsBjD,EAA3C,EACA,SAACA,GAAD,OAAc+F,YAAW,kBAAM/F,EAAS0F,KAAf,GAAkCD,GAA3D,ECLN,IACIO,IAAoB,EACpBC,IAAe,EACfC,IAAe,EACbC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWvF,QAAO,SAACyF,EAAK/Y,GAElC,OADA+Y,EAAI/Y,GChBR,SAA0B2Y,GAKtB,IAAIK,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAAC7G,GAAmD,IACpD8G,EADoD,yDACnBZ,EACjCa,EAASD,EAAoBR,EAAQC,EAU3C,OAZ0D,yDAItDG,EAAYM,IAAIhH,IAEc,IAA9B+G,EAAOzX,QAAQ0Q,KACf+G,EAAOnQ,KAAKoJ,GAER8G,GAAqBZ,IACrBM,EAAWF,EAAMpf,SAElB8Y,CACV,EAIDiH,OAAQ,SAACjH,GACL,IAAMkH,EAAQX,EAAejX,QAAQ0Q,IACtB,IAAXkH,GACAX,EAAeY,OAAOD,EAAO,GACjCR,EAAY5E,OAAO9B,EACtB,EAIDoH,QAAS,SAAC9B,GAMN,GAAIY,EACAO,GAAiB,MADrB,CAIAP,GAAe,EAVK,MAWM,CAACK,EAAgBD,GAK3C,GALCA,EAXmB,MAWZC,EAXY,MAaLrf,OAAS,EAExBsf,EAAWF,EAAMpf,OAEb,IAAK,IAAIke,EAAI,EAAGA,EAAIoB,EAAUpB,IAAK,CAC/B,IAAMpF,EAAWsG,EAAMlB,GACvBpF,EAASsF,GACLoB,EAAYzX,IAAI+Q,KAChB4G,EAAKC,SAAS7G,GACdiG,IAEP,CAELC,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAKQ,QAAQ9B,GApBhB,CAsBJ,GAEL,OAAOsB,CACV,CDrEcS,EAAiB,kBAAOpB,IAAe,CAAtB,IACrBI,CACV,GAAE,CAAC,GACEiB,GAAOnB,GAAWvF,QAAO,SAACyF,EAAK/Y,GACjC,IAAMsZ,EAAOR,GAAM9Y,GAMnB,OALA+Y,EAAI/Y,GAAO,SAAC8Z,GAAkD,IAAzCG,EAAyC,wDAAtBC,EAAsB,wDAG1D,OAFKvB,IACDwB,KACGb,EAAKC,SAASO,EAASG,EAAWC,EAC5C,EACMnB,CACV,GAAE,CAAC,GACEqB,GAAavB,GAAWvF,QAAO,SAACyF,EAAK/Y,GAEvC,OADA+Y,EAAI/Y,GAAO8Y,GAAM9Y,GAAK2Z,OACfZ,CACV,GAAE,CAAC,GACEsB,GAAYxB,GAAWvF,QAAO,SAACyF,EAAK/Y,GAEtC,OADA+Y,EAAI/Y,GAAO,kBAAM8Y,GAAM9Y,GAAK8Z,QAAQ9B,GAAzB,EACJe,CACV,GAAE,CAAC,GACEuB,GAAc,SAACC,GAAD,OAAYzB,GAAMyB,GAAQT,QAAQ9B,GAAlC,EACdwC,GAAe,SAAfA,EAAgBtC,GAClBS,IAAe,EACfX,GAAUC,MAAQS,GACZP,GACAzU,KAAKD,IAAIC,KAAKF,IAAI0U,EAAYF,GAAUE,UArC/B,IAqCuD,GACtEF,GAAUE,UAAYA,EACtBU,IAAe,EACfC,GAAW5I,QAAQqK,IACnB1B,IAAe,EACXD,KACAD,IAAoB,EACpBF,GAAYgC,GAEnB,EACKL,GAAY,WACdxB,IAAe,EACfD,IAAoB,EACfE,IACDJ,GAAYgC,GACnB,EExDD,SAASC,GAAcC,EAAKC,IACG,IAAvBD,EAAI1Y,QAAQ2Y,IACZD,EAAIpR,KAAKqR,EAChB,CACD,SAASC,GAAWF,EAAKC,GACrB,IAAMf,EAAQc,EAAI1Y,QAAQ2Y,GACtBf,GAAS,GACTc,EAAIb,OAAOD,EAAO,EACzB,C,ICNKiB,GAAAA,WACF,cAAc,eACV9gB,KAAK+gB,cAAgB,EACxB,C,kCACD,SAAI/J,GAAS,WAET,OADA0J,GAAc1gB,KAAK+gB,cAAe/J,GAC3B,kBAAM6J,GAAW,EAAKE,cAAe/J,EAArC,CACV,G,oBACD,SAAO9N,EAAGC,EAAG6X,GACT,IAAMC,EAAmBjhB,KAAK+gB,cAAclhB,OAC5C,GAAKohB,EAEL,GAAyB,IAArBA,EAIAjhB,KAAK+gB,cAAc,GAAG7X,EAAGC,EAAG6X,QAG5B,IAAK,IAAIjD,EAAI,EAAGA,EAAIkD,EAAkBlD,IAAK,CAKvC,IAAM/G,EAAUhX,KAAK+gB,cAAchD,GACnC/G,GAAWA,EAAQ9N,EAAGC,EAAG6X,EAC5B,CAER,G,qBACD,WACI,OAAOhhB,KAAK+gB,cAAclhB,MAC7B,G,mBACD,WACIG,KAAK+gB,cAAclhB,OAAS,CAC/B,K,EAlCCihB,GCIN,SAASI,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC9D,CCHD,IAAMC,GAAU,SAACvhB,GACb,OAAQwhB,MAAMxX,WAAWhK,GAC5B,EAMKyhB,GAAAA,WASF,WAAYzc,GAAoB,WAAd8J,EAAc,uDAAJ,CAAC,GAAG,eAK5B5O,KAAKwhB,QAAU,QAMfxhB,KAAKyhB,UAAY,EAMjBzhB,KAAK0hB,YAAc,EAQnB1hB,KAAK2hB,kBAAmB,EAIxB3hB,KAAK4hB,OAAS,CAAC,EACf5hB,KAAK6hB,gBAAkB,SAAClf,GAAqB,IAAlBP,IAAkB,yDACzC,EAAKyb,KAAO,EAAK/b,QACjB,EAAKA,QAAUa,EAEf,IAAQub,EAAqBD,GAAAA,MAAdE,EAAcF,GAAAA,UACzB,EAAKyD,cAAgBvD,IACrB,EAAKsD,UAAYvD,EACjB,EAAKwD,YAAcvD,EACnB8B,GAAK6B,WAAW,EAAKC,wBAGrB,EAAKlE,OAAS,EAAK/b,SAAW,EAAK8f,OAAOI,QAC1C,EAAKJ,OAAOI,OAAOzf,OAAO,EAAKT,SAG/B,EAAK8f,OAAOK,gBACZ,EAAKL,OAAOK,eAAe1f,OAAO,EAAKoG,eAGvCvG,GAAU,EAAKwf,OAAOM,eACtB,EAAKN,OAAOM,cAAc3f,OAAO,EAAKT,QAE7C,EASD9B,KAAK+hB,sBAAwB,kBAAM9B,GAAK6B,WAAW,EAAKK,cAA3B,EAU7BniB,KAAKmiB,cAAgB,YAAmB,EAAhBhE,YACF,EAAKuD,cACnB,EAAK7D,KAAO,EAAK/b,QACb,EAAK8f,OAAOK,gBACZ,EAAKL,OAAOK,eAAe1f,OAAO,EAAKoG,eAGlD,EACD3I,KAAKoiB,aAAc,EACnBpiB,KAAK6d,KAAO7d,KAAK8B,QAAUgD,EAC3B9E,KAAK2hB,iBAAmBN,GAAQrhB,KAAK8B,SACrC9B,KAAKqiB,MAAQzT,EAAQyT,KACxB,C,uCAiDD,SAASC,GACL,OAAOtiB,KAAKuiB,GAAG,SAAUD,EAC5B,G,gBACD,SAAGvL,EAAW4B,GAIV,OAHK3Y,KAAK4hB,OAAO7K,KACb/W,KAAK4hB,OAAO7K,GAAa,IAAI+J,IAE1B9gB,KAAK4hB,OAAO7K,GAAW4I,IAAIhH,EACrC,G,4BACD,WACI,IAAK,IAAM6J,KAAiBxiB,KAAK4hB,OAC7B5hB,KAAK4hB,OAAOY,GAAeC,OAElC,G,oBAMD,SAAOC,GACH1iB,KAAK0iB,cAAgBA,CACxB,G,iBAgBD,SAAI/f,GAAkB,IAAfP,IAAe,yDACbA,GAAWpC,KAAK0iB,cAIjB1iB,KAAK0iB,cAAc/f,EAAG3C,KAAK6hB,iBAH3B7hB,KAAK6hB,gBAAgBlf,EAAGP,EAK/B,G,6BACD,SAAgByb,EAAM/b,EAASoc,GAC3Ble,KAAK6H,IAAI/F,GACT9B,KAAK6d,KAAOA,EACZ7d,KAAKyhB,UAAYvD,CACpB,G,iBAQD,WACI,OAAOle,KAAK8B,OACf,G,yBAID,WACI,OAAO9B,KAAK6d,IACf,G,yBAQD,WAEI,OAAO7d,KAAK2hB,iBAEJT,GAAkBpX,WAAW9J,KAAK8B,SAC9BgI,WAAW9J,KAAK6d,MAAO7d,KAAKyhB,WAClC,CACT,G,mBAaD,SAAMpd,GAAW,WAEb,OADArE,KAAK2iB,OACE,IAAIC,SAAQ,SAACC,GAChB,EAAKT,aAAc,EACnB,EAAKU,cAAgBze,EAAUwe,GAC3B,EAAKjB,OAAOmB,gBACZ,EAAKnB,OAAOmB,eAAexgB,QAElC,IAAEygB,MAAK,WACA,EAAKpB,OAAOqB,mBACZ,EAAKrB,OAAOqB,kBAAkB1gB,SAElC,EAAK2gB,gBACR,GACJ,G,kBAMD,WACQljB,KAAK8iB,gBACL9iB,KAAK8iB,gBACD9iB,KAAK4hB,OAAOuB,iBACZnjB,KAAK4hB,OAAOuB,gBAAgB5gB,UAGpCvC,KAAKkjB,gBACR,G,yBAMD,WACI,QAASljB,KAAK8iB,aACjB,G,4BACD,WACI9iB,KAAK8iB,cAAgB,IACxB,G,qBAUD,WACI9iB,KAAKojB,iBACLpjB,KAAK2iB,MACR,K,EA9RCpB,GAgSN,SAAS8B,GAAYve,EAAM8J,GACvB,OAAO,IAAI2S,GAAYzc,EAAM8J,EAChC,CCzSD,IAAM0U,GAAgB,SAACha,EAAMia,GAAP,OAAoB,SAAC5gB,GACvC,OAAOW,QAASiH,GAAS5H,IAAM2H,GAAiBpC,KAAKvF,IAAMA,EAAE8F,WAAWa,IACnEia,GAAYzkB,OAAOC,UAAUC,eAAeC,KAAK0D,EAAG4gB,GAC5D,CAHqB,EAIhBC,GAAa,SAACC,EAAOC,EAAOC,GAAf,OAAyB,SAAChhB,GAAM,MAC/C,IAAK4H,GAAS5H,GACV,OAAOA,EACX,MAAyBA,EAAEihB,MAAMxZ,GAAjC,gBAAOlB,EAAP,KAAUC,EAAV,KAAa6X,EAAb,KAAgBjX,EAAhB,KACA,uBACK0Z,EAAQ3Z,WAAWZ,KADxB,UAEKwa,EAAQ5Z,WAAWX,KAFxB,UAGKwa,EAAQ7Z,WAAWkX,KAHxB,uBAIqB/e,IAAV8H,EAAsBD,WAAWC,GAAS,GAJrD,CAMH,CAVkB,ECJb8Z,IAAU,kBACTja,GADM,IAETL,UAAW,SAAC5G,GAAD,OAAOgH,KAAKQ,MAHN,SAACxH,GAAD,OAAO6G,EAAM,EAAG,IAAK7G,EAArB,CAGYmhB,CAAanhB,GAA/B,IAETohB,GAAO,CACT7b,KAAMob,GAAc,MAAO,OAC3BzZ,MAAO2Z,GAAW,MAAO,QAAS,QAClCja,UAAW,gBAAGya,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAf,IAAqBna,MAAOoa,OAA5B,MAAsC,EAAtC,QAA8C,QACrDN,GAAQta,UAAUya,GAClB,KACAH,GAAQta,UAAU0a,GAClB,KACAJ,GAAQta,UAAU2a,GAClB,KACAha,EAASH,EAAMR,UAAU4a,IACzB,GARO,GCoBf,IAAMC,GAAM,CACRlc,KAAMob,GAAc,KACpBzZ,MAhCJ,SAAkBlH,GACd,IAAI0hB,EAAI,GACJC,EAAI,GACJnb,EAAI,GACJD,EAAI,GAmBR,OAjBIvG,EAAE9C,OAAS,GACXwkB,EAAI1hB,EAAE4hB,UAAU,EAAG,GACnBD,EAAI3hB,EAAE4hB,UAAU,EAAG,GACnBpb,EAAIxG,EAAE4hB,UAAU,EAAG,GACnBrb,EAAIvG,EAAE4hB,UAAU,EAAG,KAInBF,EAAI1hB,EAAE4hB,UAAU,EAAG,GACnBD,EAAI3hB,EAAE4hB,UAAU,EAAG,GACnBpb,EAAIxG,EAAE4hB,UAAU,EAAG,GACnBrb,EAAIvG,EAAE4hB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLnb,GAAKA,EACLD,GAAKA,GAEF,CACH8a,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAASrb,EAAG,IAClBY,MAAOb,EAAIsb,SAAStb,EAAG,IAAM,IAAM,EAE1C,EAIGK,UAAWwa,GAAKxa,WC/Bdkb,GAAO,CACTvc,KAAMob,GAAc,MAAO,OAC3BzZ,MAAO2Z,GAAW,MAAO,aAAc,aACvCja,UAAW,YAAwD,IAArDmb,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,UAAoC,IAAzB7a,MAAOoa,OAAkB,MAAR,EAAQ,EAC/D,MAAQ,QACJxa,KAAKQ,MAAMua,GACX,KACA7Z,GAAQtB,UAAUW,EAASya,IAC3B,KACA9Z,GAAQtB,UAAUW,EAAS0a,IAC3B,KACA1a,EAASH,EAAMR,UAAU4a,IACzB,GACP,GCbCU,GAAQ,CACV3c,KAAM,SAACvF,GAAD,OAAOohB,GAAK7b,KAAKvF,IAAMyhB,GAAIlc,KAAKvF,IAAM8hB,GAAKvc,KAAKvF,EAAhD,EACNkH,MAAO,SAAClH,GACJ,OAAIohB,GAAK7b,KAAKvF,GACHohB,GAAKla,MAAMlH,GAEb8hB,GAAKvc,KAAKvF,GACR8hB,GAAK5a,MAAMlH,GAGXyhB,GAAIva,MAAMlH,EAExB,EACD4G,UAAW,SAAC5G,GACR,OAAO4H,GAAS5H,GACVA,EACAA,EAAE3D,eAAe,OACb+kB,GAAKxa,UAAU5G,GACf8hB,GAAKlb,UAAU5G,EAC5B,GCpBCmiB,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBriB,GACR,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAMiT,EAAS,GACXqP,EAAY,EACZC,EAAa,EACXC,EAASxiB,EAAEihB,MAAMvZ,IACnB8a,IACAF,EAAYE,EAAOtlB,OAGnB8C,EAAIA,EAAEgR,QAAQtJ,GAAYya,IAC1BlP,EAAOrG,KAAP,MAAAqG,GAAM,QAASuP,EAAOC,IAAIP,GAAMhb,UAEpC,IAAMwb,EAAU1iB,EAAEihB,MAAMxZ,GAMxB,OALIib,IACAH,EAAaG,EAAQxlB,OACrB8C,EAAIA,EAAEgR,QAAQvJ,EAAY2a,IAC1BnP,EAAOrG,KAAP,MAAAqG,GAAM,QAASyP,EAAQD,IAAIxb,EAAOC,UAE/B,CAAE+L,OAAAA,EAAQqP,UAAAA,EAAWC,WAAAA,EAAYI,UAAW3iB,EACtD,CACD,SAASkH,GAAMlH,GACX,OAAOqiB,GAAoBriB,GAAGiT,MACjC,CACD,SAAS2P,GAAkBtV,GACvB,MAAyC+U,GAAoB/U,GAArD2F,EAAR,EAAQA,OAAQqP,EAAhB,EAAgBA,UAAWK,EAA3B,EAA2BA,UACrBE,EAAY5P,EAAO/V,OACzB,OAAO,SAAC8C,GAEJ,IADA,IAAI8iB,EAASH,EACJvH,EAAI,EAAGA,EAAIyH,EAAWzH,IAC3B0H,EAASA,EAAO9R,QAAQoK,EAAIkH,EAAYH,GAAaC,GAAahH,EAAIkH,EAChEJ,GAAMtb,UAAU5G,EAAEob,IAClB7T,EAASvH,EAAEob,KAErB,OAAO0H,CACV,CACJ,CACD,IAAMC,GAAuB,SAAC/iB,GAAD,MAAoB,kBAANA,EAAiB,EAAIA,CAAnC,EAM7B,IAAMgjB,GAAU,CAAEzd,KApDlB,SAAcvF,GACV,IAAIwO,EAAIyU,EACR,OAAQtE,MAAM3e,IACV4H,GAAS5H,MACwB,QAA9BwO,EAAKxO,EAAEihB,MAAMxZ,UAAgC,IAAP+G,OAAgB,EAASA,EAAGtR,SAAW,KAC3C,QAA9B+lB,EAAKjjB,EAAEihB,MAAMvZ,WAAgC,IAAPub,OAAgB,EAASA,EAAG/lB,SAAW,GAChF,CACX,EA6CuBgK,MAAAA,GAAO0b,kBAAAA,GAAmBM,kBALlD,SAA2BljB,GACvB,IAAMmjB,EAASjc,GAAMlH,GAErB,OADoB4iB,GAAkB5iB,EAC/BojB,CAAYD,EAAOV,IAAIM,IACjC,GCnDKM,GAAc,IAAI1d,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS2d,GAAmBtjB,GACxB,MAAsBA,EAAEujB,MAAM,GAAI,GAAGvb,MAAM,KAA3C,gBAAOvH,EAAP,KAAatD,EAAb,KACA,GAAa,gBAATsD,EACA,OAAOT,EACX,MAAiB7C,EAAM8jB,MAAMxZ,IAAe,GAArCR,GAAP,gBACA,IAAKA,EACD,OAAOjH,EACX,IAAM8H,EAAO3K,EAAM6T,QAAQ/J,EAAQ,IAC/Buc,EAAeH,GAAYpe,IAAIxE,GAAQ,EAAI,EAG/C,OAFIwG,IAAW9J,IACXqmB,GAAgB,KACb/iB,EAAO,IAAM+iB,EAAe1b,EAAO,GAC7C,CACD,IAAM2b,GAAgB,oBAChBC,IAAS,kBACRV,IADK,IAERE,kBAAmB,SAACljB,GAChB,IAAM2jB,EAAY3jB,EAAEihB,MAAMwC,IAC1B,OAAOE,EAAYA,EAAUlB,IAAIa,IAAoBliB,KAAK,KAAOpB,CACpE,ICnBC4jB,IAAoB,kBACnBpb,IADgB,IAGnB0Z,MAAAA,GACA2B,gBAAiB3B,GACjB4B,aAAc5B,GACd6B,KAAM7B,GACN8B,OAAQ9B,GAER+B,YAAa/B,GACbgC,eAAgBhC,GAChBiC,iBAAkBjC,GAClBkC,kBAAmBlC,GACnBmC,gBAAiBnC,GACjBwB,OAAAA,GACAY,aAAcZ,KAKZa,GAAsB,SAACjhB,GAAD,OAASsgB,GAAkBtgB,EAA3B,ECvB5B,SAAS4f,GAAkB5f,EAAKnG,GAC5B,IAAIqR,EACAgW,EAAmBD,GAAoBjhB,GAI3C,OAHIkhB,IAAqBd,KACrBc,EAAmBxB,IAE8B,QAA7CxU,EAAKgW,EAAiBtB,yBAAsC,IAAP1U,OAAgB,EAASA,EAAGlS,KAAKkoB,EAAkBrnB,EACnH,CCRD,IAAMsnB,GAAgB,SAACzkB,GAAD,OAAO,SAAC2G,GAAD,OAAUA,EAAKpB,KAAKvF,EAApB,CAAP,ECKhB0kB,GAAsB,CAACzd,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT7C,KAAM,SAACvF,GAAD,MAAa,SAANA,CAAP,EACNkH,MAAO,SAAClH,GAAD,OAAOA,CAAP,IDOL2kB,GAAyB,SAAC3kB,GAAD,OAAO0kB,GAAoBE,KAAKH,GAAczkB,GAA9C,EEJzB6kB,GAAa,GAAH,gBAAOH,IAAP,CAA4BxC,GAAOc,KAI7C8B,GAAgB,SAAC9kB,GAAD,OAAO6kB,GAAWD,KAAKH,GAAczkB,GAArC,ECMtB,SAAS+kB,GAAenmB,EAAeqT,EAAYtN,GAC/C,IAAMnG,EAAQI,EAAcga,WAC5B,OAAO5G,GAAwBxT,EAAOyT,OAAuB3S,IAAXqF,EAAuBA,EAASnG,EAAMmG,OAf5F,SAAoB/F,GAChB,IAAMO,EAAU,CAAC,EAEjB,OADAP,EAAcqU,OAAOM,SAAQ,SAACpW,EAAOmG,GAAR,OAAiBnE,EAAQmE,GAAOnG,EAAMT,KAAtC,IACtByC,CACV,CAWmG6lB,CAAWpmB,GAP/G,SAAqBA,GACjB,IAAM4f,EAAW,CAAC,EAElB,OADA5f,EAAcqU,OAAOM,SAAQ,SAACpW,EAAOmG,GAAR,OAAiBkb,EAASlb,GAAOnG,EAAM6I,aAAvC,IACtBwY,CACV,CAG8HxY,CAAYpH,GAC1I,C,sCCRD,SAASqmB,GAAermB,EAAe0E,EAAKnG,GACpCyB,EAAcsmB,SAAS5hB,GACvB1E,EAAcumB,SAAS7hB,GAAK4B,IAAI/H,GAGhCyB,EAAcwmB,SAAS9hB,EAAKod,GAAYvjB,GAE/C,CACD,SAASkoB,GAAUzmB,EAAeqT,GAC9B,I/CjBkCjS,E+CiB5BwT,EAAWuR,GAAenmB,EAAeqT,GAC/C,EAAyDuB,EAAW5U,EAAc0mB,qBAAqB9R,GAAU,GAAS,CAAC,EAA3H,IAAMC,cAAAA,OAAN,MAAsB,CAAC,EAAvB,EAA8C7W,GAA9C,EAA0B8W,YAA1B,eAEA,IAAK,IAAMpQ,KADX1G,GAAS,kBAAKA,GAAW6W,GACC,CAEtBwR,GAAermB,EAAe0E,G/CtBAtD,E+CqBapD,EAAO0G,G/CnB/C8O,GAAkBpS,GAAKA,EAAEA,EAAE9C,OAAS,IAAM,EAAI8C,G+CqBpD,CACJ,CAsED,SAASulB,GAAwBjiB,EAAKoQ,GAClC,GAAKA,EAGL,OADwBA,EAAWpQ,IAAQoQ,EAAU,SAAeA,GAC7C8R,IAC1B,CCtGD,SAASC,GAAwBtoB,GAC7B,OAAOwD,QAAQoF,EAAc5I,IAAUA,EAAM6f,IAChD,CCAD,SAAS0I,GAAgCrmB,EAAIoB,GACzC,IAAQklB,EAA2BtL,OAA3BsL,uBACFC,ECNY,SAACvmB,EAAIlC,GAAL,gBAAkBkC,EAAlB,aAAyBlC,EAAzB,CDME0oB,CAAcxmB,EAAIqG,EAAeT,IAAIxE,GAAQ,YAAcA,GACzEiB,EAAYikB,GAA0BA,EAAuBjpB,IAAIkpB,GACvE,OAAIlkB,GAQA4b,GAAK7d,QAAO,WAIR,IACIiC,EAAUub,SACV0I,EAAuB7N,OAAO8N,EAErB,CAAb,MAAO5R,GAAM,CAChB,IACMtS,EAAUokB,aAAe,GAGzB,CAEd,CE7BD,IACMC,GAA+B,QAAUjV,GADjB,kBCI9B,IAAMkV,GAAwB,SAACC,GAAD,OAAuB,IAAVA,CAAb,ECNxBC,IACO,ECCPC,GAAe,SAACC,GAAD,OAAY,SAAC3oB,GAAD,OAAOA,GAAK,GAAM2oB,EAAO,EAAI3oB,GAAK,GAAK,EAAI2oB,EAAO,GAAK,EAAI3oB,KAAO,CAAlE,CAAZ,ECAf4oB,GAAgB,SAACD,GAAD,OAAY,SAAC3oB,GAAD,OAAO,EAAI2oB,EAAO,EAAI3oB,EAAtB,CAAZ,ECChB6oB,GAAS,SAAC7oB,GAAD,OAAOA,EAAIA,CAAX,EACT8oB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICgBzB/T,GAAM,SAACiT,EAAMiB,EAAIC,GAAX,OAAyBA,EAAWlB,EAAOkB,EAAWD,EAAKjB,CAA3D,ECpBZ,SAASmB,GAASlpB,EAAGmpB,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDppB,EAAc,GAATmpB,EAAInpB,GAASopB,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDppB,GAAKmpB,EAAInpB,IAAM,EAAI,EAAIopB,GAAK,EAChCppB,CACV,CCHD,IAAMqpB,GAAiB,SAACtB,EAAMiB,EAAIzmB,GAC9B,IAAM+mB,EAAWvB,EAAOA,EACxB,OAAOxe,KAAKggB,KAAKhgB,KAAKD,IAAI,EAAG/G,GAAKymB,EAAKA,EAAKM,GAAYA,GAC3D,EACKE,GAAa,CAACxF,GAAKL,GAAMU,IAE/B,SAASoF,GAAOhF,GACZ,IAFkBliB,EAEZ2G,GAFY3G,EAEQkiB,EAFF+E,GAAWrC,MAAK,SAACje,GAAD,OAAUA,EAAKpB,KAAKvF,EAApB,KAG9BW,QAAQgG,GAAT,WAAoBub,EAApB,wEACT,IAAIiF,EAAQxgB,EAAKO,MAAMgb,GAKvB,OAJIvb,IAASmb,KAETqF,EDRR,YAA2D,IAArCpF,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAW7a,EAAS,EAATA,MAC9C2a,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAM4E,EAAI3E,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCvkB,EAAI,EAAIwkB,EAAY2E,EAC1BvF,EAAMsF,GAASlpB,EAAGmpB,EAAG7E,EAAM,EAAI,GAC/BT,EAAQqF,GAASlpB,EAAGmpB,EAAG7E,GACvBR,EAAOoF,GAASlpB,EAAGmpB,EAAG7E,EAAM,EAAI,EACnC,MAVGV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKra,KAAKQ,MAAY,IAAN6Z,GAChBC,MAAOta,KAAKQ,MAAc,IAAR8Z,GAClBC,KAAMva,KAAKQ,MAAa,IAAP+Z,GACjBna,MAAAA,EAEP,CCjBeggB,CAAWD,IAEhBA,CACV,CACD,IAAME,GAAW,SAAC7B,EAAMiB,GACpB,IAAMa,EAAWJ,GAAO1B,GAClB+B,EAASL,GAAOT,GAChBe,GAAU,UAAKF,GACrB,OAAO,SAACtnB,GAKJ,OAJAwnB,EAAQnG,IAAMyF,GAAeQ,EAASjG,IAAKkG,EAAOlG,IAAKrhB,GACvDwnB,EAAQlG,MAAQwF,GAAeQ,EAAShG,MAAOiG,EAAOjG,MAAOthB,GAC7DwnB,EAAQjG,KAAOuF,GAAeQ,EAAS/F,KAAMgG,EAAOhG,KAAMvhB,GAC1DwnB,EAAQpgB,MAAQmL,GAAI+U,EAASlgB,MAAOmgB,EAAOngB,MAAOpH,GAC3CohB,GAAKxa,UAAU4gB,EACzB,CACJ,EC9BD,SAASC,GAAS3Y,EAAQlS,GACtB,MAAsB,kBAAXkS,EACA,SAAC9O,GAAD,OAAOuS,GAAIzD,EAAQlS,EAAQoD,EAA3B,EAEFkiB,GAAM3c,KAAKuJ,GACTuY,GAASvY,EAAQlS,GAGjB8qB,GAAW5Y,EAAQlS,EAEjC,CACD,IAAM+qB,GAAW,SAACnC,EAAMiB,GACpB,IAAM3D,GAAS,QAAI0C,GACb3C,EAAYC,EAAO5lB,OACnB0qB,EAAapC,EAAK/C,KAAI,SAACoF,EAAUzM,GAAX,OAAiBqM,GAASI,EAAUpB,EAAGrL,GAAvC,IAC5B,OAAO,SAACpb,GACJ,IAAK,IAAIob,EAAI,EAAGA,EAAIyH,EAAWzH,IAC3B0H,EAAO1H,GAAKwM,EAAWxM,GAAGpb,GAE9B,OAAO8iB,CACV,CACJ,EACKgF,GAAY,SAAChZ,EAAQlS,GACvB,IAAMkmB,GAAS,kBAAKhU,GAAWlS,GACzBgrB,EAAa,CAAC,EACpB,IAAK,IAAMtkB,KAAOwf,OACMxjB,IAAhBwP,EAAOxL,SAAsChE,IAAhB1C,EAAO0G,KACpCskB,EAAWtkB,GAAOmkB,GAAS3Y,EAAOxL,GAAM1G,EAAO0G,KAGvD,OAAO,SAACtD,GACJ,IAAK,IAAMsD,KAAOskB,EACd9E,EAAOxf,GAAOskB,EAAWtkB,GAAKtD,GAElC,OAAO8iB,CACV,CACJ,EACK4E,GAAa,SAAC5Y,EAAQlS,GACxB,IAAMmrB,EAAW/E,GAAQJ,kBAAkBhmB,GACrCorB,EAAc3F,GAAoBvT,GAClCmZ,EAAc5F,GAAoBzlB,GAGxC,OAFuBorB,EAAY1F,YAAc2F,EAAY3F,WACzD0F,EAAYzF,YAAc0F,EAAY1F,WAE/B7L,GAAKiR,GAASK,EAAY/U,OAAQgV,EAAYhV,QAAS8U,IAGvD,0BAA0BjZ,EAA1B,kBAA0ClS,EAA1C,4KACA,SAACa,GAAD,gBAAUA,EAAI,EAAIb,EAASkS,EAA3B,EAEd,EC7CK4X,GAAW,SAAClB,EAAMiB,EAAItpB,GACxB,IAAM+qB,EAAmBzB,EAAKjB,EAC9B,OAA4B,IAArB0C,EAAyB,GAAK/qB,EAAQqoB,GAAQ0C,CACxD,ECNKC,GAAY,SAAC3C,EAAMiB,GAAP,OAAc,SAAChpB,GAAD,OAAO8U,GAAIiT,EAAMiB,EAAIhpB,EAArB,CAAd,EAqBlB,SAAS2qB,GAAatF,EAAQuF,EAAMC,GAIhC,IAHA,IArBwBtoB,EAqBlBuoB,EAAS,GACTC,EAAeF,IArBJ,kBADOtoB,EAsB+B8iB,EAAO,IApBnDqF,GAEW,kBAANnoB,EACRkiB,GAAM3c,KAAKvF,GACJqnB,GAGAK,GAGNznB,MAAMC,QAAQF,GACZ2nB,GAEW,kBAAN3nB,EACL8nB,GAEJK,IAKDM,EAAY3F,EAAO5lB,OAAS,EACzBke,EAAI,EAAGA,EAAIqN,EAAWrN,IAAK,CAChC,IAAIsN,EAAQF,EAAa1F,EAAO1H,GAAI0H,EAAO1H,EAAI,IAC/C,GAAIiN,EAAM,CACN,IAAMM,EAAiB1oB,MAAMC,QAAQmoB,GAAQA,EAAKjN,GAAKiN,EACvDK,EAAQhS,GAAKiS,EAAgBD,EAChC,CACDH,EAAO3b,KAAK8b,EACf,CACD,OAAOH,CACV,CAoBD,SAASK,GAAYC,EAAO/F,GAAqD,6DAAJ,CAAC,EAAG,IAA3Cjc,MAAOiiB,OAAoC,SAApBT,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MACzDK,EAAcF,EAAM3rB,OACA4lB,EAAO5lB,QACtBmrB,IAASpoB,MAAMC,QAAQmoB,IAASA,EAAKnrB,OAE5C2rB,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnBlG,GAAS,QAAIA,GAAQkG,WAEzB,IAAMT,EAASH,GAAatF,EAAQuF,EAAMK,GACpCD,EAAYF,EAAOrrB,OACnB+rB,EAAe,SAACjpB,GAClB,IAAIob,EAAI,EACR,GAAIqN,EAAY,EACZ,KAAOrN,EAAIyN,EAAM3rB,OAAS,KAClB8C,EAAI6oB,EAAMzN,EAAI,IADOA,KAKjC,IAAM8N,EAAkBxC,GAASmC,EAAMzN,GAAIyN,EAAMzN,EAAI,GAAIpb,GACzD,OAAOuoB,EAAOnN,GAAG8N,EACpB,EACD,OAAOJ,EACD,SAAC9oB,GAAD,OAAOipB,EAAapiB,EAAMgiB,EAAM,GAAIA,EAAME,EAAc,GAAI/oB,GAA5D,EACAipB,CACT,CCxFD,IAAME,GAAO,SAACC,GAAD,OAASA,CAAT,ECoBPC,GAAa,SAACxC,EAAGyC,EAAIC,GAAR,SAAkB,EAAM,EAAMA,EAAK,EAAMD,GAAMzC,GAAK,EAAM0C,EAAK,EAAMD,IAAOzC,EAAI,EAAMyC,GACrGzC,CADe,EAqBnB,SAAS2C,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOT,GACX,IAAMU,EAAW,SAACC,GAAD,OArBrB,SAAyB5jB,EAAG6jB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA9O,EAAI,EACR,IAEI6O,EAAWZ,GADXa,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOzjB,GAC7B,EACX8jB,EAAaE,EAGbH,EAAaG,QAEZljB,KAAKmjB,IAAIF,GAfO,QAgBnB7O,EAfuB,IAgB7B,OAAO8O,CACV,CAK4BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAvC,EAEjB,OAAO,SAAC9C,GAAD,OAAa,IAANA,GAAiB,IAANA,EAAUA,EAAIwC,GAAWQ,EAAShD,GAAI6C,EAAKE,EAA7D,CACV,CC7CD,IAAMS,GAAS,SAAC5sB,GAAD,OAAO,EAAIuJ,KAAKsjB,IAAItjB,KAAKujB,KAAK9sB,GAA9B,EACT+sB,GAAUnE,GAAcgE,IACxBI,GAAYtE,GAAaqE,ICDzBE,GAAUlB,GAAY,IAAM,KAAM,IAAM,KACxCmB,GAAStE,GAAcqE,IACvBE,GAAYzE,GAAawE,ICEzBE,GAAe,CACjBC,OAAQ3B,GACR7C,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACA8D,OAAAA,GACAI,UAAAA,GACAD,QAAAA,GACAG,OAAAA,GACAC,UAAAA,GACAF,QAAAA,GACAK,WCjBe,SAACttB,GAAD,OAAQA,GAAK,GAAK,EAAI,GAAMktB,GAAOltB,GAAK,IAAO,EAAIuJ,KAAKgkB,IAAI,GAAI,IAAMvtB,EAAI,IAA1E,GDmBbwtB,GAA6B,SAAChZ,GAChC,GAAIhS,MAAMC,QAAQ+R,GAAa,CAEjBA,EAAW/U,OACrB,eAAyB+U,EAAzB,GACA,OAAOuX,GADP,oBAEH,CACI,MAA0B,kBAAfvX,GAEH,+BAAiEA,EAAjE,KACF4Y,GAAa5Y,IAEjBA,CACV,EEpBD,SAASiZ,GAAT,GAA4F,IAA5DC,EAA4D,EAAvED,UAAuE,IAA5C7C,KAAAA,OAA4C,MAArC7B,GAAqC,EAA1B4E,EAA0B,EAA1BA,MAA0B,IAAnBC,SAAAA,OAAmB,MAAR,IAAQ,EACxFF,GAAiB,QAAIA,GACrB,IAAMrc,EAASoc,GAAU,GAKnBI,EFcY,SAACjD,GACnB,OAAOpoB,MAAMC,QAAQmoB,IAA4B,kBAAZA,EAAK,EAC7C,CEhB2BkD,CAAclD,GAChCA,EAAK5F,IAAIwI,IACTA,GAA2B5C,GAK3Btc,EAAQ,CAAEyf,MAAM,EAAOruB,MAAO2R,GAI9B2c,EArBV,SAA8B1c,EAAQsc,GAClC,OAAOtc,EAAO0T,KAAI,SAACiJ,GAAD,OAAOA,EAAIL,CAAX,GACrB,CAmByBM,CAGtBP,GAASA,EAAMluB,SAAWguB,GAAUhuB,OAC9BkuB,EA7BV,SAAuBnY,GACnB,IAAM4P,EAAY5P,EAAO/V,OACzB,OAAO+V,EAAOwP,KAAI,SAACmJ,EAAQxQ,GAAT,OAAqB,IAANA,EAAUA,GAAKyH,EAAY,GAAK,CAA/C,GACrB,CA2BSgJ,CAAcV,GAAiBE,GACrC,SAASS,IACL,OAAOlD,GAAY6C,EAAeN,EAAgB,CAC9C9C,KAAMpoB,MAAMC,QAAQorB,GACdA,GArCKrY,EAsCSkY,EAtCD/E,EAsCiBkF,EArCrCrY,EAAOwP,KAAI,kBAAM2D,GAAUI,EAAhB,IAA2BrJ,OAAO,EAAGlK,EAAO/V,OAAS,MAD3E,IAAuB+V,EAAQmT,CAwC1B,CACD,IAAI6C,EAAe6C,IACnB,MAAO,CACH7Q,KAAM,SAAC4L,GAGH,OAFA9a,EAAM5O,MAAQ8rB,EAAapC,GAC3B9a,EAAMyf,KAAO3E,GAAKwE,EACXtf,CACV,EACDggB,WAAY,WACRZ,EAAenC,UACfC,EAAe6C,GAClB,EAER,CCtDD,IAAME,GAAU,KAKhB,SAASC,GAAT,GAAgF,IACxEC,EACAC,EAFwE,IAA1Dd,SAAAA,OAA0D,MAA/C,IAA+C,MAA1Ce,OAAAA,OAA0C,MAAjC,IAAiC,MAA3B5N,SAAAA,OAA2B,MAAhB,EAAgB,MAAb6N,KAAAA,OAAa,MAAN,EAAM,EAIxEC,EAAe,EAAIF,EAIvBE,EAAezlB,EAVA,IACA,EAS8BylB,GAC7CjB,EAAWxkB,EAbK,IACA,GAY2BwkB,EAAW,KAClDiB,EAAe,GAIfJ,EAAW,SAACK,GACR,IAAMC,EAAmBD,EAAeD,EAClC/Q,EAAQiR,EAAmBnB,EAC3B9kB,EAAIimB,EAAmBhO,EACvBhY,EAAIimB,GAAgBF,EAAcD,GAClCjO,EAAIrX,KAAK0lB,KAAKnR,GACpB,OAAOyQ,GAAWzlB,EAAIC,EAAK6X,CAC9B,EACD8N,EAAa,SAACI,GACV,IACMhR,EADmBgR,EAAeD,EACPjB,EAC3BsB,EAAIpR,EAAQiD,EAAWA,EACvBxK,EAAIhN,KAAKgkB,IAAIsB,EAAc,GAAKtlB,KAAKgkB,IAAIuB,EAAc,GAAKlB,EAC5DuB,EAAI5lB,KAAK0lB,KAAKnR,GACdoG,EAAI8K,GAAgBzlB,KAAKgkB,IAAIuB,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBP,GAAU,GAAK,EAAI,KACzCW,EAAI3Y,GAAK4Y,GAAMjL,CACrC,IAMDuK,EAAW,SAACK,GAGR,OAFUvlB,KAAK0lB,KAAKH,EAAelB,KACxBkB,EAAe/N,GAAY6M,EAAW,GAC1C,IACV,EACDc,EAAa,SAACI,GAGV,OAFUvlB,KAAK0lB,KAAKH,EAAelB,IACIA,EAAWA,GAAvC7M,EAAW+N,GAEzB,GAEL,IACMA,EAmBV,SAAyBL,EAAUC,EAAYU,GAE3C,IADA,IAAIC,EAASD,EACJzR,EAAI,EAAGA,EAHG,GAGiBA,IAChC0R,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACV,CAzBwBC,CAAgBb,EAAUC,EAD1B,EAAId,GAGzB,GADAA,GAAsB,IAClB1M,MAAM4N,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACT5B,SAAAA,GAIJ,IAAM2B,EAAYhmB,KAAKgkB,IAAIuB,EAAc,GAAKF,EAC9C,MAAO,CACHW,UAAAA,EACAC,QAAwB,EAAfX,EAAmBtlB,KAAKggB,KAAKqF,EAAOW,GAC7C3B,SAAAA,EAGX,CASD,SAASoB,GAAgBF,EAAcD,GACnC,OAAOC,EAAevlB,KAAKggB,KAAK,EAAIsF,EAAeA,EACtD,C,6CClFKY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAanhB,EAASiE,GAC3B,OAAOA,EAAK1P,MAAK,SAAC8C,GAAD,YAA0BhE,IAAjB2M,EAAQ3I,EAAjB,GACpB,CA4BD,SAAS+pB,GAAT,GAA4E,IAA1DnC,EAA0D,EAA1DA,UAA0D,IAA/CoC,UAAAA,OAA+C,MAAnC,EAAmC,MAAhCC,UAAAA,OAAgC,MAApB,IAAoB,EAAXthB,GAAW,cACpE6C,EAASoc,EAAU,GACnBtuB,EAASsuB,EAAUA,EAAUhuB,OAAS,GAKpC6O,EAAQ,CAAEyf,MAAM,EAAOruB,MAAO2R,GACpC,EAnCJ,SAA0B7C,GACtB,IAAIuhB,GAAgB,QAChBhP,SAAU,EACVwO,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNoB,wBAAwB,GACrBxhB,GAGP,IAAKmhB,GAAanhB,EAASkhB,KACvBC,GAAanhB,EAASihB,IAAe,CACrC,IAAMQ,EAAUzB,GAAWhgB,IAC3BuhB,GAAgB,0BACTA,GACAE,GAFM,IAGTlP,SAAU,EACV6N,KAAM,KAEIoB,wBAAyB,CAC1C,CACD,OAAOD,CACV,CAaqFG,CAAiB1hB,GAA3F+gB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASZ,EAA5B,EAA4BA,KAAM7N,EAAlC,EAAkCA,SAAU6M,EAA5C,EAA4CA,SAAUoC,EAAtD,EAAsDA,uBAClDG,EAAgBC,GAChBC,EAAkBtP,GAAaA,EAAW,IAAQ,EAChD8N,EAAeW,GAAW,EAAIjmB,KAAKggB,KAAKgG,EAAYX,IAC1D,SAAS0B,IACL,IAAMC,EAAepxB,EAASkS,EACxBmf,EAAsBjnB,KAAKggB,KAAKgG,EAAYX,GAAQ,IAQ1D,QAHkB/sB,IAAdiuB,IACAA,EAAYvmB,KAAKF,IAAIE,KAAKmjB,IAAIvtB,EAASkS,GAAU,IAAK,KAEtDwd,EAAe,EAAG,CAClB,IAAM4B,EAAczB,GAAgBwB,EAAqB3B,GAEzDsB,EAAgB,SAAC/G,GACb,IAAMqF,EAAWllB,KAAK0lB,KAAKJ,EAAe2B,EAAsBpH,GAChE,OAAQjqB,EACJsvB,IACO4B,EACCxB,EAAe2B,EAAsBD,GACrCE,EACAlnB,KAAKsjB,IAAI4D,EAAcrH,GACvBmH,EAAehnB,KAAKmnB,IAAID,EAAcrH,GACrD,CACJ,MACI,GAAqB,IAAjByF,EAELsB,EAAgB,SAAC/G,GAAD,OAAOjqB,EACnBoK,KAAK0lB,KAAKuB,EAAsBpH,IAC3BmH,GACIF,EAAkBG,EAAsBD,GACrCnH,EAJA,MAMf,CAED,IAAMuH,EAAoBH,EAAsBjnB,KAAKggB,KAAKsF,EAAeA,EAAe,GACxFsB,EAAgB,SAAC/G,GACb,IAAMqF,EAAWllB,KAAK0lB,KAAKJ,EAAe2B,EAAsBpH,GAE1DwH,EAAWrnB,KAAKF,IAAIsnB,EAAoBvH,EAAG,KACjD,OAAQjqB,EACHsvB,IACK4B,EACExB,EAAe2B,EAAsBD,GACrChnB,KAAKsnB,KAAKD,GACVD,EACIJ,EACAhnB,KAAKunB,KAAKF,IAClBD,CACX,CACJ,CACJ,CAED,OADAL,IACO,CACH9S,KAAM,SAAC4L,GACH,IAAM1nB,EAAUyuB,EAAc/G,GAC9B,GAAK4G,EAsBD1hB,EAAMyf,KAAO3E,GAAKwE,MAtBO,CACzB,IAAIlZ,EAAkB2b,EACtB,GAAU,IAANjH,EAMA,GAAIyF,EAAe,EAAG,CAClB,IAAMkC,EAAQxnB,KAAKD,IAAI,EAAG8f,EAhFnB,GAiFP1U,EAAkBoM,GAAkBpf,EAAUyuB,EAAcY,GAAQ3H,EAAI2H,EAC3E,MAEGrc,EAAkB,EAG1B,IAAMsc,EAA2BznB,KAAKmjB,IAAIhY,IAAoBmb,EACxDoB,EAA+B1nB,KAAKmjB,IAAIvtB,EAASuC,IAAYouB,EACnExhB,EAAMyf,KACFiD,GAA4BC,CACnC,CAKD,OADA3iB,EAAM5O,MAAQ4O,EAAMyf,KAAO5uB,EAASuC,EAC7B4M,CACV,EACDggB,WAAY,WACR+B,GAAmBA,EADL,MAEK,CAAClxB,EAAQkS,GAA3BA,EAFa,KAELlS,EAFK,KAGdmxB,GACH,EAER,CACDV,GAAOsB,mBAAqB,SAACpoB,EAAGC,GAAJ,MAAuB,kBAAND,GAA+B,kBAANC,CAA1C,EAC5B,IAAMqnB,GAAO,SAACe,GAAD,OAAQ,CAAR,E,8JCnIPC,GAAQ,CACVC,MCPJ,YAMkG,QAAlG5D,UAAAA,OAAkG,MAAtF,CAAC,GAAqF,MAAjF1M,SAAAA,OAAiF,MAAtE,EAAsE,MAAnEuQ,MAAAA,OAAmE,MAA3D,GAA2D,MAAtDC,aAAAA,OAAsD,MAAvC,IAAuC,MAAlCzB,UAAAA,OAAkC,MAAtB,GAAsB,EAAjB0B,EAAiB,EAAjBA,aACvEngB,EAASoc,EAAU,GAKnBnf,EAAQ,CAAEyf,MAAM,EAAOruB,MAAO2R,GAChCogB,EAAYH,EAAQvQ,EAClB2Q,EAAQrgB,EAASogB,EACjBtyB,OAA0B0C,IAAjB2vB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFIvyB,IAAWuyB,IACXD,EAAYtyB,EAASkS,GAClB,CACHmM,KAAM,SAAC4L,GACH,IAAMtL,GAAS2T,EAAYloB,KAAK0lB,KAAK7F,EAAImI,GAGzC,OAFAjjB,EAAMyf,OAASjQ,EAAQgS,GAAahS,GAASgS,GAC7CxhB,EAAM5O,MAAQ4O,EAAMyf,KAAO5uB,EAASA,EAAS2e,EACtCxP,CACV,EACDggB,WAAY,WAAS,EAE5B,EDvBGb,UAAWA,GACXkE,MAAOlE,GACPmC,OAAAA,IAEJ,SAASgC,GAAYC,EAASjE,GAAqB,IAAXkE,EAAW,uDAAH,EAC5C,OAAOD,EAAUjE,EAAWkE,CAC/B,CASD,IAAMC,GAAY,SAACC,GACf,IAAMC,EAAgB,SAAC,GAAD,IAAGnU,EAAH,EAAGA,MAAH,OAAekU,EAAOlU,EAAtB,EACtB,MAAO,CACHnb,MAAO,kBAAMkd,GAAKmS,OAAOC,GAAe,EAAjC,EACP1P,KAAM,kBAAMtC,GAAW+R,OAAOC,EAAxB,EAEb,EACD,SAASnvB,GAAT,GAAyO,IACjOiO,EAAIyU,EACJ0M,EAGAC,EAGAC,EARWxE,EAAsN,EAAtNA,SAAsN,IAA5MyE,OAAAA,OAA4M,MAAnMN,GAAmM,MAAxLF,QAAAA,OAAwL,MAA9K,EAA8K,MAA3KS,OAAQC,OAAmK,MAAvJ,EAAuJ,MAApJC,WAAAA,OAAoJ,MAAvI,OAAuI,MAA/HC,YAAAA,OAA+H,MAAjH,EAAiH,EAA9GhF,EAA8G,EAA9GA,UAA8G,IAAnGiF,SAAAA,OAAmG,SAAlFC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,WAAYC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAA4C,IAAlC7pB,KAAAA,OAAkC,MAA3B,YAA2B,EAAXsF,GAAW,cAGjOwkB,EAAc,EACdC,EAAmBrF,EAEnBsF,GAAa,EACbC,GAAoB,EAElBC,EAAWhC,GAAM3D,EAAUhuB,OAAS,EAAI,YAAcyJ,GACtDmI,EAASoc,EAAU,GACnBtuB,EAASsuB,EAAUA,EAAUhuB,OAAS,IACM,QAA7C+lB,GAAMzU,EAAKqiB,GAAUlC,0BAAuC,IAAP1L,OAAgB,EAASA,EAAG3mB,KAAKkS,EAAIM,EAAQlS,MACnGizB,EAAwBjH,GAAY,CAAC,EAAG,KAAM,CAAC9Z,EAAQlS,GAAS,CAC5DiK,OAAO,IAEXqkB,EAAY,CAAC,EAAG,MAEpB,IAAMxpB,EAAYmvB,GAAS,kBACpB5kB,GADmB,IAEtBof,SAAAA,EACAH,UAAAA,KAEJ,SAAS6E,IACLU,IACmB,YAAfR,EAEAX,EA1CZ,SAAwBA,GAA4D,IAAnDjE,EAAmD,uDAAxC,EAAGkE,EAAqC,uDAA7B,EACnD,OADgF,yDAG1ElE,GAAYiE,EAAUjE,GAAYkE,EADlCF,GAAYhE,GAAYiE,EAASjE,EAAUkE,EAEpD,CAsCqBuB,CAAexB,EAASoB,EAAkBR,EADpDU,EAAoBH,EAAc,IAAM,IAIxCnB,EAAUD,GAAYC,EAASoB,EAAkBR,GAC9B,WAAfD,GACAvuB,EAAUqqB,cAElB4E,GAAa,EACbJ,GAAYA,GACf,CAKD,SAASd,EAAOlU,GAIZ,GAHKqV,IACDrV,GAASA,GACb+T,GAAW/T,GACNoV,EAAY,CACb,IAAM5kB,EAAQrK,EAAUuZ,KAAKjU,KAAKD,IAAI,EAAGuoB,IACzCM,EAAS7jB,EAAM5O,MACX0yB,IACAD,EAASC,EAAsBD,IACnCe,EAAaC,EAAoB7kB,EAAMyf,KAAO8D,GAAW,CAC5D,CACDkB,GAAYA,EAASZ,GACjBe,IACoB,IAAhBF,IACAC,OACyBpxB,IAArBoxB,EAAiCA,EAAmBpB,GAExDmB,EAAcT,EApE9B,SAA+BV,EAASjE,EAAUkE,EAAOqB,GACrD,OAAOA,EAAoBtB,GAAWjE,EAAWkE,EAAQD,IAAYC,CACxE,CAmEewB,CAAsBzB,EAASoB,EAAkBR,EAAaU,IAAsBb,KArB5FJ,EAAe3P,OACfsQ,GAAcA,KA0BjB,CAOD,OADAH,IAJIC,GAAUA,KACVT,EAAiBG,EAAOL,IACTrvB,SAGZ,CACH4f,KAAM,WACFqQ,GAAUA,IACVV,EAAe3P,MAClB,EACDgR,OAAQ,SAACnK,GACL,OAAOnlB,EAAUuZ,KAAKjU,KAAKD,IAAI,EAAG8f,GACrC,EAER,CE1GD,IAAMoK,GAAsB,SAAC,GAAD,oBAAE1qB,EAAF,KAAKC,EAAL,KAAQ6X,EAAR,KAAWsO,EAAX,kCAAkCpmB,EAAlC,aAAwCC,EAAxC,aAA8C6X,EAA9C,aAAoDsO,EAApD,MACtBuE,GAAuB,CACzBpG,OAAQ,SACRzC,KAAM,OACN/B,OAAQ,UACRC,QAAS,WACTC,UAAW,cACX6D,OAAQ4G,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CzG,QAASyG,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CtG,OAAQsG,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDvG,QAASuG,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwB/K,GAC7B,GAAKA,EAEL,OAAOnmB,MAAMC,QAAQkmB,GACf6K,GAAoB7K,GACpB8K,GAAqB9K,EAC9B,C,iCCZD,SAASgL,GAA2Bj0B,EAAOk0B,EAA3C,GAA4F,EAApCb,SAAoC,IDX5DpK,ECWkCkK,EAA0B,EAA1BA,WAAerkB,GAAW,cAClFif,EAAiDjf,EAAjDif,UAAN,EAAuDjf,EAAtCof,SAAAA,OAAjB,MAA4B,IAA5B,IAAuDpf,EAAtBqjB,QAAAA,OAAjC,MAA2C,EAA3C,EAA8CjH,EAASpc,EAAToc,KAI9C,GAAqB,WAAjBpc,EAAQtF,UDhBgByf,ECgB6Bna,EAAQoc,ODd7DpoB,MAAMC,QAAQkmB,IACK,kBAAXA,GAAuB8K,GAAqB9K,ICagB,CAKpE,IAJA,IAAMkL,EAAkB/wB,GAAQ0L,GAC5BF,EAAQ,CAAEyf,MAAM,EAAOruB,MAAO+tB,EAAU,IACtCqG,EAAwB,GAC1B1K,EAAI,GACA9a,EAAMyf,MACVzf,EAAQulB,EAAgBN,OAAOnK,GAC/B0K,EAAsB3kB,KAAKb,EAAM5O,OACjC0pB,GAdQ,GAgBZqE,EAAYqG,EACZlG,EAAWxE,EAjBC,GAkBZwB,EAAO,QACV,CACD,IAAM3mB,EC5BV,SAAsBwP,EAASmgB,EAAWnG,GAAwF,+DAAJ,CAAC,EAAG,IAA3EqE,MAAAA,OAA2E,MAAnE,EAAmE,EAAhElE,EAAgE,EAAhEA,SAAgE,IAAtD0E,OAAAA,OAAsD,MAA7C,EAA6C,MAA1CE,WAAAA,OAA0C,MAA7B,OAA6B,EAArB5H,EAAqB,EAArBA,KAAM+C,EAAe,EAAfA,MAC/G,OAAOla,EAAQ3Q,SAAR,gBAAmB8wB,EAAYnG,IAA/B,mBAAkDE,GAAlD,GAA2D,CAC9DmE,MAAAA,EACAlE,SAAAA,EACAjF,OAAQ+K,GAAwB9I,GAChCtE,KAAM,OACNyN,WAAYzB,EAAS,EACrB0B,UAA0B,YAAfxB,EAA2B,YAAc,UAE3D,CDmBqByB,CAAav0B,EAAMuiB,MAAMvgB,QAASkyB,EAAWnG,GAAjC,QAAC,UACxBjf,GADuB,IAE1BsjB,OAAQD,EACRjE,SAAAA,EASAhD,KAAMA,KAiBV,OAPA3mB,EAAUiwB,SAAW,WACjBx0B,EAAM+H,IAAIgmB,EAAUA,EAAUhuB,OAAS,IACvCozB,GAAcA,GACjB,EAIM,WASH,IAAQxK,EAAgBpkB,EAAhBokB,YACR,GAAIA,EAAa,CACb,IAAMwL,EAAkB/wB,GAAQ0L,GAChC9O,EAAMy0B,gBAAgBN,EAAgBN,OAAOlL,EA7DrC,IA6DgE3oB,MAAOm0B,EAAgBN,OAAOlL,GAAa3oB,MA7D3G,GA8DX,CACDmgB,GAAKmS,QAAO,kBAAM/tB,EAAUub,QAAhB,GACf,CACJ,CEtED,SAASsS,GAAMvZ,EAAU6b,GACrB,IAAMzxB,EAAQub,YAAYC,MACpBkW,EAAe,SAAfA,EAAgB,GAAkB,IAC9BxC,EAD8B,EAAhB9T,UACQpb,EACxBkvB,GAAWuC,IACXnU,GAAWqU,KAAKD,GAChB9b,EAASsZ,EAAUuC,GAE1B,EAED,OADAvU,GAAKyU,KAAKD,GAAc,GACjB,kBAAMpU,GAAWqU,KAAKD,EAAtB,CACV,CCdD,SAASE,GAAT,GAA+E,IAA7C9G,EAA6C,EAA7CA,UAAWoE,EAAkC,EAAlCA,QAASkB,EAAyB,EAAzBA,SAAUF,EAAe,EAAfA,WACtD2B,EAAW,WAGb,OAFAzB,GAAYA,EAAStF,EAAUA,EAAUhuB,OAAS,IAClDozB,GAAcA,IACP,WAAS,CACnB,EACD,OAAOhB,EAAUC,GAAM0C,GAAW3C,GAAW2C,GAChD,CCLD,SAASC,GAAT,GAAwM,IAEhMC,EAFWjH,EAAqL,EAArLA,UAAqL,IAA1K1M,SAAAA,OAA0K,MAA/J,EAA+J,EAA5J1X,EAA4J,EAA5JA,IAAKC,EAAuJ,EAAvJA,IAAuJ,IAAlJgoB,MAAAA,OAAkJ,MAA1I,GAA0I,MAArIC,aAAAA,OAAqI,MAAtH,IAAsH,MAAjHoD,gBAAAA,OAAiH,MAA/F,IAA+F,MAA1FC,cAAAA,OAA0F,MAA1E,GAA0E,MAAtE9E,UAAAA,OAAsE,MAA1D,EAA0D,EAAvD0B,EAAuD,EAAvDA,aAAca,EAAyC,EAAzCA,OAAQU,EAAiC,EAAjCA,SAAUF,EAAuB,EAAvBA,WAAYD,EAAW,EAAXA,OACnLvhB,EAASoc,EAAU,GAEzB,SAASoH,EAActyB,GACnB,YAAgBV,IAARwH,GAAqB9G,EAAI8G,QAAiBxH,IAARyH,GAAqB/G,EAAI+G,CACtE,CACD,SAASwrB,EAAoBvyB,GACzB,YAAYV,IAARwH,EACOC,OACCzH,IAARyH,GAEGC,KAAKmjB,IAAIrjB,EAAM9G,GAAKgH,KAAKmjB,IAAIpjB,EAAM/G,GAD/B8G,EAC0CC,CACxD,CACD,SAASyrB,EAAevmB,GACC,OAArBkmB,QAAkD,IAArBA,GAAuCA,EAAiBnS,OACrFmS,EAAmB5xB,IAAQ,gBACvB2qB,UAAW,CAAC,EAAG,GACf1M,SAAU,GACPvS,GAHmB,IAItB6jB,OAAAA,EACAU,SAAU,SAACxwB,GACP,IAAIwO,EACS,OAAbgiB,QAAkC,IAAbA,GAA+BA,EAASxwB,GACjC,QAA3BwO,EAAKvC,EAAQukB,gBAA6B,IAAPhiB,GAAyBA,EAAGlS,KAAK2P,EAASjM,EACjF,EACDswB,WAAAA,EACAD,OAAAA,IAEP,CACD,SAASoC,EAAYxmB,GACjBumB,GAAe,QACX7rB,KAAM,SACNqmB,UAAWoF,EACXnF,QAASoF,EACT9E,UAAAA,GACGthB,GAEV,CACD,GAAIqmB,EAAcxjB,GAEd2jB,EAAY,CACRjU,SAAAA,EACA0M,UAAW,CAACpc,EAAQyjB,EAAoBzjB,UAG3C,CASD,IAAIlS,EAASmyB,EAAQvQ,EAAW1P,EACJ,qBAAjBmgB,IACPryB,EAASqyB,EAAaryB,IAC1B,IAEIse,EACA/b,EAHEuzB,EAAWH,EAAoB31B,GAC/B+1B,EAAUD,IAAa5rB,GAAO,EAAI,EAYxC0rB,EAAe,CACX7rB,KAAM,QACNukB,UAAW,CAACpc,EAAQ,GACpB0P,SAAAA,EACAwQ,aAAAA,EACAD,MAAAA,EACAxB,UAAAA,EACA0B,aAAAA,EACAuB,SAAU8B,EAAc11B,GAjBN,SAACoD,GACnBkb,EAAO/b,EACPA,EAAUa,EACVwe,EAAWD,GAAkBve,EAAIkb,EAAMI,GAAUC,QAChC,IAAZoX,GAAiB3yB,EAAI0yB,IACR,IAAbC,GAAkB3yB,EAAI0yB,IACvBD,EAAY,CAAEvH,UAAW,CAAClrB,EAAG0yB,GAAWlU,SAAAA,GAE/C,OASqDlf,GAEzD,CACD,MAAO,CACH0gB,KAAM,kBAA2B,OAArBmS,QAAkD,IAArBA,OAA8B,EAASA,EAAiBnS,MAA3F,EAEb,CCxFD,IAAM4S,GAAoB,iBAAO,CAC7BjsB,KAAM,SACNqmB,UAAW,IACXC,QAAS,GACTK,UAAW,GAJW,EAMpBuF,GAAyB,SAACj2B,GAAD,MAAa,CACxC+J,KAAM,SACNqmB,UAAW,IACXC,QAAoB,IAAXrwB,EAAe,EAAIoK,KAAKggB,KAAK,KAAO,GAC7CsG,UAAW,GAJgB,EAMzBwF,GAAc,iBAAO,CACvBnsB,KAAM,YACN0hB,KAAM,SACNgD,SAAU,GAHM,EAKd0H,GAAsB,CACxBpsB,KAAM,YACN0kB,SAAU,IAER2H,GAAqB,CACvB9sB,EAAG0sB,GACHzsB,EAAGysB,GACHxsB,EAAGwsB,GACHroB,OAAQqoB,GACRpoB,QAASooB,GACTnoB,QAASmoB,GACTloB,QAASkoB,GACTjoB,OAAQkoB,GACRjoB,OAAQioB,GACRxrB,MAAOwrB,GACPvnB,QAASwnB,GACTjP,gBAAiBiP,GACjB5Q,MAAO4Q,GACPxrB,QAASurB,IAEPI,GAAuB,SAACC,EAAD,GAA6B,IAAhBhI,EAAgB,EAAhBA,UACtC,OAAIA,EAAUhuB,OAAS,EACZ61B,IAGSC,GAAmBE,IAAaF,GAAmB1rB,SACpD4jB,EAAU,GAEhC,EClCKiI,GAAe,SAAC7vB,EAAKnG,GAEvB,MAAY,WAARmG,MAKiB,kBAAVnG,IAAsB8C,MAAMC,QAAQ/C,OAE1B,kBAAVA,IACP6lB,GAAQzd,KAAKpI,IACZA,EAAM2I,WAAW,SAKzB,E,8HCpBD,SAASstB,GAAT,GAAuK,EAAxIC,KAAwI,EAAlI9D,MAAkI,EAAnH+D,cAAmH,EAApGC,gBAAoG,EAAnFC,iBAAmF,EAAjEzD,OAAiE,EAAzDE,WAAyD,EAA7CC,YAA6C,EAAhC1K,KAAgC,EAA1B8J,QAA0B,IAAd5b,GAAc,cACnK,QAASvX,OAAO+T,KAAKwD,GAAYxW,MACpC,CACD,SAASu2B,GAAOt2B,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtBgK,WAAWhK,KACa,IAAxBA,EAAMmI,QAAQ,IACzB,CACD,SAASouB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACAzQ,GAAkB,GAAIyQ,EAC/B,CACD,SAASC,GAAmBlgB,EAAYpQ,GACpC,OAAOoQ,EAAWpQ,IAAQoQ,EAAU,SAAeA,CACtD,CCnBD,SAASmgB,GAAa12B,EAAOk0B,EAAWz0B,EAAQ8W,GAC5C,IAAMogB,EAAqBX,GAAa9B,EAAWz0B,GAC/CkS,OAA6BxP,IAApBoU,EAAW8R,KAAqB9R,EAAW8R,KAAOroB,EAAMT,MAmBrE,MAlBe,SAAXoS,GAAqBglB,GAAwC,kBAAXl3B,EAKlDkS,EAASoU,GAAkBmO,EAAWz0B,GAEjC62B,GAAO3kB,IAA6B,kBAAXlS,EAC9BkS,EAAS4kB,GAAY92B,IAEfqD,MAAMC,QAAQtD,IACpB62B,GAAO72B,IACW,kBAAXkS,IACPlS,EAAS82B,GAAY5kB,IAKrB7O,MAAMC,QAAQtD,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKkS,GAETlS,GAGA,CAACkS,EAAQlS,EAEvB,CCtCD,IAAMm3B,GAAe,CACjBC,MAAO,kBAAM73B,OAAOE,eAAeC,KAAK23B,QAAQ73B,UAAW,UAApD,GAEL83B,GAAU,CAAC,EACXC,GAAW,CAAC,E,YAIP7wB,GACP6wB,GAAS7wB,GAAO,WAGZ,YAFqBhE,IAAjB40B,GAAQ5wB,KACR4wB,GAAQ5wB,GAAOywB,GAAazwB,MACzB4wB,GAAQ5wB,EAClB,C,EALL,IAAK,IAAMA,MAAOywB,GAAc,GAArBzwB,ICQX,IAAM8wB,GAAoB,IAAIzuB,IAAI,CAAC,YAC7B0uB,GAA6B,SAAChD,EAAWl0B,EAAOP,GAA4B,IAApB8W,EAAoB,uDAAP,CAAC,EACxE,OAAO,SAAC4c,GACJ,IAAMgE,EAAkBV,GAAmBlgB,EAAY2d,IAAc,CAAC,EAMhE9B,EAAQ+E,EAAgB/E,OAAS7b,EAAW6b,OAAS,EAK3D,EAAsB7b,EAAhB4b,QAAAA,OAAN,MAAgB,EAAhB,EACAA,GAAoBtJ,GAAsBuJ,GAC1C,IAAMrE,EAAY2I,GAAa12B,EAAOk0B,EAAWz0B,EAAQ03B,GAMnDC,EAAiBrJ,EAAU,GAC3BsJ,EAAiBtJ,EAAUA,EAAUhuB,OAAS,GAC9Cu3B,EAAqBtB,GAAa9B,EAAWkD,GAC7CT,EAAqBX,GAAa9B,EAAWmD,GAC5C,oCAAyEnD,EAAzE,kBAA4FkD,EAA5F,iBAAmHC,EAAnH,cAAuID,EAAvI,sEAAmNA,EAAnN,qCAA8PC,EAA9P,8BACP,IAAIvoB,GAAU,gBACVif,UAAAA,EACA1M,SAAUrhB,EAAM6I,eACbsuB,GAHI,IAIPhF,QAAAA,EACAkB,SAAU,SAACxwB,GACP7C,EAAM+H,IAAIlF,GACVs0B,EAAgB9D,UAAY8D,EAAgB9D,SAASxwB,EACxD,EACDswB,WAAY,WACRA,IACAgE,EAAgBhE,YAAcgE,EAAgBhE,YACjD,IAEL,IAAKmE,IACAX,GACD5N,KACyB,IAAzBoO,EAAgB3tB,KAKhB,OAAOqrB,GAAuB/lB,GAE7B,GAA6B,YAAzBqoB,EAAgB3tB,KAAoB,CAKzC,IAAMjF,EAAYwwB,GAAQjmB,GAC1B,OAAO,kBAAMvK,EAAUse,MAAhB,CACV,CAKIoT,GAAoBkB,KACrBroB,GAAU,kBACHA,GACAgnB,GAAqB5B,EAAWplB,KAQvCA,EAAQof,WACRpf,EAAQof,SAAWrF,GAAsB/Z,EAAQof,WAEjDpf,EAAQikB,cACRjkB,EAAQikB,YAAclK,GAAsB/Z,EAAQikB,cAExD,IAAMtxB,EAAgBzB,EAAMuiB,MACtBxO,EAAUtS,GAAiBA,EAAcO,QAS/C,GAR+Bg1B,GAASH,SACpCI,GAAkBnvB,IAAIosB,KACrBplB,EAAQikB,aACc,WAAvBjkB,EAAQgkB,YACY,IAApBhkB,EAAQghB,SACRruB,GACAsS,aAAmBwjB,cAClB91B,EAAcga,WAAW4X,SAK1B,OAAOY,GAA2Bj0B,EAAOk0B,EAAWplB,GAMpD,IAAMvK,EAAYnB,GAAQ0L,GAC1B,OAAO,kBAAMvK,EAAUse,MAAhB,CAEd,CACJ,E,kCC9FD,SAAS2U,GAAe/1B,EAAeg2B,GAAuB,IACtDpmB,EADwCvC,EAAc,uDAAJ,CAAC,EAEjDuH,EAAWuR,GAAenmB,EAAeg2B,EAAS3oB,EAAQtH,QAChE,EAAkE6O,GAAY,CAAC,EAA/E,IAAME,WAAAA,OAAN,MAAmB9U,EAAcq0B,wBAA0B,CAAC,EAA5D,EACIhnB,EAAQ4oB,qBACRnhB,EAAazH,EAAQ4oB,oBAMzB,IAAMC,EAAethB,EACf,kBAAMuhB,GAAcn2B,EAAe4U,EAAUvH,EAA7C,EACA,kBAAMgU,QAAQC,SAAd,EAKA8U,GAA+D,QAAxCxmB,EAAK5P,EAAcq2B,uBAAoC,IAAPzmB,OAAgB,EAASA,EAAGhF,MACnG,WAAsB,IAArB0rB,EAAqB,uDAAN,EACd,EAAkExhB,EAAlE,IAAQ4f,cAAAA,OAAR,MAAwB,EAAxB,EAA2BC,EAA3B,EAA2BA,gBAAiBC,EAA5C,EAA4CA,iBAC5C,OAAO2B,GAAgBv2B,EAAeg2B,EAAStB,EAAgB4B,EAAc3B,EAAiBC,EAAkBvnB,EACnH,EACC,kBAAMgU,QAAQC,SAAd,EAKN,EAAiBxM,EAAT2f,EAAR,EAAQA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACyB,EAAcE,GACf,CAACA,EAAoBF,GAF3B,gBAAOM,EAAP,KAAcC,EAAd,KAGA,OAAOD,IAAQ/U,KAAKgV,EACvB,CAEG,OAAOpV,QAAQhI,IAAI,CAAC6c,IAAgBE,EAAmB/oB,EAAQsjB,QAEtE,CAID,SAASwF,GAAcn2B,EAAeqT,GAA0D,IACxFzD,EADwF,yDAAJ,CAAC,EAAG,IAA5C+gB,MAAAA,OAA4C,MAApC,EAAoC,EAAjCsF,EAAiC,EAAjCA,mBAAoBluB,EAAa,EAAbA,KAE/E,EAAsF/H,EAAc0mB,qBAAqBrT,GAAzH,IAAMyB,WAAAA,OAAN,MAAmB9U,EAAcq0B,uBAAjC,EAAyDxf,EAAzD,EAAyDA,cAAkB7W,GAA3E,cACM04B,EAAa12B,EAAcumB,SAAS,cACtC0P,IACAnhB,EAAamhB,GACjB,IAAMU,EAAa,GACbC,EAAqB7uB,IAAiD,QAAvC6H,EAAK5P,EAAcc,sBAAmC,IAAP8O,OAAgB,EAASA,EAAGinB,WAAW9uB,IAP/B,WAQjFrD,GACP,IAAMnG,EAAQyB,EAAcumB,SAAS7hB,GAC/BqQ,EAAc/W,EAAO0G,GAC3B,IAAKnG,QACemC,IAAhBqU,GACC6hB,GACGE,GAAqBF,EAAoBlyB,GAC7C,iBAEJ,IAAIgxB,GAAkB,QAAE/E,MAAAA,EAAOD,QAAS,GAAM5b,GAe9C,GAXI9U,EAAc+2B,oBAAsBjwB,EAAeT,IAAI3B,KACvDgxB,GAAkB,kBACXA,GADQ,IAEX3tB,MAAM,EACN4oB,MAAO,MAOVpyB,EAAMsiB,YAAa,CACpB,IAAMmW,EAAWh3B,EAAcga,WAAWmN,IACtC6P,IACAtB,EAAgBhF,QAAU5J,GAAgCkQ,EAAUtyB,GAE3E,CACD,IAAI5B,EAAYvE,EAAMiD,MAAMi0B,GAA2B/wB,EAAKnG,EAAOwW,EAAa2gB,IAC5E7O,GAAwB6P,KACxBA,EAAWtY,IAAI1Z,GACf5B,EAAYA,EAAU2e,MAAK,kBAAMiV,EAAWO,OAAOvyB,EAAxB,KAE/BiyB,EAAW3oB,KAAKlL,EA3CwE,EAQ5F,IAAK,IAAM4B,KAAO1G,EAAQ,EAAf0G,GAqCX,OAAO2c,QAAQhI,IAAIsd,GAAYlV,MAAK,WAChC5M,GAAiB4R,GAAUzmB,EAAe6U,EAC7C,GACJ,CACD,SAAS0hB,GAAgBv2B,EAAeg2B,GAAgF,IAAvEtB,EAAuE,uDAAvD,EAAGC,EAAoD,uDAAlC,EAAGC,EAA+B,uDAAZ,EAAGvnB,EAAS,uCAC9GspB,EAAa,GACbO,GAAsBl3B,EAAcq2B,gBAAgBzrB,KAAO,GAAK+pB,EAChEwC,EAA+C,IAArBvC,EAC1B,eAACpY,EAAD,uDAAK,EAAL,OAAWA,EAAImY,CAAf,EACA,eAACnY,EAAD,uDAAK,EAAL,OAAW0a,EAAqB1a,EAAImY,CAApC,EASN,OARAtzB,MAAMulB,KAAK5mB,EAAcq2B,iBACpBhoB,KAAK+oB,IACLziB,SAAQ,SAAC+C,EAAO8E,GACjBma,EAAW3oB,KAAK+nB,GAAere,EAAOse,GAAR,QAAC,UACxB3oB,GADuB,IAE1BsjB,MAAO+D,EAAgByC,EAAwB3a,MAChDiF,MAAK,kBAAM/J,EAAM1W,OAAO,oBAAqBg1B,EAAxC,IACX,IACM3U,QAAQhI,IAAIsd,EACtB,CAID,SAASS,GAAgBzvB,EAAGC,GACxB,OAAOD,EAAE0vB,iBAAiBzvB,EAC7B,CAOD,SAASkvB,GAAT,EAAiEpyB,GAAK,IAAtC4yB,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,eACrCC,EAAcF,EAAc75B,eAAeiH,KAAgC,IAAxB6yB,EAAe7yB,GAExE,OADA6yB,EAAe7yB,IAAO,EACf8yB,CACV,C,sCC7IKC,GAAuB,CACzBziB,GAAc0iB,QACd1iB,GAAc+E,OACd/E,GAAc2G,MACd3G,GAAcwC,MACdxC,GAAcsG,IACdtG,GAAc2iB,KACd3iB,GAAc4iB,MAEZC,GAAuB,UAAIJ,IAAsBrN,UACjD0N,GAAoBL,GAAqBn5B,OAC/C,SAASy5B,GAAY/3B,GACjB,OAAO,SAAC22B,GAAD,OAAgBtV,QAAQhI,IAAIsd,EAAW9S,KAAI,gBAAG/gB,EAAH,EAAGA,UAAWuK,EAAd,EAAcA,QAAd,ODZtD,SAA8BrN,EAAeqT,GAA0B,IAE/DvQ,EAFiDuK,EAAc,uDAAJ,CAAC,EAGhE,GAFArN,EAAcgB,OAAO,iBAAkBqS,GAEnChS,MAAMC,QAAQ+R,GAAa,CAC3B,IAAMsjB,EAAatjB,EAAWwQ,KAAI,SAACmS,GAAD,OAAaD,GAAe/1B,EAAeg2B,EAAS3oB,EAApD,IAClCvK,EAAYue,QAAQhI,IAAIsd,EAC3B,MACI,GAA0B,kBAAftjB,EACZvQ,EAAYizB,GAAe/1B,EAAeqT,EAAYhG,OAErD,CACD,IAAM2qB,EAA2C,oBAAf3kB,EAC5B8S,GAAenmB,EAAeqT,EAAYhG,EAAQtH,QAClDsN,EACNvQ,EAAYqzB,GAAcn2B,EAAeg4B,EAAoB3qB,EAChE,CACD,OAAOvK,EAAU2e,MAAK,kBAAMzhB,EAAcgB,OAAO,oBAAqBqS,EAAhD,GACzB,CCLiF4kB,CAAqBj4B,EAAe8C,EAAWuK,EAA3E,IAA3C,CACV,CACD,SAAS6qB,GAAqBl4B,GAC1B,IAAI2B,EAAUo2B,GAAY/3B,GACpBmN,EAmSV,WAAuB,MACnB,uBACK6H,GAAc0iB,QAAUS,IAAgB,KAD7C,UAEKnjB,GAAc+E,OAASoe,OAF5B,UAGKnjB,GAAcwC,MAAQ2gB,OAH3B,UAIKnjB,GAAcsG,IAAM6c,OAJzB,UAKKnjB,GAAc2iB,KAAOQ,OAL1B,UAMKnjB,GAAc2G,MAAQwc,OAN3B,UAOKnjB,GAAc4iB,KAAOO,MAP1B,CASH,CA7SiBC,GACVC,GAAkB,EAKhBC,EAA0B,SAAC7a,EAAKpK,GAClC,IAAMuB,EAAWuR,GAAenmB,EAAeqT,GAC/C,GAAIuB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkB7W,GAAtC,QAAiD4W,EAAjD,IACA6I,GAAM,0BAAKA,GAAQzf,GAAW6W,EACjC,CACD,OAAO4I,CACV,EAkBD,SAAS1c,EAAesM,EAASkrB,GA8B7B,IA7BA,IAAM34B,EAAQI,EAAcga,WACtB9X,EAAUlC,EAAcw4B,mBAAkB,IAAS,CAAC,EAKpD7B,EAAa,GAKb8B,EAAc,IAAI1xB,IAMpB2xB,EAAkB,CAAC,EAKnBC,EAAsBC,IAvBsB,WA8BvCpc,GACL,IAAMzU,EAAO8vB,GAAqBrb,GAC5Bqc,EAAY1rB,EAAMpF,GAClBxF,OAAuB7B,IAAhBd,EAAMmI,GAAsBnI,EAAMmI,GAAQ7F,EAAQ6F,GACzD+wB,EAAgB33B,EAAeoB,GAK/Bw2B,EAAchxB,IAASwwB,EAAoBM,EAAU1hB,SAAW,MAClD,IAAhB4hB,IACAJ,EAAsBnc,GAO1B,IAAIwc,EAAcz2B,IAASL,EAAQ6F,IAASxF,IAAS3C,EAAMmI,IAAS+wB,EAepE,GAXIE,GACAX,GACAr4B,EAAci5B,yBACdD,GAAc,GAMlBH,EAAUvB,eAAV,UAA+BoB,IAI7BG,EAAU1hB,UAA4B,OAAhB4hB,IAElBx2B,IAASs2B,EAAUK,UAErB33B,EAAoBgB,IACJ,mBAATA,EACP,iBAOJ,IAAM42B,EAqKlB,SAAgC7c,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAIjb,MAAMC,QAAQ+a,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACV,CA7KoC8c,CAAuBP,EAAUK,SAAU32B,GAChE82B,EAAoBF,GAEnBpxB,IAASwwB,GACNM,EAAU1hB,WACT6hB,GACDF,GAEHtc,EAAImc,GAAuBG,EAK1BQ,EAAiBj4B,MAAMC,QAAQiB,GAAQA,EAAO,CAACA,GAKjDg3B,EAAiBD,EAAethB,OAAOsgB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAoCV,EAA5BW,mBAAAA,OAAR,MAA6B,CAAC,EAA9B,EACMC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACh1B,GACnB20B,GAAoB,EACpBZ,EAAYvf,OAAOxU,GACnBm0B,EAAUtB,eAAe7yB,IAAO,CACnC,EACD,IAAK,IAAMA,KAAO+0B,EAAS,CACvB,IAAMpd,EAAOkd,EAAe70B,GACtB4X,EAAOkd,EAAmB90B,GAE5Bg0B,EAAgBj7B,eAAeiH,KAK/B2X,IAASC,EAKL9I,GAAkB6I,IAAS7I,GAAkB8I,IACxCF,GAAeC,EAAMC,IAAS6c,EAC/BO,EAAch1B,GAOdm0B,EAAUvB,cAAc5yB,IAAO,OAGrBhE,IAAT2b,EAELqd,EAAch1B,GAId+zB,EAAYra,IAAI1Z,QAGNhE,IAAT2b,GAAsBoc,EAAYpyB,IAAI3B,GAK3Cg1B,EAAch1B,GAOdm0B,EAAUvB,cAAc5yB,IAAO,EAEtC,CAKDm0B,EAAUK,SAAW32B,EACrBs2B,EAAUW,mBAAqBD,EAI3BV,EAAU1hB,WACVuhB,GAAkB,kBAAKA,GAAoBa,IAE3ClB,GAAmBr4B,EAAcW,wBACjC04B,GAAoB,GAOpBA,IAAsBL,GACtBrC,EAAW3oB,KAAX,MAAA2oB,GAAU,QAAS2C,EAAezV,KAAI,SAAC/gB,GAAD,MAAgB,CAClDA,UAAWA,EACXuK,SAAS,QAAEtF,KAAAA,GAASsF,GAFc,KA7LE,EA8BvCmP,EAAI,EAAGA,EAAIsb,GAAmBtb,IAAK,EAAnCA,GA0KT,GAAIic,EAAY7tB,KAAM,CAClB,IAAM+uB,EAAoB,CAAC,EAC3BlB,EAAY9jB,SAAQ,SAACjQ,GACjB,IAAMk1B,EAAiB55B,EAAc65B,cAAcn1B,QAC5BhE,IAAnBk5B,IACAD,EAAkBj1B,GAAOk1B,EAEhC,IACDjD,EAAW3oB,KAAK,CAAElL,UAAW62B,GAChC,CACD,IAAIG,EAAgB/3B,QAAQ40B,EAAWr4B,QAOvC,OANI+5B,IACkB,IAAlBz4B,EAAMgB,UACLZ,EAAci5B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBn4B,EAAQg1B,GAActV,QAAQC,SACxD,CAkBD,MAAO,CACHvgB,eAAAA,EACAwW,UAhBJ,SAAmBxP,EAAMoP,EAAU9J,GAC/B,IAAIuC,EAEJ,GAAIzC,EAAMpF,GAAMoP,WAAaA,EACzB,OAAOkK,QAAQC,UAEsB,QAAxC1R,EAAK5P,EAAcq2B,uBAAoC,IAAPzmB,GAAyBA,EAAG+E,SAAQ,SAAC+C,GAAY,IAAI9H,EAAI,OAAuC,QAA/BA,EAAK8H,EAAM5W,sBAAmC,IAAP8O,OAAgB,EAASA,EAAG2H,UAAUxP,EAAMoP,EAAY,IACjNhK,EAAMpF,GAAMoP,SAAWA,EACvB,IAAMwf,EAAa51B,EAAesM,EAAStF,GAC3C,IAAK,IAAMrD,KAAOyI,EACdA,EAAMzI,GAAK4yB,cAAgB,CAAC,EAEhC,OAAOX,CACV,EAIGoD,mBA5PJ,SAA4BC,GACxBr4B,EAAUq4B,EAAah6B,EAC1B,EA2PG62B,SAAU,kBAAM1pB,CAAN,EAEjB,CAUD,SAASgrB,KAAkC,IAAlBhhB,EAAkB,wDACvC,MAAO,CACHA,SAAAA,EACAmgB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBiC,mBAAoB,CAAC,EAE5B,CClTD,IAAM7C,GAAa,CACf7zB,UAAWwX,IAAwB,YAAgC,IAA7Bta,EAA6B,EAA7BA,cAAe2B,EAAc,EAAdA,QAMjD3B,EAAcc,iBAAmBd,EAAcc,eAAiBo3B,GAAqBl4B,IAIjFuB,EAAoBI,KACpBrC,EAAAA,EAAAA,YAAU,kBAAMqC,EAAQs4B,UAAUj6B,EAAxB,GAAwC,CAAC2B,GAE1D,IACDoB,KAAMuX,IAAwB,SAAC1a,GAC3B,IAAQmG,EAA0BnG,EAA1BmG,OAAQ/F,EAAkBJ,EAAlBI,cAChB,EAAkC+b,KAAlC,gBAAOC,EAAP,KAAkBke,EAAlB,KACMh6B,GAAkBH,EAAAA,EAAAA,YAAWd,IACnCK,EAAAA,EAAAA,YAAU,WACNU,EAAcgc,UAAYA,EAC1B,IAAMlZ,EAAY9C,EAAcc,gBAC5Bd,EAAcc,eAAeyW,UAAUvC,GAAc4iB,MAAO5b,EAAW,CACnEjW,OAAS7F,GAAmBA,EAAgB6F,QACxCA,IAERjD,IAAckZ,GACdlZ,EAAU2e,KAAKyY,EAEtB,GAAE,CAACle,GACP,KCtCC3P,GAAW,SAAC1E,EAAGC,GAAJ,OAAUQ,KAAKmjB,IAAI5jB,EAAIC,EAAvB,EACjB,SAASuyB,GAAWxyB,EAAGC,GAEnB,IAAMwyB,EAAS/tB,GAAS1E,EAAEL,EAAGM,EAAEN,GACzB+yB,EAAShuB,GAAS1E,EAAEJ,EAAGK,EAAEL,GAC/B,OAAOa,KAAKggB,KAAK,SAAAgS,EAAU,GAAV,SAAcC,EAAU,GAC5C,C,ICMKC,GAAAA,WACF,WAAYvkB,EAAOwkB,GAAuC,oEAAJ,CAAC,EAAxB37B,EAA2B,EAA3BA,mBA0D3B,IA1DsD,eAItDH,KAAK+7B,WAAa,KAIlB/7B,KAAKg8B,cAAgB,KAIrBh8B,KAAKi8B,kBAAoB,KAIzBj8B,KAAK87B,SAAW,CAAC,EACjB97B,KAAKk8B,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMrjB,EAAOujB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKN,WAIpBO,EAA0BZ,GAAW9iB,EAAKlH,OAAQ,CAAE7I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKuzB,GAAiBC,EAAtB,CAEA,IAAQ5kB,EAAUkB,EAAVlB,MACAyG,EAAcF,GAAAA,UACtB,EAAKme,QAAQ7sB,MAAb,kBAAuBmI,GAAvB,IAA8ByG,UAAAA,KAC9B,MAA4B,EAAK2d,SAAzBS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OACZH,IACDE,GAAWA,EAAQ,EAAKP,cAAepjB,GACvC,EAAKmjB,WAAa,EAAKC,eAE3BQ,GAAUA,EAAO,EAAKR,cAAepjB,EAT3B,CARA,CAkBb,EACD5Y,KAAKy8B,kBAAoB,SAACnlB,EAAOsB,GACxBvB,GAAiBC,KAEtB,EAAK0kB,cAAgB1kB,EACrB,EAAK2kB,kBAAoBS,GAAe9jB,EAAM,EAAKzY,oBAEnD8f,GAAKmS,OAAO,EAAK8J,aAAa,GACjC,EACDl8B,KAAK28B,gBAAkB,SAACrlB,EAAOsB,GAC3B,GAAKvB,GAAiBC,GAAtB,CAEA,EAAKslB,MACL,MAAgC,EAAKd,SAA7Be,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aACTC,EAAUZ,GAAWO,GAAe9jB,EAAM,EAAKzY,oBAAqB,EAAKi8B,SAC3E,EAAKL,YAAcc,GACnBA,EAAMvlB,EAAOylB,GAEjBD,GAAgBA,EAAaxlB,EAAOylB,EAP1B,CAQb,EAEI1lB,GAAiBC,GAAtB,CAEAtX,KAAK87B,SAAWA,EAChB97B,KAAKG,mBAAqBA,EAC1B,IAAMyY,EAAOpB,GAAiBF,GACxB0lB,EAAcN,GAAe9jB,EAAM5Y,KAAKG,oBACtCuX,EAAUslB,EAAVtlB,MACAyG,EAAcF,GAAAA,UACtBje,KAAKo8B,QAAU,EAAC,kBAAK1kB,GAAN,IAAayG,UAAAA,KAC5B,IAAQ8e,EAAmBnB,EAAnBmB,eACRA,GACIA,EAAe3lB,EAAO6kB,GAAWa,EAAah9B,KAAKo8B,UACvDp8B,KAAKk9B,gBAAkB7jB,GAAKvB,GAAgBkF,OAAQ,cAAehd,KAAKy8B,mBAAoB3kB,GAAgBkF,OAAQ,YAAahd,KAAK28B,iBAAkB7kB,GAAgBkF,OAAQ,gBAAiBhd,KAAK28B,iBAX5L,CAYb,C,6CACD,SAAeb,GACX97B,KAAK87B,SAAWA,CACnB,G,iBACD,WACI97B,KAAKk9B,iBAAmBl9B,KAAKk9B,kBAC7B7c,GAAW+R,OAAOpyB,KAAKk8B,YAC1B,K,EA/ECL,GAiFN,SAASa,GAAe9jB,EAAMzY,GAC1B,OAAOA,EAAqB,CAAEuX,MAAOvX,EAAmByY,EAAKlB,QAAWkB,CAC3E,CACD,SAASukB,GAAcj0B,EAAGC,GACtB,MAAO,CAAEN,EAAGK,EAAEL,EAAIM,EAAEN,EAAGC,EAAGI,EAAEJ,EAAIK,EAAEL,EACrC,CACD,SAASqzB,GAAT,EAA+BC,GAAS,IAAlB1kB,EAAkB,EAAlBA,MAClB,MAAO,CACHA,MAAAA,EACAwG,MAAOif,GAAczlB,EAAO0lB,GAAgBhB,IAC5C1qB,OAAQyrB,GAAczlB,EAAO2lB,GAAiBjB,IAC9Cjb,SAAUxY,GAAYyzB,EAAS,IAEtC,CACD,SAASiB,GAAiBjB,GACtB,OAAOA,EAAQ,EAClB,CACD,SAASgB,GAAgBhB,GACrB,OAAOA,EAAQA,EAAQv8B,OAAS,EACnC,CACD,SAAS8I,GAAYyzB,EAAS3a,GAC1B,GAAI2a,EAAQv8B,OAAS,EACjB,MAAO,CAAEgJ,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIiV,EAAIqe,EAAQv8B,OAAS,EACrBy9B,EAAmB,KACjBC,EAAYH,GAAgBhB,GAC3Bre,GAAK,IACRuf,EAAmBlB,EAAQre,KACvBwf,EAAUpf,UAAYmf,EAAiBnf,UACvCwK,GAAsBlH,MAG1B1D,IAEJ,IAAKuf,EACD,MAAO,CAAEz0B,EAAG,EAAGC,EAAG,GAEtB,IAAM00B,GAAQD,EAAUpf,UAAYmf,EAAiBnf,WAAa,IAClE,GAAa,IAATqf,EACA,MAAO,CAAE30B,EAAG,EAAGC,EAAG,GAEtB,IAAMgM,EAAkB,CACpBjM,GAAI00B,EAAU10B,EAAIy0B,EAAiBz0B,GAAK20B,EACxC10B,GAAIy0B,EAAUz0B,EAAIw0B,EAAiBx0B,GAAK00B,GAQ5C,OANI1oB,EAAgBjM,IAAMsxB,MACtBrlB,EAAgBjM,EAAI,GAEpBiM,EAAgBhM,IAAMqxB,MACtBrlB,EAAgBhM,EAAI,GAEjBgM,CACV,CChJD,SAAS2oB,GAAWC,GAChB,OAAOA,EAAKh0B,IAAMg0B,EAAKj0B,GAC1B,CACD,SAASk0B,GAAO79B,GAAuC,IAAhCP,EAAgC,uDAAvB,EAAGq+B,EAAoB,uDAAN,IAC7C,OAAOj0B,KAAKmjB,IAAIhtB,EAAQP,IAAWq+B,CACtC,CACD,SAASC,GAAc3f,EAAOjO,EAAQ1Q,GAAsB,IAAdkS,EAAc,uDAAL,GACnDyM,EAAMzM,OAASA,EACfyM,EAAM4f,YAAc5oB,GAAIjF,EAAOxG,IAAKwG,EAAOvG,IAAKwU,EAAMzM,QACtDyM,EAAMlU,MAAQyzB,GAAWl+B,GAAUk+B,GAAWxtB,IAC1C0tB,GAAOzf,EAAMlU,MAAO,EAAG,OAAWsX,MAAMpD,EAAMlU,UAC9CkU,EAAMlU,MAAQ,GAClBkU,EAAM6f,UACF7oB,GAAI3V,EAAOkK,IAAKlK,EAAOmK,IAAKwU,EAAMzM,QAAUyM,EAAM4f,aAClDH,GAAOzf,EAAM6f,YAAczc,MAAMpD,EAAM6f,cACvC7f,EAAM6f,UAAY,EACzB,CACD,SAASC,GAAa9f,EAAOjO,EAAQ1Q,EAAQkS,GACzCosB,GAAc3f,EAAMrV,EAAGoH,EAAOpH,EAAGtJ,EAAOsJ,EAAc,OAAX4I,QAA8B,IAAXA,OAAoB,EAASA,EAAOvD,SAClG2vB,GAAc3f,EAAMpV,EAAGmH,EAAOnH,EAAGvJ,EAAOuJ,EAAc,OAAX2I,QAA8B,IAAXA,OAAoB,EAASA,EAAOtD,QACrG,CACD,SAAS8vB,GAAiB1+B,EAAQ2+B,EAAU78B,GACxC9B,EAAOkK,IAAMpI,EAAOoI,IAAMy0B,EAASz0B,IACnClK,EAAOmK,IAAMnK,EAAOkK,IAAMg0B,GAAWS,EACxC,CAKD,SAASC,GAAyB5+B,EAAQiJ,EAAQnH,GAC9C9B,EAAOkK,IAAMjB,EAAOiB,IAAMpI,EAAOoI,IACjClK,EAAOmK,IAAMnK,EAAOkK,IAAMg0B,GAAWj1B,EACxC,CACD,SAAS41B,GAAqB7+B,EAAQiJ,EAAQnH,GAC1C88B,GAAyB5+B,EAAOsJ,EAAGL,EAAOK,EAAGxH,EAAOwH,GACpDs1B,GAAyB5+B,EAAOuJ,EAAGN,EAAOM,EAAGzH,EAAOyH,EACvD,CCZD,SAASu1B,GAA4BX,EAAMj0B,EAAKC,GAC5C,MAAO,CACHD,SAAaxH,IAARwH,EAAoBi0B,EAAKj0B,IAAMA,OAAMxH,EAC1CyH,SAAazH,IAARyH,EACCg0B,EAAKh0B,IAAMA,GAAOg0B,EAAKh0B,IAAMg0B,EAAKj0B,UAClCxH,EAEb,CAcD,SAASq8B,GAA4BC,EAAYC,GAC7C,IAAI/0B,EAAM+0B,EAAgB/0B,IAAM80B,EAAW90B,IACvCC,EAAM80B,EAAgB90B,IAAM60B,EAAW70B,IAG3C,GAAI80B,EAAgB90B,IAAM80B,EAAgB/0B,IACtC80B,EAAW70B,IAAM60B,EAAW90B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EADgC,KAC3BC,EAD2B,IAEpC,CACD,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EACjB,CAuCD,IAAM+0B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHp1B,IAAKq1B,GAAoBH,EAAaC,GACtCl1B,IAAKo1B,GAAoBH,EAAaE,GAE7C,CACD,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAC/B,CC1HD,SAASC,GAASrmB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACnC,CCGD,SAASsmB,GAAT,GAAgE,IAA7B7yB,EAA6B,EAA7BA,IAC/B,MAAO,CACHvD,EAAG,CAAEY,IAFmD,EAAxB8C,KAEhB7C,IAFwC,EAAlB2C,OAGtCvD,EAAG,CAAEW,IAAK2C,EAAK1C,IAHyC,EAAX4C,QAKpD,CCVD,SAAS4yB,GAAgBl1B,GACrB,YAAiB/H,IAAV+H,GAAiC,IAAVA,CACjC,CACD,SAASm1B,GAAT,GAA6C,IAAzBn1B,EAAyB,EAAzBA,MAAOsD,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/B,OAAS2xB,GAAgBl1B,KACpBk1B,GAAgB5xB,KAChB4xB,GAAgB3xB,EACxB,CACD,SAAS2B,GAAa0G,GAClB,OAAQupB,GAASvpB,IACbwpB,GAAexpB,IACfA,EAAO7M,GACP6M,EAAO1I,QACP0I,EAAOzI,SACPyI,EAAOxI,OACd,CACD,SAASgyB,GAAexpB,GACpB,OAAOypB,GAAczpB,EAAO/M,IAAMw2B,GAAczpB,EAAO9M,EAC1D,CACD,SAASu2B,GAAcv/B,GACnB,OAAOA,GAAmB,OAAVA,CACnB,CCfD,SAASw/B,GAAW5nB,EAAO1N,EAAO8zB,GAG9B,OAAOA,EADQ9zB,GADY0N,EAAQomB,EAGtC,CAID,SAASyB,GAAgB7nB,EAAOqmB,EAAW/zB,EAAO8zB,EAAa0B,GAI3D,YAHiBv9B,IAAbu9B,IACA9nB,EAAQ4nB,GAAW5nB,EAAO8nB,EAAU1B,IAEjCwB,GAAW5nB,EAAO1N,EAAO8zB,GAAeC,CAClD,CAID,SAAS0B,GAAe/B,GAAuD,IAAjDK,EAAiD,uDAArC,EAAG/zB,EAAkC,uDAA1B,EAAG8zB,EAAuB,uCAAV0B,EAAU,uCAC3E9B,EAAKj0B,IAAM81B,GAAgB7B,EAAKj0B,IAAKs0B,EAAW/zB,EAAO8zB,EAAa0B,GACpE9B,EAAKh0B,IAAM61B,GAAgB7B,EAAKh0B,IAAKq0B,EAAW/zB,EAAO8zB,EAAa0B,EACvE,CAID,SAASE,GAAcC,EAAvB,GAAsC,IAAR92B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAC7B22B,GAAeE,EAAI92B,EAAGA,EAAEk1B,UAAWl1B,EAAEmB,MAAOnB,EAAEi1B,aAC9C2B,GAAeE,EAAI72B,EAAGA,EAAEi1B,UAAWj1B,EAAEkB,MAAOlB,EAAEg1B,YACjD,CAgDD,SAAS8B,GAAc51B,GACnB,OAAI61B,OAAOC,UAAU91B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACtE,CACD,SAAS+1B,GAAcrC,EAAM9vB,GACzB8vB,EAAKj0B,IAAMi0B,EAAKj0B,IAAMmE,EACtB8vB,EAAKh0B,IAAMg0B,EAAKh0B,IAAMkE,CACzB,CAMD,SAASoyB,GAActC,EAAMuC,EAA7B,GAAqE,oBAA3Bh6B,EAA2B,KAAtBi6B,EAAsB,KAAZC,EAAY,KAC3DC,OAAuCn+B,IAA1Bg+B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3ErC,EAAc5oB,GAAIwoB,EAAKj0B,IAAKi0B,EAAKh0B,IAAK02B,GAE5CX,GAAe/B,EAAMuC,EAAWh6B,GAAMg6B,EAAWC,GAAWpC,EAAamC,EAAWj2B,MACvF,CAID,IAAMq2B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKp2B,GACvBy2B,GAAcL,EAAI92B,EAAGU,EAAW82B,IAChCL,GAAcL,EAAI72B,EAAGS,EAAW+2B,GACnC,CC7GD,SAASE,GAAmBz5B,EAAU21B,GAClC,OAAOuC,GHeX,SAA4BvnB,EAAOglB,GAC/B,IAAKA,EACD,OAAOhlB,EACX,IAAM+oB,EAAU/D,EAAe,CAAE7zB,EAAG6O,EAAMnL,KAAMzD,EAAG4O,EAAMtL,MACnDs0B,EAAchE,EAAe,CAAE7zB,EAAG6O,EAAMrL,MAAOvD,EAAG4O,EAAMpL,SAC9D,MAAO,CACHF,IAAKq0B,EAAQ33B,EACbyD,KAAMk0B,EAAQ53B,EACdyD,OAAQo0B,EAAY53B,EACpBuD,MAAOq0B,EAAY73B,EAE1B,CG1BkC83B,CAAmB55B,EAAS2P,wBAAyBgmB,GACvF,CCaD,IAAMkE,GAAsB,IAAInnB,QAK1BonB,GAAAA,WACF,WAAYt/B,IAAe,eAIvBvB,KAAK8gC,eAAiB,KACtB9gC,KAAK+gC,YAAa,EAClB/gC,KAAKghC,iBAAmB,KACxBhhC,KAAK89B,YAAc,CAAEj1B,EAAG,EAAGC,EAAG,GAI9B9I,KAAKihC,aAAc,EACnBjhC,KAAKkhC,uBAAwB,EAI7BlhC,KAAKmhC,QC7BY,CACrBt4B,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ID+BjC1J,KAAKuB,cAAgBA,CACxB,C,oCACD,SAAM6/B,GAA4C,oEAAJ,CAAC,EAAG,IAA7BC,aAAAA,OAA6B,SAI9C,IAAqC,IAAjCrhC,KAAKuB,cAAcgc,UAAvB,CAEA,IAAM0f,EAAiB,SAAC3lB,GAGpB,EAAKwL,gBACDue,GACA,EAAKA,aAAa7pB,GAAiBF,EAAO,QAAQI,MAEzD,EACK6kB,EAAU,SAACjlB,EAAOsB,GACpB,IAAIzH,EAEJ,EAA+C,EAAKoK,WAA5ChX,EAAR,EAAQA,KAAM+8B,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,cAC3Bh9B,GAAS+8B,IACL,EAAKR,gBACL,EAAKA,iBACT,EAAKA,eAAiB1oB,GAAc7T,GAE/B,EAAKu8B,mBAGd,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKQ,qBACD,EAAKjgC,cAAcwS,aACnB,EAAKxS,cAAcwS,WAAW0tB,oBAAqB,EACnD,EAAKlgC,cAAcwS,WAAWxU,YAAS0C,GAK3C+8B,IAAS,SAACtB,GACN,IAAIvsB,EAAIyU,EACJ9jB,EAAU,EAAK4/B,mBAAmBhE,GAAMr+B,OAAS,EAIrD,GAAIwL,GAAQ3C,KAAKpG,GAAU,CACvB,IAAM6/B,EAA8G,QAA9F/b,EAA8C,QAAxCzU,EAAK,EAAK5P,cAAcwS,kBAA+B,IAAP5C,OAAgB,EAASA,EAAG3I,cAA2B,IAAPod,OAAgB,EAASA,EAAGgc,UAAUlE,GAClK,GAAIiE,EAEA7/B,EADe27B,GAAWkE,IACN73B,WAAWhI,GAAW,IAEjD,CACD,EAAKg8B,YAAYJ,GAAQ57B,CAC5B,IAEe,OAAhBy/B,QAAwC,IAAhBA,GAAkCA,EAAYjqB,EAAOsB,GAChC,QAA5CzH,EAAK,EAAK5P,cAAcc,sBAAmC,IAAP8O,GAAyBA,EAAG2H,UAAUvC,GAAc2iB,MAAM,GAClH,EACKsD,EAAS,SAACllB,EAAOsB,GAEnB,MAAyE,EAAK2C,WAAtE+lB,EAAR,EAAQA,gBAAiBO,EAAzB,EAAyBA,kBAAmBC,EAA5C,EAA4CA,gBAAiBC,EAA7D,EAA6DA,OAE7D,GAAKT,GAAoB,EAAKR,eAA9B,CAEA,IAAQpvB,EAAWkH,EAAXlH,OAER,GAAImwB,GAA+C,OAA1B,EAAKb,iBAM1B,OALA,EAAKA,iBAAmBgB,GAAoBtwB,QAEd,OAA1B,EAAKsvB,mBACe,OAApBc,QAAgD,IAApBA,GAAsCA,EAAgB,EAAKd,oBAK/F,EAAKiB,WAAW,IAAKrpB,EAAKlB,MAAOhG,GACjC,EAAKuwB,WAAW,IAAKrpB,EAAKlB,MAAOhG,GAOjC,EAAKnQ,cAAca,SAKR,OAAX2/B,QAA8B,IAAXA,GAA6BA,EAAOzqB,EAAOsB,EAzBpD,CA0Bb,EACKkkB,EAAe,SAACxlB,EAAOsB,GAAR,OAAiB,EAAK+J,KAAKrL,EAAOsB,EAAlC,EACrB5Y,KAAKkiC,WAAa,IAAIrG,GAAWuF,EAAa,CAC1CnE,eAAAA,EACAV,QAAAA,EACAC,OAAAA,EACAM,aAAAA,GACD,CAAE38B,mBAAoBH,KAAKuB,cAAc4gC,yBAxFlC,CAyFb,G,kBACD,SAAK7qB,EAAOsB,GACR,IAAMmoB,EAAa/gC,KAAK+gC,WAExB,GADA/gC,KAAK4f,SACAmhB,EAAL,CAEA,IAAQ5f,EAAavI,EAAbuI,SACRnhB,KAAKm1B,eAAehU,GACpB,IAAQihB,EAAcpiC,KAAKub,WAAnB6mB,UACM,OAAdA,QAAoC,IAAdA,GAAgCA,EAAU9qB,EAAOsB,EAJ7D,CAKb,G,oBACD,WACI,IAAIzH,EAAIyU,EACR5lB,KAAK+gC,YAAa,EACd/gC,KAAKuB,cAAcwS,aACnB/T,KAAKuB,cAAcwS,WAAW0tB,oBAAqB,GAE5B,QAA1BtwB,EAAKnR,KAAKkiC,kBAA+B,IAAP/wB,GAAyBA,EAAGyrB,MAC/D58B,KAAKkiC,gBAAajgC,GACUjC,KAAKub,WAAzB+lB,iBACgBthC,KAAK8gC,iBACzB9gC,KAAK8gC,iBACL9gC,KAAK8gC,eAAiB,MAEmB,QAA5Clb,EAAK5lB,KAAKuB,cAAcc,sBAAmC,IAAPujB,GAAyBA,EAAG9M,UAAUvC,GAAc2iB,MAAM,EAClH,G,wBACD,SAAWwE,EAAM2E,EAAQ3wB,GACrB,IAAQnN,EAASvE,KAAKub,WAAdhX,KAER,GAAKmN,GAAW4wB,GAAW5E,EAAMn5B,EAAMvE,KAAKghC,kBAA5C,CAEA,IAAMuB,EAAYviC,KAAK0hC,mBAAmBhE,GACtC9f,EAAO5d,KAAK89B,YAAYJ,GAAQhsB,EAAOgsB,GAEvC19B,KAAKihC,aAAejhC,KAAKihC,YAAYvD,KACrC9f,ENlKZ,SAA0BlG,EAA1B,EAA+CypB,GAAS,IAArB13B,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IASpC,YARYzH,IAARwH,GAAqBiO,EAAQjO,EAE7BiO,EAAQypB,EAAUjsB,GAAIzL,EAAKiO,EAAOypB,EAAQ13B,KAAOE,KAAKD,IAAIgO,EAAOjO,QAEpDxH,IAARyH,GAAqBgO,EAAQhO,IAElCgO,EAAQypB,EAAUjsB,GAAIxL,EAAKgO,EAAOypB,EAAQz3B,KAAOC,KAAKF,IAAIiO,EAAOhO,IAE9DgO,CACV,CMwJkB8qB,CAAiB5kB,EAAM5d,KAAKihC,YAAYvD,GAAO19B,KAAKmhC,QAAQzD,KAEvE6E,EAAU16B,IAAI+V,EAPJ,CAQb,G,gCACD,WAAqB,WACjB,EAAyC5d,KAAKub,WAAtCknB,EAAR,EAAQA,gBAAiB9D,EAAzB,EAAyBA,YACjBn2B,GAAWxI,KAAKuB,cAAcwS,YAAc,CAAC,GAA7CvL,OACFk6B,EAAkB1iC,KAAKihC,YACzBwB,GAAmBjgC,EAAYigC,GAC1BziC,KAAKihC,cACNjhC,KAAKihC,YAAcjhC,KAAK2iC,yBAKxB3iC,KAAKihC,eADLwB,IAAmBj6B,INpJnC,SAAiCo5B,EAAjC,GAA0E,IAA5Bx1B,EAA4B,EAA5BA,IAAKG,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,OAAQD,EAAS,EAATA,MAC7D,MAAO,CACHxD,EAAGw1B,GAA4BuD,EAAU/4B,EAAG0D,EAAMF,GAClDvD,EAAGu1B,GAA4BuD,EAAU94B,EAAGsD,EAAKE,GAExD,CMgJkCs2B,CAAwBp6B,EAAOo5B,UAAWa,GAMrEziC,KAAKmhC,QN7Fb,WAA0D,IAA9BxC,EAA8B,uDAAhBF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH51B,EAAG61B,GAAmBC,EAAa,OAAQ,SAC3C71B,EAAG41B,GAAmBC,EAAa,MAAO,UAEjD,CMkFsBkE,CAAmBlE,GAK9B+D,IAAoB1iC,KAAKihC,aACzBz4B,GACAxI,KAAKihC,cACJjhC,KAAKkhC,uBACNlC,IAAS,SAACtB,GACF,EAAKgE,mBAAmBhE,KACxB,EAAKuD,YAAYvD,GNtHrC,SAA+Bl1B,EAAQy4B,GACnC,IAAM6B,EAAsB,CAAC,EAO7B,YANwB7gC,IAApBg/B,EAAYx3B,MACZq5B,EAAoBr5B,IAAMw3B,EAAYx3B,IAAMjB,EAAOiB,UAE/BxH,IAApBg/B,EAAYv3B,MACZo5B,EAAoBp5B,IAAMu3B,EAAYv3B,IAAMlB,EAAOiB,KAEhDq5B,CACV,CM6G4CC,CAAsBv6B,EAAOo5B,UAAUlE,GAAO,EAAKuD,YAAYvD,IAE/F,GAER,G,mCACD,WACI,MAAmE19B,KAAKub,WAA/C0lB,EAAzB,EAAQwB,gBAA8BO,EAAtC,EAAsCA,yBACtC,IAAK/B,IAAgBz+B,EAAYy+B,GAC7B,OAAO,EACX,IAAMgC,EAAqBhC,EAAYn/B,QAE/BiS,EAAe/T,KAAKuB,cAApBwS,WAER,IAAKA,IAAeA,EAAWvL,OAC3B,OAAO,EACX,IAAM06B,EDrNd,SAAwBrvB,EAASsvB,EAAoBhjC,GACjD,IAAMijC,EAAc5C,GAAmB3sB,EAAS1T,GACxCkjC,EAAWF,EAAXE,OAKR,OAJIA,IACAtD,GAAcqD,EAAYv6B,EAAGw6B,EAAO3xB,OAAO7I,GAC3Ck3B,GAAcqD,EAAYt6B,EAAGu6B,EAAO3xB,OAAO5I,IAExCs6B,CACV,CC6M8BE,CAAeL,EAAoBlvB,EAAWkG,KAAMja,KAAKuB,cAAc4gC,yBAC1FoB,EN/JZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHr6B,EAAGy1B,GAA4BsD,EAAU/4B,EAAGq6B,EAAer6B,GAC3DC,EAAGw1B,GAA4BsD,EAAU94B,EAAGo6B,EAAep6B,GAElE,CM0JiC06B,CAAwBzvB,EAAWvL,OAAOo5B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJvNpC,YAA2C,IAARn6B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAClC,MAAO,CAAEsD,IAAKtD,EAAEW,IAAK4C,MAAOxD,EAAEa,IAAK4C,OAAQxD,EAAEY,IAAK6C,KAAM1D,EAAEY,IAC7D,CIqN4Di6B,CAAwBH,IACzEvjC,KAAKkhC,wBAA0BuC,EAC3BA,IACAF,EAAsBtE,GAAwBwE,GAErD,CACD,OAAOF,CACV,G,4BACD,SAAepiB,GAAU,WACrB,EAAoGnhB,KAAKub,WAAjGhX,EAAR,EAAQA,KAAMo/B,EAAd,EAAcA,aAAchF,EAA5B,EAA4BA,YAAaiF,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,iBAAkBC,EAA3E,EAA2EA,oBACrE7C,EAAcjhC,KAAKihC,aAAe,CAAC,EACnC8C,EAAqB/E,IAAS,SAACtB,GACjC,GAAK4E,GAAW5E,EAAMn5B,EAAM,EAAKy8B,kBAAjC,CAGA,IAAI3qB,GAA8B,OAAhB4qB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYvD,KAAU,CAAC,EAC/FmG,IACAxtB,EAAa,CAAE5M,IAAK,EAAGC,IAAK,IAOhC,IAAMqrB,EAAkB4J,EAAc,IAAM,IACtC3J,EAAgB2J,EAAc,GAAK,IACnC9J,GAAU,gBACZvrB,KAAM,UACN6X,SAAUwiB,EAAexiB,EAASuc,GAAQ,EAC1C3I,gBAAAA,EACAC,cAAAA,EACArD,aAAc,IACdzB,UAAW,EACXD,UAAW,IACR2T,GACAvtB,GAKP,OAAO,EAAK2tB,wBAAwBtG,EAAM7I,EA1BzC,CA2BJ,IAED,OAAOjS,QAAQhI,IAAImpB,GAAoB/gB,KAAK8gB,EAC/C,G,qCACD,SAAwBpG,EAAMrnB,GAC1B,IAAMksB,EAAYviC,KAAK0hC,mBAAmBhE,GAC1C,OAAO6E,EAAUx/B,MAAMi0B,GAA2B0G,EAAM6E,EAAW,EAAGlsB,GACzE,G,2BACD,WAAgB,WACZ2oB,IAAS,SAACtB,GAAD,OAAU,EAAKgE,mBAAmBhE,GAAM/a,MAAxC,GACZ,G,gCAOD,SAAmB+a,GACf,IAAIvsB,EACE8yB,EAAU,QAAUvG,EAAKhpB,cACzBwvB,EAAsBlkC,KAAKuB,cAAcga,WAAW0oB,GAC1D,OAAOC,GAEDlkC,KAAKuB,cAAcumB,SAAS4V,GAAwD,QAAhDvsB,EAAKnR,KAAKuB,cAAcga,WAAWpZ,eAA4B,IAAPgP,OAAgB,EAASA,EAAGusB,KAAU,EAC3I,G,0BACD,SAAahmB,GAAO,WAChBsnB,IAAS,SAACtB,GAGN,GAAK4E,GAAW5E,EAFC,EAAKniB,WAAdhX,KAEoB,EAAKy8B,kBAAjC,CAEA,IAAQjtB,EAAe,EAAKxS,cAApBwS,WACFwuB,EAAY,EAAKb,mBAAmBhE,GAC1C,GAAI3pB,GAAcA,EAAWvL,OAAQ,CACjC,MAAqBuL,EAAWvL,OAAOo5B,UAAUlE,GAAzCj0B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACb64B,EAAU16B,IAAI6P,EAAMgmB,GAAQxoB,GAAIzL,EAAKC,EAAK,IAC7C,CANS,CAOb,GACJ,G,4CAMD,WAAiC,IACzByH,EADyB,OAE7B,GAAKnR,KAAKuB,cAAcO,QAAxB,CAEA,MAAkC9B,KAAKub,WAA/BhX,EAAR,EAAQA,KAAMk+B,EAAd,EAAcA,gBACN1uB,EAAe/T,KAAKuB,cAApBwS,WACR,GAAKvR,EAAYigC,IAAqB1uB,GAAe/T,KAAKihC,YAA1D,CAMAjhC,KAAK8iB,gBAKL,IAAMqhB,EAAc,CAAEt7B,EAAG,EAAGC,EAAG,GAC/Bk2B,IAAS,SAACtB,GACN,IAAM6E,EAAY,EAAKb,mBAAmBhE,GAC1C,GAAI6E,EAAW,CACX,IAAMhQ,EAASgQ,EAAUljC,MACzB8kC,EAAYzG,GNtQ5B,SAAoBztB,EAAQ1Q,GACxB,IAAIkS,EAAS,GACP2yB,EAAe3G,GAAWxtB,GAC1Bo0B,EAAe5G,GAAWl+B,GAOhC,OANI8kC,EAAeD,EACf3yB,EAAS4X,GAAS9pB,EAAOkK,IAAKlK,EAAOmK,IAAM06B,EAAcn0B,EAAOxG,KAE3D26B,EAAeC,IACpB5yB,EAAS4X,GAASpZ,EAAOxG,IAAKwG,EAAOvG,IAAM26B,EAAc9kC,EAAOkK,MAE7DD,EAAM,EAAG,EAAGiI,EACtB,CM2PmCD,CAAW,CAAE/H,IAAK8oB,EAAQ7oB,IAAK6oB,GAAU,EAAK0O,YAAYvD,GACjF,CACJ,IAID,IAAQ7uB,EAAsB7O,KAAKuB,cAAcga,WAAzC1M,kBACR7O,KAAKuB,cAAcO,QAAQgN,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1BsC,EAAK4C,EAAWkG,YAAyB,IAAP9I,GAAyBA,EAAGmzB,eAC/DvwB,EAAWwwB,eACXvkC,KAAKwhC,qBAKLxC,IAAS,SAACtB,GACN,GAAK4E,GAAW5E,EAAMn5B,EAAM,MAA5B,CAKA,IAAMg+B,EAAY,EAAKb,mBAAmBhE,GAC1C,EAAqB,EAAKuD,YAAYvD,GAA9Bj0B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACb64B,EAAU16B,IAAIqN,GAAIzL,EAAKC,EAAKy6B,EAAYzG,IAN9B,CAOb,GAzCS,CAJA,CA8Cb,G,0BACD,WAAe,IACPvsB,EADO,OAEX,GAAKnR,KAAKuB,cAAcO,QAAxB,CAEA8+B,GAAoB/4B,IAAI7H,KAAKuB,cAAevB,MAC5C,IAIMwkC,EAAsB1sB,GAJZ9X,KAAKuB,cAAcO,QAIkB,eAAe,SAACwV,GACjE,MAAsC,EAAKiE,WAAnChX,EAAR,EAAQA,KAAR,IAAciM,aACdjM,SADA,WACwB,EAAKxB,MAAMuU,EACtC,IACKmtB,EAAyB,WAEvBjiC,EADwB,EAAK+Y,WAAzBknB,mBAEJ,EAAKxB,YAAc,EAAK0B,wBAE/B,EACO5uB,EAAe/T,KAAKuB,cAApBwS,WACF2wB,EAA4B3wB,EAAWmD,iBAAiB,UAAWutB,GACrE1wB,IAAeA,EAAWvL,SACC,QAA1B2I,EAAK4C,EAAWkG,YAAyB,IAAP9I,GAAyBA,EAAGmzB,eAC/DvwB,EAAWwwB,gBAEfE,IAKA,IAAME,EAAqB7tB,GAAYkG,OAAQ,UAAU,kBAAM,EAAK4nB,gCAAX,IAKnDC,EAA2B9wB,EAAWmD,iBAAiB,aAAc,YAAiC,IAA9BgH,EAA8B,EAA9BA,MAAO4mB,EAAuB,EAAvBA,iBAC7E,EAAK/D,YAAc+D,IACnB9F,IAAS,SAACtB,GACN,IAAMra,EAAc,EAAKqe,mBAAmBhE,GACvCra,IAEL,EAAKya,YAAYJ,IAASxf,EAAMwf,GAAMK,UACtC1a,EAAYxb,IAAIwb,EAAYhkB,MAAQ6e,EAAMwf,GAAMK,WACnD,IACD,EAAKx8B,cAAca,SAE1B,IACD,OAAO,WACHuiC,IACAH,IACAE,IAC6B,OAA7BG,QAAkE,IAA7BA,GAA+CA,GACvF,CAjDS,CAkDb,G,sBACD,WACI,IAAM1jC,EAAQnB,KAAKuB,cAAcga,WACjC,EAA0Jpa,EAAlJoD,KAAAA,OAAR,WAA0JpD,EAApI0gC,kBAAAA,OAAtB,WAA0J1gC,EAAzGmgC,gBAAAA,OAAjD,WAA0JngC,EAAhFshC,gBAAAA,OAA1E,WAA0JthC,EAAvDw9B,YAAAA,OAAnG,MAAiHF,GAAjH,IAA0Jt9B,EAAzBwiC,aAAAA,OAAjI,SACA,yBACOxiC,GADP,IAEIoD,KAAAA,EACAs9B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACA9D,YAAAA,EACAgF,aAAAA,GAEP,K,EApZC9C,GAsZN,SAASyB,GAAWlO,EAAW7vB,EAAMy8B,GACjC,QAAkB,IAATz8B,GAAiBA,IAAS6vB,KACT,OAArB4M,GAA6BA,IAAqB5M,EAC1D,CAQD,SAAS4N,GAAoBtwB,GAA4B,IAApBqzB,EAAoB,uDAAJ,GAC7C3Q,EAAY,KAOhB,OANIzqB,KAAKmjB,IAAIpb,EAAO5I,GAAKi8B,EACrB3Q,EAAY,IAEPzqB,KAAKmjB,IAAIpb,EAAO7I,GAAKk8B,IAC1B3Q,EAAY,KAETA,CACV,CE7bD,IAAM7vB,GAAO,CACTI,IAAKkX,ICaT,YAA2F,IAAlEmpB,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,kBAAmB5jC,EAAkB,EAAlBA,cAC/D6jC,EAAeJ,GAASC,GAAcC,GAAYC,EAClDjD,GAAatgC,EAAAA,EAAAA,QAAO,MAClBzB,GAAuBmB,EAAAA,EAAAA,YAAWrB,GAAlCE,mBACF27B,EAAW,CACbmB,eAAgBkI,EAChB5I,QAAS0I,EACTzI,OAAQwI,EACRnI,MAAO,SAACvlB,EAAOsB,GACXspB,EAAWpgC,QAAU,KACrBojC,GAAYA,EAAS5tB,EAAOsB,EAC/B,IAEL/X,EAAAA,EAAAA,YAAU,WACqB,OAAvBqhC,EAAWpgC,SACXogC,EAAWpgC,QAAQujC,eAAevJ,EAEzC,IAMD/jB,GAAgBxW,EAAe,cAAe6jC,GAL9C,SAAuB9tB,GACnB4qB,EAAWpgC,QAAU,IAAI+5B,GAAWvkB,EAAOwkB,EAAU,CACjD37B,mBAAAA,GAEP,GAEDgZ,IAAiB,kBAAM+oB,EAAWpgC,SAAWogC,EAAWpgC,QAAQ86B,KAA/C,GACpB,IDrCGr4B,KAAMsX,IEGV,SAAiB1a,GACb,IAAsBmkC,EAAqCnkC,EAAnDokC,aAAiChkC,EAAkBJ,EAAlBI,cACnCgkC,EAAe1gC,GAAY,kBAAM,IAAIg8B,GAA0Bt/B,EAApC,KAGjCV,EAAAA,EAAAA,YAAU,kBAAMykC,GAAqBA,EAAkB9J,UAAU+J,EAAvD,GAAsE,CAACA,EAAcD,KAE/FzkC,EAAAA,EAAAA,YAAU,kBAAM0kC,EAAaC,cAAnB,GAAmC,CAACD,GACjD,KCfD,SAASn8B,GAActJ,GACnB,MAAwB,kBAAVA,GAAsBA,EAAM2I,WAAW,SACxD,CAUD,IAAMg9B,GAAmB,uDACzB,SAASC,GAAiB5jC,GACtB,IAAM8hB,EAAQ6hB,GAAiBE,KAAK7jC,GACpC,IAAK8hB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAA5B,GACA,MAAO,CADP,UAEH,CAED,SAASgiB,GAAiB9jC,EAAS+R,GAAoB,IAAXgyB,EAAW,uDAAH,EACvC,gEAA6E/jC,EAA7E,wDACT,MAA0B4jC,GAAiB5jC,GAA3C,gBAAOgkC,EAAP,KAAcnqB,EAAd,KAEA,GAAKmqB,EAAL,CAGA,IAAM3vB,EAAW6G,OAAO+oB,iBAAiBlyB,GAASmyB,iBAAiBF,GACnE,OAAI3vB,EACOA,EAAStG,OAEXzG,GAAcuS,GAEZiqB,GAAiBjqB,EAAU9H,EAASgyB,EAAQ,GAG5ClqB,CAXD,CAab,CCjCD,IAqBIsqB,GArBEC,GAAiB,IAAI59B,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE69B,GAAkB,SAAClgC,GAAD,OAASigC,GAAet+B,IAAI3B,EAA5B,EAIlBmgC,GAAsB,SAACtmC,EAAOspB,GAGhCtpB,EAAM+H,IAAIuhB,GAAI,GACdtpB,EAAM+H,IAAIuhB,EACb,EACKid,GAAgB,SAAC1jC,GAAD,OAAOA,IAAMiH,GAAUjH,IAAMmI,EAA7B,GAEtB,SAAWm7B,GACPA,EAAoB,MAAY,QAChCA,EAAoB,OAAa,SACjCA,EAAoB,KAAW,OAC/BA,EAAoB,MAAY,QAChCA,EAAoB,IAAU,MAC9BA,EAAoB,OAAa,QANrC,EAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAMK,GAAmB,SAACC,EAAQC,GAAT,OAAiB18B,WAAWy8B,EAAO57B,MAAM,MAAM67B,GAA/C,EACnBC,GAAyB,SAACC,EAAMC,GAAP,OAAgB,SAACC,EAAD,GAA0B,IAAhBr9B,EAAgB,EAAhBA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMs9B,EAAWt9B,EAAUqa,MAAM,sBACjC,GAAIijB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASh9B,EAAUqa,MAAM,oBAC/B,OAAI2iB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGlB,CAhB8B,EAiBzB13B,GAAgB,IAAI1G,IAAI,CAAC,IAAK,IAAK,MACnCw+B,GAAgC1+B,EAAmBie,QAAO,SAACpgB,GAAD,OAAU+I,GAAcpH,IAAI3B,EAA5B,IAChE,SAAS8gC,GAAgCxlC,GACrC,IAAMylC,EAAoB,GAW1B,OAVAF,GAA8B5wB,SAAQ,SAACjQ,GACnC,IAAMnG,EAAQyB,EAAcumB,SAAS7hB,QACvBhE,IAAVnC,IACAknC,EAAkBz3B,KAAK,CAACtJ,EAAKnG,EAAMT,QACnCS,EAAM+H,IAAI5B,EAAIwC,WAAW,SAAW,EAAI,GAE/C,IAEGu+B,EAAkBnnC,QAClB0B,EAAca,SACX4kC,CACV,CACD,IAAMC,GAAmB,CAErBl7B,MAAO,kBAAGlD,EAAH,EAAGA,EAAH,IAAU+D,YAAAA,OAAV,MAAwB,IAAxB,MAA6BF,aAAAA,OAA7B,MAA4C,IAA5C,SAAsD7D,EAAEa,IAAMb,EAAEY,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAA3G,EACPT,OAAQ,kBAAGnD,EAAH,EAAGA,EAAH,IAAU2D,WAAAA,OAAV,MAAuB,IAAvB,MAA4BE,cAAAA,OAA5B,MAA4C,IAA5C,SAAsD7D,EAAEY,IAAMZ,EAAEW,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAA1G,EACRP,IAAK,SAACw6B,EAAD,OAAUx6B,EAAV,EAAUA,IAAV,OAAoBtC,WAAWsC,EAA/B,EACLG,KAAM,SAACq6B,EAAD,OAAUr6B,EAAV,EAAUA,KAAV,OAAqBzC,WAAWyC,EAAhC,EACND,OAAQ,kBAAGxD,EAAH,EAAGA,EAAOsD,EAAV,EAAUA,IAAV,OAAoBtC,WAAWsC,IAAQtD,EAAEY,IAAMZ,EAAEW,IAAjD,EACR4C,MAAO,kBAAGxD,EAAH,EAAGA,EAAO0D,EAAV,EAAUA,KAAV,OAAqBzC,WAAWyC,IAAS1D,EAAEa,IAAMb,EAAEY,IAAnD,EAEPZ,EAAG49B,GAAuB,EAAG,IAC7B39B,EAAG29B,GAAuB,EAAG,KAE3BS,GAA2B,SAAC3nC,EAAQgC,EAAe4lC,GACrD,IAAMC,EAAa7lC,EAAci/B,qBAC3B3sB,EAAUtS,EAAcO,QACxBulC,EAAuBtB,iBAAiBlyB,GACtCyzB,EAAYD,EAAZC,QACF71B,EAAS,CAAC,EAGA,SAAZ61B,GACA/lC,EAAcgmC,eAAe,UAAWhoC,EAAO+nC,SAAW,SAK9DH,EAAYjxB,SAAQ,SAACjQ,GACjBwL,EAAOxL,GAAOghC,GAAiBhhC,GAAKmhC,EAAYC,EACnD,IAED9lC,EAAca,SACd,IAAMolC,EAAajmC,EAAci/B,qBAQjC,OAPA2G,EAAYjxB,SAAQ,SAACjQ,GAGjB,IAAMnG,EAAQyB,EAAcumB,SAAS7hB,GACrCmgC,GAAoBtmC,EAAO2R,EAAOxL,IAClC1G,EAAO0G,GAAOghC,GAAiBhhC,GAAKuhC,EAAYH,EACnD,IACM9nC,CACV,EAmHD,SAASkoC,GAAelmC,EAAehC,EAAQkS,EAAQ2E,GACnD,OAjNqB,SAAC7W,GACtB,OAAOT,OAAO+T,KAAKtT,GAAQ4D,KAAKgjC,GACnC,CA+MUuB,CAAiBnoC,GAnHa,SAACgC,EAAehC,GAA4C,IAApCkS,EAAoC,uDAA3B,CAAC,EAAG2E,EAAuB,uDAAP,CAAC,EAC3F7W,GAAS,UAAKA,GACd6W,GAAgB,UAAKA,GACrB,IAAMuxB,EAAuB7oC,OAAO+T,KAAKtT,GAAQ8mB,OAAO8f,IAGpDyB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqBzxB,SAAQ,SAACjQ,GAC1B,IAAMnG,EAAQyB,EAAcumB,SAAS7hB,GACrC,GAAK1E,EAAcsmB,SAAS5hB,GAA5B,CAEA,IAGI8hC,EAHA5f,EAAO1W,EAAOxL,GACd+hC,EAAW1gB,GAAuBa,GAChCiB,EAAK7pB,EAAO0G,GAMlB,GAAI8O,GAAkBqU,GAAK,CACvB,IAAM6e,EAAe7e,EAAGvpB,OAClBqoC,EAAsB,OAAV9e,EAAG,GAAc,EAAI,EACvCjB,EAAOiB,EAAG8e,GACVF,EAAW1gB,GAAuBa,GAClC,IAAK,IAAIpK,EAAImqB,EAAWnqB,EAAIkqB,EAAclqB,IACjCgqB,EAMSzgB,GAAuB8B,EAAGrL,KALpCgqB,EAASzgB,GAAuB8B,EAAGrL,OACdiqB,GAChB3B,GAAc2B,IAAa3B,GAAc0B,EAMzD,MAEGA,EAASzgB,GAAuB8B,GAEpC,GAAI4e,IAAaD,EAGb,GAAI1B,GAAc2B,IAAa3B,GAAc0B,GAAS,CAClD,IAAMjmC,EAAUhC,EAAMT,MACC,kBAAZyC,GACPhC,EAAM+H,IAAIiC,WAAWhI,IAEP,kBAAPsnB,EACP7pB,EAAO0G,GAAO6D,WAAWsf,GAEpBxmB,MAAMC,QAAQumB,IAAO2e,IAAWj9B,KACrCvL,EAAO0G,GAAOmjB,EAAGhE,IAAItb,YAE5B,MACsB,OAAbk+B,QAAkC,IAAbA,OAAsB,EAASA,EAASz+B,aACvD,OAAXw+B,QAA8B,IAAXA,OAAoB,EAASA,EAAOx+B,aAC9C,IAAT4e,GAAqB,IAAPiB,GAGF,IAATjB,EACAroB,EAAM+H,IAAIkgC,EAAOx+B,UAAU4e,IAG3B5oB,EAAO0G,GAAO+hC,EAASz+B,UAAU6f,IAMhCye,IACDD,EACIb,GAAgCxlC,GACpCsmC,GAAsC,GAE1CC,EAAqBv4B,KAAKtJ,GAC1BmQ,EAAcnQ,QACahE,IAAvBmU,EAAcnQ,GACRmQ,EAAcnQ,GACd1G,EAAO0G,GACjBmgC,GAAoBtmC,EAAOspB,GApEzB,CAuEb,IACG0e,EAAqBjoC,OAAQ,CAC7B,IAAMsoC,EAAUL,EAAqB7/B,QAAQ,WAAa,EACpD+U,OAAOorB,YACP,KACAC,EAAkBnB,GAAyB3nC,EAAQgC,EAAeumC,GAaxE,OAXIF,EAAuB/nC,QACvB+nC,EAAuB1xB,SAAQ,YAAkB,oBAAhBjQ,EAAgB,KAAXnG,EAAW,KAC7CyB,EAAcumB,SAAS7hB,GAAK4B,IAAI/H,EACnC,IAGLyB,EAAca,SAEV3B,GAAyB,OAAZ0nC,GACbnrB,OAAOsrB,SAAS,CAAEl8B,IAAK+7B,IAEpB,CAAE5oC,OAAQ8oC,EAAiBjyB,cAAAA,EACrC,CAEG,MAAO,CAAE7W,OAAAA,EAAQ6W,cAAAA,EAExB,CAUSmyB,CAAiChnC,EAAehC,EAAQkS,EAAQ2E,GAChE,CAAE7W,OAAAA,EAAQ6W,cAAAA,EACnB,CChOD,IAAMoyB,GAAkB,SAACjnC,EAAehC,EAAQkS,EAAQ2E,GACpD,IAAMD,EFuCV,SAA6B5U,EAA7B,EAA2D6U,GAAe,IAAzB7W,EAAyB,oBAChEsU,EAAUtS,EAAcO,QAC9B,KAAM+R,aAAmB+iB,SACrB,MAAO,CAAEr3B,OAAAA,EAAQ6W,cAAAA,GAiBrB,IAAK,IAAMnQ,KAdPmQ,IACAA,GAAgB,UAAKA,IAGzB7U,EAAcqU,OAAOM,SAAQ,SAACpW,GAC1B,IAAMgC,EAAUhC,EAAMT,MACtB,GAAK+J,GAActH,GAAnB,CAEA,IAAMqU,EAAWyvB,GAAiB9jC,EAAS+R,GACvCsC,GACArW,EAAM+H,IAAIsO,EAHJ,CAIb,IAGiB5W,EAAQ,CACtB,IAAMuC,EAAUvC,EAAO0G,GACvB,GAAKmD,GAActH,GAAnB,CAEA,IAAMqU,EAAWyvB,GAAiB9jC,EAAS+R,GACtCsC,IAGL5W,EAAO0G,GAAOkQ,EAIVC,QAAwCnU,IAAvBmU,EAAcnQ,KAC/BmQ,EAAcnQ,GAAOnE,GAVb,CAYf,CACD,MAAO,CAAEvC,OAAAA,EAAQ6W,cAAAA,EACpB,CE5EoBqyB,CAAoBlnC,EAAehC,EAAQ6W,GAG5D,OAAOqxB,GAAelmC,EAFtBhC,EAAS4W,EAAS5W,OAE2BkS,EAD7C2E,EAAgBD,EAASC,cAE5B,ECXKsyB,GAAuB,CAAE5mC,QAAS,MAClC6mC,GAA2B,CAAE7mC,SAAS,G,sBCkBtC8mC,GAAe9pC,OAAO+T,KAAK1O,GAC3B0kC,GAAcD,GAAa/oC,OAC3BipC,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAMEC,GAAAA,WACF,cAAgF,WAAlE1nC,EAAkE,EAAlEA,OAAQF,EAA0D,EAA1DA,MAAOO,EAAmD,EAAnDA,oBAAqBR,EAA8B,EAA9BA,YAAgB0N,EAAc,uDAAJ,CAAC,GAAG,eAK5E5O,KAAK8B,QAAU,KAIf9B,KAAKqF,SAAW,IAAIiD,IAIpBtI,KAAKqD,eAAgB,EACrBrD,KAAKiD,uBAAwB,EAQ7BjD,KAAKs4B,mBAAqB,KAM1Bt4B,KAAK4V,OAAS,IAAIlO,IAKlB1H,KAAKud,WAAY,EAKjBvd,KAAKgpC,mBAAqB,IAAIthC,IAM9B1H,KAAKipC,iBAAmB,CAAC,EAIzBjpC,KAAK4hB,OAAS,CAAC,EAMf5hB,KAAKkpC,uBAAyB,CAAC,EAC/BlpC,KAAKmpC,aAAe,kBAAM,EAAK5mC,OAAO,SAAU,EAAKoM,aAAjC,EACpB3O,KAAKoC,OAAS,WACL,EAAKN,UAEV,EAAKsnC,eACL,EAAKC,eAAe,EAAKvnC,QAAS,EAAKsS,YAAa,EAAKjT,MAAM2N,MAAO,EAAKiF,YAC9E,EACD/T,KAAKspC,eAAiB,kBAAMrpB,GAAK7d,OAAO,EAAKA,QAAQ,GAAO,EAAtC,EACtB,IAAQuM,EAA8BzN,EAA9ByN,aAAcyF,EAAgBlT,EAAhBkT,YACtBpU,KAAK2O,aAAeA,EACpB3O,KAAKupC,YAAL,UAAuB56B,GACvB3O,KAAKwpC,cAAgBroC,EAAMgB,SAAN,UAAqBwM,GAAiB,CAAC,EAC5D3O,KAAKoU,YAAcA,EACnBpU,KAAKqB,OAASA,EACdrB,KAAKmB,MAAQA,EACbnB,KAAK6lC,MAAQxkC,EAASA,EAAOwkC,MAAQ,EAAI,EACzC7lC,KAAK0B,oBAAsBA,EAC3B1B,KAAK4O,QAAUA,EACf5O,KAAKiD,sBAAwBA,EAAsB9B,GACnDnB,KAAKqD,cAAgBA,EAAclC,GAC/BnB,KAAKqD,gBACLrD,KAAK43B,gBAAkB,IAAItvB,KAE/BtI,KAAKw6B,uBAAyBl3B,QAAQjC,GAAUA,EAAOS,SAWvD,MAA+C9B,KAAKuU,4BAA4BpT,GAAxE82B,EAAR,EAAQA,WAAewR,GAAvB,cACA,IAAK,IAAMxjC,KAAOwjC,EAAqB,CACnC,IAAM3pC,EAAQ2pC,EAAoBxjC,QACRhE,IAAtB0M,EAAa1I,IAAsByC,EAAc5I,KACjDA,EAAM+H,IAAI8G,EAAa1I,IAAM,GACzBmiB,GAAwB6P,IACxBA,EAAWtY,IAAI1Z,GAG1B,CACJ,C,0DAQD,SAA4ByjC,GACxB,MAAO,CAAC,CACX,G,mBACD,SAAM3iC,GAAU,IACRoK,EADQ,OAEZnR,KAAK8B,QAAUiF,EACX/G,KAAK+T,YACL/T,KAAK+T,WAAW/M,MAAMD,GAEtB/G,KAAKqB,QAAUrB,KAAKqD,gBAAkBrD,KAAKiD,wBAC3CjD,KAAK2pC,sBAA+C,QAAtBx4B,EAAKnR,KAAKqB,cAA2B,IAAP8P,OAAgB,EAASA,EAAGy4B,gBAAgB5pC,OAE5GA,KAAK4V,OAAOM,SAAQ,SAACpW,EAAOmG,GAAR,OAAgB,EAAK4jC,kBAAkB5jC,EAAKnG,EAA5C,IACf6oC,GAAyB7mC,SC1JtC,WAEI,GADA6mC,GAAyB7mC,SAAU,EAC9BrB,EAEL,GAAIuc,OAAO8sB,WAAY,CACnB,IAAMC,EAAmB/sB,OAAO8sB,WAAW,4BACrCE,EAA8B,kBAAOtB,GAAqB5mC,QAAUioC,EAAiBE,OAAvD,EACpCF,EAAiBG,YAAYF,GAC7BA,GACH,MAEGtB,GAAqB5mC,SAAU,CAEtC,CD8IWqoC,GAEJnqC,KAAKs4B,mBAC4B,UAA7Bt4B,KAAK0B,sBAE8B,WAA7B1B,KAAK0B,qBAEDgnC,GAAqB5mC,SAC/B9B,KAAKqB,QACLrB,KAAKqB,OAAOgE,SAASsa,IAAI3f,MAC7BA,KAAKoF,SAASpF,KAAKmB,MACtB,G,qBACD,WACI,IAAIgQ,EAAIyU,EAAIwkB,EAOZ,IAAK,IAAMnkC,KANgB,QAA1BkL,EAAKnR,KAAK+T,kBAA+B,IAAP5C,GAAyBA,EAAGlK,UAC/DoZ,GAAW+R,OAAOpyB,KAAKmpC,cACvB9oB,GAAWje,OAAOpC,KAAKoC,QACvBpC,KAAKgpC,mBAAmB9yB,SAAQ,SAACsiB,GAAD,OAAYA,GAAZ,IACM,QAArC5S,EAAK5lB,KAAK2pC,6BAA0C,IAAP/jB,GAAyBA,EAAG3mB,KAAKe,MACxD,QAAtBoqC,EAAKpqC,KAAKqB,cAA2B,IAAP+oC,GAAyBA,EAAG/kC,SAASoV,OAAOza,MACzDA,KAAK4hB,OACnB5hB,KAAK4hB,OAAO3b,GAAKwc,QAErBziB,KAAK8B,QAAU,IAClB,G,+BACD,SAAkBmE,EAAKnG,GAAO,WACpBuqC,EAAmBhiC,EAAeT,IAAI3B,GACtCqkC,EAAiBxqC,EAAMyiB,GAAG,UAAU,SAACgoB,GACvC,EAAK57B,aAAa1I,GAAOskC,EACzB,EAAKppC,MAAMgyB,UACPlT,GAAKmS,OAAO,EAAK+W,cAAc,GAAO,GACtCkB,GAAoB,EAAKt2B,aACzB,EAAKA,WAAWy2B,kBAAmB,EAE1C,IACKC,EAAwB3qC,EAAMyiB,GAAG,gBAAiBviB,KAAKspC,gBAC7DtpC,KAAKgpC,mBAAmBnhC,IAAI5B,GAAK,WAC7BqkC,IACAG,GACH,GACJ,G,8BACD,SAAiBC,GAIb,OAAK1qC,KAAK8B,SACL9B,KAAK2qC,0BACN3qC,KAAKsJ,OAASohC,EAAMphC,KAEjBtJ,KAAK2qC,yBAAyB3qC,KAAK8B,QAAS4oC,EAAM5oC,SAD9C,CAEd,G,0BACD,SAAa8oC,EAAeC,EAAUjlC,EAAmBa,EAAcqkC,EAA2BnkC,GAA0B,WAClHX,EAAW,GAQjB,IAAK,IAAI+X,EAAI,EAAGA,EAAI8qB,GAAa9qB,IAAK,CAClC,IAAM3a,EAAOwlC,GAAa7qB,GAC1B,EAAiC5Z,EAAmBf,GAA5Cc,EAAR,EAAQA,UAAWjD,EAAnB,EAAmBA,UAMfiD,EAAU0mC,IAAkB3pC,GAC5B+E,EAASuJ,MAAKiE,EAAAA,EAAAA,eAAcvS,GAAD,QAAC,QACxBgF,IAAK7C,GACFwnC,GAFoB,IAGvBrpC,cAAevB,QAG1B,CACD,IAAKA,KAAK+T,YAAc+2B,EAA2B,CAC/C9qC,KAAK+T,WAAa,IAAI+2B,EAA0BrkC,EAAczG,KAAK2O,aAAc3O,KAAKqB,QAAUrB,KAAKqB,OAAO0S,YAC5G,IAAQxN,EAA0DqkC,EAA1DrkC,SAAUiC,EAAgDoiC,EAAhDpiC,OAAQjE,EAAwCqmC,EAAxCrmC,KAAMk+B,EAAkCmI,EAAlCnI,gBAAiBsI,EAAiBH,EAAjBG,aACjD/qC,KAAK+T,WAAWi3B,WAAW,CACvBzkC,SAAAA,EACAiC,OAAAA,EACAyiC,oBAAqB3nC,QAAQiB,IACxBk+B,GAAmBjgC,EAAYigC,GACpClhC,cAAevB,KACfspC,eAAgB,kBAAM,EAAKA,gBAAX,EAQhB4B,cAAiC,kBAAX1iC,EAAsBA,EAAS,OACrD2iC,uBAAwBxkC,EACxBokC,aAAAA,GAEP,CACD,OAAO/kC,CACV,G,0BACD,WACIhG,KAAKorC,MAAMprC,KAAKoU,YAAapU,KAAK2O,aAAc3O,KAAK4O,QAAS5O,KAAKmB,MACtE,G,gCAMD,WACI,OAAOnB,KAAK8B,QACN9B,KAAKqrC,2BAA2BrrC,KAAK8B,QAAS9B,KAAKmB,ORjQxC,CACrB0H,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,GQoQpC,G,4BACD,SAAezD,GACX,OAAOjG,KAAK2O,aAAa1I,EAC5B,G,4BACD,SAAeA,EAAKnG,GAChBE,KAAK2O,aAAa1I,GAAOnG,CAC5B,G,kCAQD,SAAqBP,GAA0B,IAAlB+rC,IAAkB,yDAC3C,OAAOtrC,KAAKurC,iCAAiChsC,EAAQS,KAAKmB,MAAOmqC,EACpE,G,sBAKD,SAASnqC,IACDA,EAAM0N,mBAAqB7O,KAAKmB,MAAM0N,oBACtC7O,KAAKspC,iBAETtpC,KAAKmB,MAAQA,EAIb,IAAK,IAAI4c,EAAI,EAAGA,EAAI+qB,GAAkBjpC,OAAQke,IAAK,CAC/C,IAAM9X,EAAM6iC,GAAkB/qB,GAC1B/d,KAAKkpC,uBAAuBjjC,KAC5BjG,KAAKkpC,uBAAuBjjC,YACrBjG,KAAKkpC,uBAAuBjjC,IAEvC,IAAM4R,EAAW1W,EAAM,KAAO8E,GAC1B4R,IACA7X,KAAKkpC,uBAAuBjjC,GAAOjG,KAAKuiB,GAAGtc,EAAK4R,GAEvD,CACD7X,KAAKipC,iBEjTb,SAAqCp1B,EAAS+J,EAAMC,GAChD,IAAQoa,EAAera,EAAfqa,WACR,IAAK,IAAMhyB,KAAO2X,EAAM,CACpB,IAAM4tB,EAAY5tB,EAAK3X,GACjBwlC,EAAY5tB,EAAK5X,GACvB,GAAIyC,EAAc8iC,GAKd33B,EAAQkU,SAAS9hB,EAAKulC,GAClBpjB,GAAwB6P,IACxBA,EAAWtY,IAAI1Z,QAUlB,GAAIyC,EAAc+iC,GAKnB53B,EAAQkU,SAAS9hB,EAAKod,GAAYmoB,EAAW,CAAEnpB,MAAOxO,KAClDuU,GAAwB6P,IACxBA,EAAWO,OAAOvyB,QAGrB,GAAIwlC,IAAcD,EAMnB,GAAI33B,EAAQgU,SAAS5hB,GAAM,CACvB,IAAMylC,EAAgB73B,EAAQiU,SAAS7hB,IAEtCylC,EAActpB,aAAespB,EAAc7jC,IAAI2jC,EACnD,KACI,CACD,IAAMjB,EAAc12B,EAAQ83B,eAAe1lC,GAC3C4N,EAAQkU,SAAS9hB,EAAKod,QAA4BphB,IAAhBsoC,EAA4BA,EAAciB,GAC/E,CAER,CAED,IAAK,IAAMvlC,KAAO4X,OACI5b,IAAd2b,EAAK3X,IACL4N,EAAQ+3B,YAAY3lC,GAE5B,OAAO2X,CACV,CF0P+BiuB,CAA4B7rC,KAAMA,KAAKuU,4BAA4BpT,GAAQnB,KAAKipC,iBAC3G,G,sBACD,WACI,OAAOjpC,KAAKmB,KACf,G,wBAID,SAAWiC,GACP,IAAI+N,EACJ,OAAsC,QAA9BA,EAAKnR,KAAKmB,MAAMoC,gBAA6B,IAAP4N,OAAgB,EAASA,EAAG/N,EAC7E,G,kCAID,WACI,OAAOpD,KAAKmB,MAAMkV,UACrB,G,mCACD,WACI,OAAOrW,KAAKmB,MAAMhB,kBACrB,G,mCACD,WACI,IAAIgR,EACJ,OAAOnR,KAAKqD,cAAgBrD,KAA8B,QAAtBmR,EAAKnR,KAAKqB,cAA2B,IAAP8P,OAAgB,EAASA,EAAG26B,uBACjG,G,+BACD,WAAyC,IACjC36B,EAAIyU,EADMmmB,EAAuB,wDAErC,GAAIA,EACA,OAA8B,QAAtB56B,EAAKnR,KAAKqB,cAA2B,IAAP8P,OAAgB,EAASA,EAAG4oB,oBACtE,IAAK/5B,KAAKiD,sBAAuB,CAC7B,IAAMQ,GAAkC,QAAtBmiB,EAAK5lB,KAAKqB,cAA2B,IAAPukB,OAAgB,EAASA,EAAGmU,sBAAwB,CAAC,EAIrG,YAH2B93B,IAAvBjC,KAAKmB,MAAMgB,UACXsB,EAAQtB,QAAUnC,KAAKmB,MAAMgB,SAE1BsB,CACV,CAED,IADA,IAAMA,EAAU,CAAC,EACRsa,EAAI,EAAGA,EAAIiuB,GAAiBjuB,IAAK,CACtC,IAAM3a,EAAOJ,GAAa+a,GACpBja,EAAO9D,KAAKmB,MAAMiC,IACpBV,EAAeoB,KAAkB,IAATA,KACxBL,EAAQL,GAAQU,EAEvB,CACD,OAAOL,CACV,G,6BAID,SAAgBwV,GACZ,IAAI9H,EACE86B,EAAqBjsC,KAAK8rC,wBAChC,GAAIG,EAEA,OAD8C,QAA7C96B,EAAK86B,EAAmBrU,uBAAoC,IAAPzmB,GAAyBA,EAAGwO,IAAI1G,GAC/E,kBAAMgzB,EAAmBrU,gBAAgBnd,OAAOxB,EAAhD,CAEd,G,sBAID,SAAShT,EAAKnG,GAENE,KAAK6nB,SAAS5hB,IACdjG,KAAK4rC,YAAY3lC,GACrBjG,KAAK4V,OAAO/N,IAAI5B,EAAKnG,GACrBE,KAAK2O,aAAa1I,GAAOnG,EAAMT,MAC/BW,KAAK6pC,kBAAkB5jC,EAAKnG,EAC/B,G,yBAID,SAAYmG,GACR,IAAIkL,EACJnR,KAAK4V,OAAO6E,OAAOxU,GACyB,QAA3CkL,EAAKnR,KAAKgpC,mBAAmB3pC,IAAI4G,UAAyB,IAAPkL,GAAyBA,IAC7EnR,KAAKgpC,mBAAmBvuB,OAAOxU,UACxBjG,KAAK2O,aAAa1I,GACzBjG,KAAKksC,2BAA2BjmC,EAAKjG,KAAKoU,YAC7C,G,sBAID,SAASnO,GACL,OAAOjG,KAAK4V,OAAOhO,IAAI3B,EAC1B,G,sBAKD,SAASA,EAAKkgB,GACV,GAAInmB,KAAKmB,MAAMyU,QAAU5V,KAAKmB,MAAMyU,OAAO3P,GACvC,OAAOjG,KAAKmB,MAAMyU,OAAO3P,GAE7B,IAAInG,EAAQE,KAAK4V,OAAOvW,IAAI4G,GAK5B,YAJchE,IAAVnC,QAAwCmC,IAAjBkkB,IACvBrmB,EAAQujB,GAAY8C,EAAc,CAAE9D,MAAOriB,OAC3CA,KAAK+nB,SAAS9hB,EAAKnG,IAEhBA,CACV,G,uBAMD,SAAUmG,GACN,YAAkChE,IAA3BjC,KAAK2O,aAAa1I,IAAuBjG,KAAK8B,QAE/C9B,KAAKmsC,sBAAsBnsC,KAAK8B,QAASmE,EAAKjG,KAAK4O,SADnD5O,KAAK2O,aAAa1I,EAE3B,G,2BAKD,SAAcA,EAAKnG,GACfE,KAAKupC,WAAWtjC,GAAOnG,CAC1B,G,2BAKD,SAAcmG,GACV,IAAIkL,EACIhP,EAAYnC,KAAKmB,MAAjBgB,QACFiqC,EAAsC,kBAAZjqC,GAA2C,kBAAZA,EACD,QAAvDgP,EAAKwD,GAAwB3U,KAAKmB,MAAOgB,UAA6B,IAAPgP,OAAgB,EAASA,EAAGlL,QAC5FhE,EAIN,GAAIE,QAAgCF,IAArBmqC,EACX,OAAOA,EAMX,IAAM7sC,EAASS,KAAKqsC,uBAAuBrsC,KAAKmB,MAAO8E,GACvD,YAAehE,IAAX1C,GAAyBmJ,EAAcnJ,QAMR0C,IAA5BjC,KAAKwpC,cAAcvjC,SACDhE,IAArBmqC,OACEnqC,EACAjC,KAAKupC,WAAWtjC,GARX1G,CASd,G,gBACD,SAAGwX,EAAW4B,GAIV,OAHK3Y,KAAK4hB,OAAO7K,KACb/W,KAAK4hB,OAAO7K,GAAa,IAAI+J,IAE1B9gB,KAAK4hB,OAAO7K,GAAW4I,IAAIhH,EACrC,G,oBACD,SAAO5B,GAAoB,UACnB5F,EADmB,mBAANm7B,EAAM,iCAANA,EAAM,kBAEW,QAAjCn7B,EAAKnR,KAAK4hB,OAAO7K,UAA+B,IAAP5F,IAAyB,EAAAA,GAAG5O,OAAH,QAAa+pC,EACnF,K,EAhbCvD,GAkbA/lC,GAAe,CAAC,WAAJ,gBAAkBg2B,KAC9BgT,GAAkBhpC,GAAanD,O,kCGnd/B0sC,GAAAA,SAAAA,I,+IACF,SAAyBrjC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEsjC,wBAAwBrjC,GAAS,GAAK,CAClD,G,oCACD,SAAuBhI,EAAO8E,GAC1B,IAAIkL,EACJ,OAA8B,QAAtBA,EAAKhQ,EAAM2N,aAA0B,IAAPqC,OAAgB,EAASA,EAAGlL,EACrE,G,wCACD,SAA2BA,EAA3B,GAAiD,IAAf8I,EAAe,EAAfA,KAAMD,EAAS,EAATA,aAC7BC,EAAK9I,UACL6I,EAAM7I,EAChB,G,8CACD,aAAgGwmC,GAAW,IAAxEp2B,EAAwE,EAAxEA,WAAYD,EAA4D,EAA5DA,cAAkB7W,GAA0C,cAA9B8Q,EAA8B,EAA9BA,gBACrEoB,E/DmFZ,SAAmBlS,EAAQ8W,EAAY9U,GACnC,IAAI4P,EACEM,EAAS,CAAC,EAChB,IAAK,IAAMxL,KAAO1G,EAAQ,CACtB,IAAMmtC,EAAmBxkB,GAAwBjiB,EAAKoQ,GACtD5E,EAAOxL,QACkBhE,IAArByqC,EACMA,EACuC,QAAtCv7B,EAAK5P,EAAcumB,SAAS7hB,UAAyB,IAAPkL,OAAgB,EAASA,EAAG9R,KACxF,CACD,OAAOoS,CACV,C+D9FoBk7B,CAAUptC,EAAQ8W,GAAc,CAAC,EAAGrW,MAYjD,GARIqQ,IACI+F,IACAA,EAAgB/F,EAAgB+F,IAChC7W,IACAA,EAAS8Q,EAAgB9Q,IACzBkS,IACAA,EAASpB,EAAgBoB,KAE7Bg7B,EAAW,E/DkBvB,SAAiClrC,EAAehC,EAAQkS,GACpD,IAAIN,EAAIyU,EACFgnB,EAAe9tC,OAAO+T,KAAKtT,GAAQ8mB,QAAO,SAACpgB,GAAD,OAAU1E,EAAcsmB,SAAS5hB,EAAjC,IAC1C4mC,EAAeD,EAAa/sC,OAClC,GAAKgtC,EAEL,IAAK,IAAI9uB,EAAI,EAAGA,EAAI8uB,EAAc9uB,IAAK,CACnC,IAAM9X,EAAM2mC,EAAa7uB,GACnB+uB,EAAcvtC,EAAO0G,GACvBnG,EAAQ,KAKR8C,MAAMC,QAAQiqC,KACdhtC,EAAQgtC,EAAY,IAOV,OAAVhtC,IACAA,EAAoG,QAA3F8lB,EAA4B,QAAtBzU,EAAKM,EAAOxL,UAAyB,IAAPkL,EAAgBA,EAAK5P,EAAcwrC,UAAU9mC,UAAyB,IAAP2f,EAAgBA,EAAKrmB,EAAO0G,SAM9HhE,IAAVnC,GAAiC,OAAVA,IAEN,kBAAVA,IxBhFc,iBAAiBoI,KwBiFnBpI,IAAUke,GAAkBle,IAE/CA,EAAQgK,WAAWhK,IAEb2nB,GAAc3nB,IAAU6lB,GAAQzd,KAAK4kC,KAC3ChtC,EAAQ+lB,GAAkB5f,EAAK6mC,IAEnCvrC,EAAcwmB,SAAS9hB,EAAKod,GAAYvjB,EAAO,CAAEuiB,MAAO9gB,UACpCU,IAAhBwP,EAAOxL,KACPwL,EAAOxL,GAAOnG,GAEJ,OAAVA,GACAyB,EAAcyrC,cAAc/mC,EAAKnG,GACxC,CACJ,C+D/DWmtC,CAAwBjtC,KAAMT,EAAQkS,GACtC,IAAMqU,EAAS0iB,GAAgBxoC,KAAMT,EAAQkS,EAAQ2E,GACrDA,EAAgB0P,EAAO1P,cACvB7W,EAASumB,EAAOvmB,MACnB,CACD,eACI8W,WAAAA,EACAD,cAAAA,GACG7W,EAEV,K,EAzCCgtC,CAAyBxD,I,ICQzBmE,GAAAA,SAAAA,I,4IACF,SAAsBnmC,EAAUd,GAC5B,GAAIoC,EAAeT,IAAI3B,GAAM,CACzB,IAAMknC,EAAcjmB,GAAoBjhB,GACxC,OAAOknC,GAAcA,EAAYljC,SAAe,CACnD,CAEG,IAVc4J,EAURu5B,GAVQv5B,EAUyB9M,EATxCiW,OAAO+oB,iBAAiBlyB,IAUjB/T,GAASsJ,EAAcnD,GACvBmnC,EAAcpH,iBAAiB//B,GAC/BmnC,EAAcnnC,KAAS,EAC7B,MAAwB,kBAAVnG,EAAqBA,EAAM+P,OAAS/P,CAEzD,G,wCACD,SAA2BiH,EAA3B,GACI,OAAOy5B,GAAmBz5B,EAD+B,EAAtB5G,mBAEtC,G,mBACD,SAAMiU,EAAazF,EAAcC,EAASzN,GACtCsN,GAAgB2F,EAAazF,EAAcC,EAASzN,EAAM0N,kBAC7D,G,yCACD,SAA4B1N,GACxB,OAAOoT,GAA4BpT,EACtC,G,4BACD,SAAe4F,EAAUqN,EAAaN,EAAWC,GAC7CH,GAAW7M,EAAUqN,EAAaN,EAAWC,EAChD,K,EAzBCm5B,CAA0BX,I,sBCD1Bc,GAAAA,SAAAA,I,6BACF,aAAc,6BACV,eAASztC,YACJmS,UAAW,EAFN,CAGb,C,qDACD,SAAuB5Q,EAAO8E,GAC1B,OAAO9E,EAAM8E,EAChB,G,mCACD,SAAsBc,EAAUd,GAC5B,IAAIkL,EACJ,OAAI9I,EAAeT,IAAI3B,IACyB,QAAnCkL,EAAK+V,GAAoBjhB,UAAyB,IAAPkL,OAAgB,EAASA,EAAGlH,UAAY,GAEhGhE,EAAOiO,GAAoBtM,IAAI3B,GAA0BA,EAAnBwN,GAAYxN,GAC3Cc,EAASumC,aAAarnC,GAChC,G,wCACD,WACI,MbjBiB,CACrB4C,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,GamBpC,G,yCACD,SAA4BvI,GACxB,OAAOoT,GAA4BpT,EACtC,G,mBACD,SAAMiT,EAAazF,EAAcC,EAASzN,GACtC2Q,GAAcsC,EAAazF,EAAcC,EAAS5O,KAAK+R,SAAU5Q,EAAM0N,kBAC1E,G,4BACD,SAAe9H,EAAUqN,EAAaN,EAAWC,GAC7CI,GAAUpN,EAAUqN,EAAaN,EAAWC,EAC/C,G,mBACD,SAAMhN,GACF/G,KAAK+R,SAAWA,GAAShL,EAAS6P,UAClC,sDAAY7P,EACf,K,EA/BCsmC,CAAyBd,ICPzBgB,GAAyB,SAACtsC,EAAW2N,GACvC,OAAO7G,EAAe9G,GAChB,IAAIosC,GAAiBz+B,EAAS,CAAEa,4BAA4B,IAC5D,IAAIy9B,GAAkBt+B,EAAS,CAAEa,4BAA4B,GACtE,ECND,SAAS+9B,GAAgBC,EAAQ/P,GAC7B,OAAIA,EAAKh0B,MAAQg0B,EAAKj0B,IACX,EACHgkC,GAAU/P,EAAKh0B,IAAMg0B,EAAKj0B,KAAQ,GAC7C,CAQD,IAAMikC,GAAsB,CACxBC,QAAS,SAACpb,EAAQqb,GACd,IAAKA,EAAKruC,OACN,OAAOgzB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIznB,GAAG5C,KAAKqqB,GAIR,OAAOA,EAHPA,EAASzoB,WAAWyoB,EAK3B,CAKD,IAAM1pB,EAAI2kC,GAAgBjb,EAAQqb,EAAKruC,OAAOsJ,GACxCC,EAAI0kC,GAAgBjb,EAAQqb,EAAKruC,OAAOuJ,GAC9C,gBAAUD,EAAV,aAAgBC,EAAhB,IACH,GCjCC+kC,GAAW,QACXC,GAAmB,CACrBH,QAAS,SAACpb,EAAD,GAA4C,IAAjCwb,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACrBC,EAAW1b,EAIX2b,EAAuB3b,EAAOvqB,SAAS,QACvCmmC,EAAe,GACjBD,IACA3b,EAASA,EAAO5e,QAAQ8xB,IAAkB,SAAC7hB,GAEvC,OADAuqB,EAAa5+B,KAAKqU,GACXiqB,EACV,KAEL,IAAMO,EAASzoB,GAAQ9b,MAAM0oB,GAE7B,GAAI6b,EAAOvuC,OAAS,EAChB,OAAOouC,EACX,IAAMvjB,EAAW/E,GAAQJ,kBAAkBgN,GACrC7gB,EAA8B,kBAAd08B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBnlC,EAAEmB,MAAQ+jC,EAAUllC,EAC7CylC,EAASN,EAAgBllC,EAAEkB,MAAQ+jC,EAAUjlC,EACnDslC,EAAO,EAAI18B,IAAW28B,EACtBD,EAAO,EAAI18B,IAAW48B,EAOtB,IAAMC,EAAer5B,GAAIm5B,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAI18B,KAClB08B,EAAO,EAAI18B,IAAW68B,GAEQ,kBAAvBH,EAAO,EAAI18B,KAClB08B,EAAO,EAAI18B,IAAW68B,GAC1B,IAAI9oB,EAASiF,EAAS0jB,GACtB,GAAIF,EAAsB,CACtB,IAAInwB,EAAI,EACR0H,EAASA,EAAO9R,QAAQk6B,IAAU,WAC9B,IAAMW,EAAcL,EAAapwB,GAEjC,OADAA,IACOywB,CACV,GACJ,CACD,OAAO/oB,CACV,GC3CCgpB,GAAAA,SAAAA,I,wIAMF,WAAoB,ItJfGC,EsJeH,OAChB,EAAoE1uC,KAAKmB,MAAjEI,EAAR,EAAQA,cAAeotC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,kBAAmBroC,EAAvD,EAAuDA,SAC/CwN,EAAexS,EAAfwS,WtJjBW26B,EsJkBDG,GtJjBtB/vC,OAAOqR,OAAOhI,EAAiBumC,GsJkBvB36B,IACI46B,EAAYG,OACZH,EAAYG,MAAMnvB,IAAI5L,GACtB66B,GAAqBA,EAAkBnxB,UAAYlX,GACnDqoC,EAAkBnxB,SAAS1J,GAE/BA,EAAWkG,KAAK80B,YAChBh7B,EAAWmD,iBAAiB,qBAAqB,WAC7C,EAAKukB,cACR,IACD1nB,EAAWi3B,YAAX,kBACOj3B,EAAWnF,SADlB,IAEI4O,eAAgB,kBAAM,EAAKie,cAAX,MAGxB12B,EAAsBE,gBAAiB,CAC1C,G,qCACD,SAAwB+pC,GAAW,WAC/B,EAA6DhvC,KAAKmB,MAA1D8tC,EAAR,EAAQA,iBAAkB1tC,EAA1B,EAA0BA,cAAegD,EAAzC,EAAyCA,KAAMgZ,EAA/C,EAA+CA,UACzCxJ,EAAaxS,EAAcwS,WACjC,OAAKA,GASLA,EAAWwJ,UAAYA,EACnBhZ,GACAyqC,EAAUC,mBAAqBA,QACVhtC,IAArBgtC,EACAl7B,EAAWm7B,aAGXlvC,KAAKy7B,eAELuT,EAAUzxB,YAAcA,IACpBA,EACAxJ,EAAWo7B,UAELp7B,EAAWq7B,YAMjBnvB,GAAK6B,YAAW,WACZ,IAAI3Q,GACmC,QAAhCA,EAAK4C,EAAWs7B,kBAA+B,IAAPl+B,OAAgB,EAASA,EAAGm+B,QAAQzvC,SAC/E,EAAK47B,cAEZ,KAGF,MAnCI,IAoCd,G,gCACD,WACI,IAAQ1nB,EAAe/T,KAAKmB,MAAMI,cAA1BwS,WACJA,IACAA,EAAWkG,KAAK80B,aACXh7B,EAAW+gB,kBAAoB/gB,EAAWw7B,UAC3CvvC,KAAKy7B,eAGhB,G,kCACD,WACI,MAA2Ez7B,KAAKmB,MAAxEI,EAAR,EAAQA,cAAeotC,EAAvB,EAAuBA,YAAgCa,EAAvD,EAAoCZ,kBAC5B76B,EAAexS,EAAfwS,WACJA,IACAA,EAAW07B,6BACS,OAAhBd,QAAwC,IAAhBA,OAAyB,EAASA,EAAYG,QACtEH,EAAYG,MAAMtW,OAAOzkB,IACN,OAAnBy7B,QAA8C,IAAnBA,OAA4B,EAASA,EAAeE,aAC/EF,EAAeE,WAAW37B,GAErC,G,0BACD,WACI,IAAQ0nB,EAAiBz7B,KAAKmB,MAAtBs6B,aACS,OAAjBA,QAA0C,IAAjBA,GAAmCA,GAC/D,G,oBACD,WACI,OAAO,IACV,K,EA9FCgT,CAAiCnpC,EAAAA,WAqGvC,IAAMupC,GAAyB,CAC3BpjC,cAAc,kBACPiiC,IADK,IAERiC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRhkC,oBAAqB+hC,GACrB9hC,qBAAsB8hC,GACtB5hC,uBAAwB4hC,GACxB7hC,wBAAyB6hC,GACzBkC,UAAW9B,IC3HT+B,GAAiB,CACnBzrC,cDuGJ,SAAuBjD,GACnB,MAAkCmc,KAAlC,gBAAOC,EAAP,KAAkBke,EAAlB,KACMkT,GAAcrtC,EAAAA,EAAAA,YAAW4D,GAC/B,OAAQI,EAAAA,cAA6BmpC,IAA7B,kBAA4DttC,GAA5D,IAAmEwtC,YAAaA,EAAaC,mBAAmBttC,EAAAA,EAAAA,YAAWiE,GAA2BgY,UAAWA,EAAWke,aAAcA,IACrM,GExGD,IAAMqU,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQjwC,OACrBmwC,GAAW,SAAClwC,GAAD,MAA4B,kBAAVA,EAAqBgK,WAAWhK,GAASA,CAA3D,EACXmwC,GAAO,SAACnwC,GAAD,MAA4B,kBAAVA,GAAsBgL,GAAG5C,KAAKpI,EAAhD,EACb,SAASowC,GAAU3wC,EAAQ4wC,EAAQC,EAAM/mB,EAAUgnB,EAAwBC,GACnED,GACA9wC,EAAO0O,QAAUiH,GAAI,OAEJjT,IAAjBmuC,EAAKniC,QAAwBmiC,EAAKniC,QAAU,EAAGsiC,GAAgBlnB,IAC/D9pB,EAAOixC,YAAct7B,QAAuBjT,IAAnBkuC,EAAOliC,QAAwBkiC,EAAOliC,QAAU,EAAG,EAAGwiC,GAAiBpnB,KAE3FinB,IACL/wC,EAAO0O,QAAUiH,QAAuBjT,IAAnBkuC,EAAOliC,QAAwBkiC,EAAOliC,QAAU,OAAoBhM,IAAjBmuC,EAAKniC,QAAwBmiC,EAAKniC,QAAU,EAAGob,IAK3H,IAAK,IAAItL,EAAI,EAAGA,EAAIgyB,GAAYhyB,IAAK,CACjC,IAAM2yB,EAAc,SAAH,OAAYZ,GAAQ/xB,GAApB,UACb4yB,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBzuC,IAAjB0uC,QAA6C1uC,IAAf4uC,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BtxC,EAAOmxC,GAAe/mC,KAAKD,IAAIwL,GAAI86B,GAASW,GAAeX,GAASa,GAAaxnB,GAAW,IACxFxe,GAAQ3C,KAAK2oC,IAAehmC,GAAQ3C,KAAKyoC,MACzCpxC,EAAOmxC,IAAgB,MAI3BnxC,EAAOmxC,GAAeG,CAE7B,EAIGV,EAAOjjC,QAAUkjC,EAAKljC,UACtB3N,EAAO2N,OAASgI,GAAIi7B,EAAOjjC,QAAU,EAAGkjC,EAAKljC,QAAU,EAAGmc,GAEjE,CACD,SAASunB,GAAUh7B,EAAQk7B,GACvB,YAA8B7uC,IAAvB2T,EAAOk7B,GACRl7B,EAAOk7B,GACPl7B,EAAOnK,YAChB,CAwBD,IAAM8kC,GAAkBQ,GAAS,EAAG,GAAK5jB,IACnCsjB,GAAmBM,GAAS,GAAK,IAAMjlB,IAC7C,SAASilB,GAAStnC,EAAKC,EAAKqf,GACxB,OAAO,SAAC3oB,GAEJ,OAAIA,EAAIqJ,EACG,EACPrJ,EAAIsJ,EACG,EACJqf,EAAOM,GAAS5f,EAAKC,EAAKtJ,GACpC,CACJ,CCrFD,SAAS4wC,GAAatT,EAAMuT,GACxBvT,EAAKj0B,IAAMwnC,EAAWxnC,IACtBi0B,EAAKh0B,IAAMunC,EAAWvnC,GACzB,CAMD,SAASwnC,GAAYvR,EAAKwR,GACtBH,GAAarR,EAAI92B,EAAGsoC,EAAUtoC,GAC9BmoC,GAAarR,EAAI72B,EAAGqoC,EAAUroC,EACjC,CCVD,SAASsoC,GAAiB15B,EAAOqmB,EAAW/zB,EAAO8zB,EAAa0B,GAM5D,OAJA9nB,EAAQ4nB,GADR5nB,GAASqmB,EACiB,EAAI/zB,EAAO8zB,QACpB77B,IAAbu9B,IACA9nB,EAAQ4nB,GAAW5nB,EAAO,EAAI8nB,EAAU1B,IAErCpmB,CACV,CAsBD,SAAS25B,GAAqB3T,EAAMuC,EAApC,EAA4ExuB,EAAQ6/B,GAAY,oBAA/CrrC,EAA+C,KAA1Ci6B,EAA0C,KAAhCC,EAAgC,MAlBhG,SAAyBzC,GAA8F,IAAxFK,EAAwF,uDAA5E,EAAG/zB,EAAyE,uDAAjE,EAAGyH,EAA8D,uDAArD,GAAK+tB,EAAgD,uCAAtCyR,EAAsC,uDAAzBvT,EAAM4T,EAAmB,uDAAN5T,EAC7G,GAAI7yB,GAAQ3C,KAAK61B,GAAY,CACzBA,EAAYj0B,WAAWi0B,GAEvBA,EADyB7oB,GAAIo8B,EAAW7nC,IAAK6nC,EAAW5nC,IAAKq0B,EAAY,KAC1CuT,EAAW7nC,GAC7C,CACD,GAAyB,kBAAds0B,EAAX,CAEA,IAAID,EAAc5oB,GAAI+7B,EAAWxnC,IAAKwnC,EAAWvnC,IAAK+H,GAClDisB,IAASuT,IACTnT,GAAeC,GACnBL,EAAKj0B,IAAM2nC,GAAiB1T,EAAKj0B,IAAKs0B,EAAW/zB,EAAO8zB,EAAa0B,GACrE9B,EAAKh0B,IAAM0nC,GAAiB1T,EAAKh0B,IAAKq0B,EAAW/zB,EAAO8zB,EAAa0B,EAL3D,CAMb,CAMG+R,CAAgB7T,EAAMuC,EAAWh6B,GAAMg6B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWj2B,MAAOyH,EAAQ6/B,EACjH,CAID,IAAMjR,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASkR,GAAoB7R,EAAKM,EAAYkR,EAAWM,GACrDJ,GAAqB1R,EAAI92B,EAAGo3B,EAAYI,GAAqB,OAAd8Q,QAAoC,IAAdA,OAAuB,EAASA,EAAUtoC,EAAiB,OAAd4oC,QAAoC,IAAdA,OAAuB,EAASA,EAAU5oC,GAClLwoC,GAAqB1R,EAAI72B,EAAGm3B,EAAYK,GAAqB,OAAd6Q,QAAoC,IAAdA,OAAuB,EAASA,EAAUroC,EAAiB,OAAd2oC,QAAoC,IAAdA,OAAuB,EAASA,EAAU3oC,EACrL,CCjDD,SAAS4oC,GAAgBxzB,GACrB,OAA2B,IAApBA,EAAM6f,WAAmC,IAAhB7f,EAAMlU,KACzC,CACD,SAAS2nC,GAAYzzB,GACjB,OAAOwzB,GAAgBxzB,EAAMrV,IAAM6oC,GAAgBxzB,EAAMpV,EAC5D,CACD,SAAS8oC,GAAU1oC,EAAGC,GAClB,OAAQD,EAAEL,EAAEY,MAAQN,EAAEN,EAAEY,KACpBP,EAAEL,EAAEa,MAAQP,EAAEN,EAAEa,KAChBR,EAAEJ,EAAEW,MAAQN,EAAEL,EAAEW,KAChBP,EAAEJ,EAAEY,MAAQP,EAAEL,EAAEY,GACvB,CACD,SAASmoC,GAAYlS,GACjB,OAAOlC,GAAWkC,EAAI92B,GAAK40B,GAAWkC,EAAI72B,EAC7C,C,ICdKgpC,GAAAA,WACF,cAAc,eACV9xC,KAAKsvC,QAAU,EAClB,C,kCACD,SAAI1B,GACAltB,GAAc1gB,KAAKsvC,QAAS1B,GAC5BA,EAAKtE,gBACR,G,oBACD,SAAOsE,GAKH,GAJA/sB,GAAW7gB,KAAKsvC,QAAS1B,GACrBA,IAAS5tC,KAAK+xC,WACd/xC,KAAK+xC,cAAW9vC,GAEhB2rC,IAAS5tC,KAAKowC,KAAM,CACpB,IAAM2B,EAAW/xC,KAAKsvC,QAAQtvC,KAAKsvC,QAAQzvC,OAAS,GAChDkyC,GACA/xC,KAAKmvC,QAAQ4C,EAEpB,CACJ,G,sBACD,SAASnE,GACL,IAMImE,EANEC,EAAchyC,KAAKsvC,QAAQ2C,WAAU,SAACC,GAAD,OAAYtE,IAASsE,CAArB,IAC3C,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIj0B,EAAIi0B,EAAaj0B,GAAK,EAAGA,IAAK,CACnC,IAAMm0B,EAASlyC,KAAKsvC,QAAQvxB,GAC5B,IAAyB,IAArBm0B,EAAO30B,UAAqB,CAC5Bw0B,EAAWG,EACX,KACH,CACJ,CACD,QAAIH,IACA/xC,KAAKmvC,QAAQ4C,IACN,EAKd,G,qBACD,SAAQnE,EAAMuE,GACV,IAAIhhC,EACE4gC,EAAW/xC,KAAKowC,KAClBxC,IAASmE,IAEb/xC,KAAK+xC,SAAWA,EAChB/xC,KAAKowC,KAAOxC,EACZA,EAAKwE,OACDL,IACAA,EAAShrC,UAAYgrC,EAASzI,iBAC9BsE,EAAKtE,iBACLsE,EAAKyE,WAAaN,EACdI,IACAvE,EAAKyE,WAAWC,iBAAkB,GAElCP,EAASQ,WACT3E,EAAK2E,SAAWR,EAASQ,SACzB3E,EAAK2E,SAAS5jC,aACVojC,EAASS,iBAAmBT,EAASpjC,eAEpB,QAApBwC,EAAKy8B,EAAK3zB,YAAyB,IAAP9I,OAAgB,EAASA,EAAGshC,cACzD7E,EAAK8E,eAAgB,IAGP,IADI9E,EAAKh/B,QAAnB+jC,WAEJZ,EAASa,QAepB,G,mCACD,WACI5yC,KAAKsvC,QAAQp5B,SAAQ,SAAC03B,GAClB,IAAIz8B,EAAIyU,EAAIwkB,EAAIyI,EAAIC,EAC0B,QAA7CltB,GAAMzU,EAAKy8B,EAAKh/B,SAAS4O,sBAAmC,IAAPoI,GAAyBA,EAAG3mB,KAAKkS,GACmB,QAAzG2hC,EAAkC,QAA5B1I,EAAKwD,EAAKmF,oBAAiC,IAAP3I,OAAgB,GAAUyI,EAAKzI,EAAGx7B,SAAS4O,sBAAmC,IAAPs1B,GAAyBA,EAAG7zC,KAAK4zC,EACtJ,GACJ,G,4BACD,WACI7yC,KAAKsvC,QAAQp5B,SAAQ,SAAC03B,GAClBA,EAAK7mC,UAAY6mC,EAAKtE,gBAAe,EACxC,GACJ,G,gCAKD,WACQtpC,KAAKowC,MAAQpwC,KAAKowC,KAAKmC,WACvBvyC,KAAKowC,KAAKmC,cAAWtwC,EAE5B,K,EAxGC6vC,GCFN,SAASkB,GAAyB90B,EAAO6vB,EAAWkF,GAChD,IAAI1pC,EAAY,GAOV2pC,EAAah1B,EAAMrV,EAAEk1B,UAAYgQ,EAAUllC,EAC3CsqC,EAAaj1B,EAAMpV,EAAEi1B,UAAYgQ,EAAUjlC,EAWjD,IAVIoqC,GAAcC,KACd5pC,EAAY,eAAH,OAAkB2pC,EAAlB,eAAmCC,EAAnC,YAMO,IAAhBpF,EAAUllC,GAA2B,IAAhBklC,EAAUjlC,IAC/BS,GAAa,SAAJ,OAAa,EAAIwkC,EAAUllC,EAA3B,aAAiC,EAAIklC,EAAUjlC,EAA/C,OAETmqC,EAAiB,CACjB,IAAQ/lC,EAA6B+lC,EAA7B/lC,OAAQC,EAAqB8lC,EAArB9lC,QAASC,EAAY6lC,EAAZ7lC,QACrBF,IACA3D,GAAa,UAAJ,OAAc2D,EAAd,UACTC,IACA5D,GAAa,WAAJ,OAAe4D,EAAf,UACTC,IACA7D,GAAa,WAAJ,OAAe6D,EAAf,SAChB,CAKD,IAAMgmC,EAAgBl1B,EAAMrV,EAAEmB,MAAQ+jC,EAAUllC,EAC1CwqC,EAAgBn1B,EAAMpV,EAAEkB,MAAQ+jC,EAAUjlC,EAIhD,OAHsB,IAAlBsqC,GAAyC,IAAlBC,IACvB9pC,GAAa,SAAJ,OAAa6pC,EAAb,aAA+BC,EAA/B,MAEN9pC,GAAa,MACvB,CCvCD,IAAM+pC,GAAiB,SAACpqC,EAAGC,GAAJ,OAAUD,EAAE28B,MAAQ18B,EAAE08B,KAAtB,ECGjB0N,GAAAA,WACF,cAAc,eACVvzC,KAAKqF,SAAW,GAChBrF,KAAKwzC,SAAU,CAClB,C,kCACD,SAAIv6B,GACAyH,GAAc1gB,KAAKqF,SAAU4T,GAC7BjZ,KAAKwzC,SAAU,CAClB,G,oBACD,SAAOv6B,GACH4H,GAAW7gB,KAAKqF,SAAU4T,GAC1BjZ,KAAKwzC,SAAU,CAClB,G,qBACD,SAAQ76B,GACJ3Y,KAAKwzC,SAAWxzC,KAAKqF,SAASuK,KAAK0jC,IACnCtzC,KAAKwzC,SAAU,EACfxzC,KAAKqF,SAAS6Q,QAAQyC,EACzB,K,EAjBC46B,GCmBAE,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjCzxC,GAAK,EACT,SAAS0xC,GAAT,GAA0H,IAA1FC,EAA0F,EAA1FA,qBAAsBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,eACnG,kBACI,WAAYC,GAAsH,WAA3GrlC,EAA2G,uDAA5F,CAAC,EAAGtN,EAAwF,uDAA7D,OAAlBuyC,QAA4C,IAAlBA,OAA2B,EAASA,KAAiB,eAI9H5zC,KAAKgC,GAAKA,KAIVhC,KAAKuoB,YAAc,EAOnBvoB,KAAKqF,SAAW,IAAIiD,IAKpBtI,KAAK4O,QAAU,CAAC,EAMhB5O,KAAKi0C,iBAAkB,EACvBj0C,KAAKyhC,oBAAqB,EAO1BzhC,KAAK0yC,eAAgB,EACrB1yC,KAAKwqC,kBAAmB,EAKxBxqC,KAAKk0C,mBAAoB,EAIzBl0C,KAAKm0C,uBAAwB,EAC7Bn0C,KAAKo0C,uBAAwB,EAK7Bp0C,KAAKyyC,YAAa,EAIlBzyC,KAAKq0C,OAAQ,EAKbr0C,KAAKs0C,YAAa,EAIlBt0C,KAAKu0C,sBAAuB,EAS5Bv0C,KAAK+tC,UAAY,CAAEllC,EAAG,EAAGC,EAAG,GAI5B9I,KAAKw0C,cAAgB,IAAI9sC,IAEzB1H,KAAKy0C,eAAiB,IAAI/sC,IAC1B1H,KAAK00C,kBAAoB,WACjB,EAAKjC,aACL,EAAKA,YAAa,EAClB,EAAKkC,oBAEZ,EAMD30C,KAAK40C,iBAAmB,WACpB,EAAKC,MAAM3+B,QAAQ4+B,IACnB,EAAKD,MAAM3+B,QAAQ6+B,IACnB,EAAKF,MAAM3+B,QAAQ8+B,GACtB,EACDh1C,KAAKi1C,cAAe,EACpBj1C,KAAKk1C,WAAY,EACjBl1C,KAAKm1C,kBAAoB,EAKzBn1C,KAAKo1C,YAAc,IAAI1tC,IACvB1H,KAAKg0C,UAAYA,EACjBh0C,KAAK2O,aAAeA,EACpB3O,KAAKia,KAAO5Y,EAASA,EAAO4Y,MAAQ5Y,EAASrB,KAC7CA,KAAKq1C,KAAOh0C,EAAS,GAAH,gBAAOA,EAAOg0C,MAAd,CAAoBh0C,IAAU,GAChDrB,KAAKqB,OAASA,EACdrB,KAAK6lC,MAAQxkC,EAASA,EAAOwkC,MAAQ,EAAI,EACzCmO,GAAah0C,KAAKia,KAAKq7B,sBAAsBtB,EAAWh0C,MACxD,IAAK,IAAI+d,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAClC/d,KAAKq1C,KAAKt3B,GAAGw2B,sBAAuB,EAEpCv0C,KAAKia,OAASja,OACdA,KAAK60C,MAAQ,IAAItB,GACxB,CApHL,+CAqHI,SAAiBnwC,EAAM4T,GAInB,OAHKhX,KAAKw0C,cAAc5sC,IAAIxE,IACxBpD,KAAKw0C,cAAc3sC,IAAIzE,EAAM,IAAI0d,IAE9B9gB,KAAKw0C,cAAcn1C,IAAI+D,GAAMuc,IAAI3I,EAC3C,GA1HL,6BA2HI,SAAgB5T,GAAe,IAC3B,IAAMmyC,EAAsBv1C,KAAKw0C,cAAcn1C,IAAI+D,GADxB,mBAANkpC,EAAM,iCAANA,EAAM,kBAEH,OAAxBiJ,QAAwD,IAAxBA,GAA0CA,EAAoBhzC,OAApB,MAAAgzC,EAA8BjJ,EAC3G,GA9HL,0BA+HI,SAAalpC,GACT,OAAOpD,KAAKw0C,cAAc5sC,IAAIxE,EACjC,GAjIL,mCAkII,SAAsB4wC,EAAWpG,GAC7B5tC,KAAKy0C,eAAe5sC,IAAImsC,EAAWpG,EACtC,GApIL,mBAwII,SAAM7mC,GAAiC,IAC/BoK,EAD+B,OAAvBuhC,EAAuB,wDAEnC,IAAI1yC,KAAK+G,SAAT,CAEA/G,KAAKq0C,MACDttC,aAAoByuC,YAAmC,QAArBzuC,EAAS6P,QAC/C5W,KAAK+G,SAAWA,EAChB,MAA4C/G,KAAK4O,QAAzCrI,EAAR,EAAQA,SAAUiC,EAAlB,EAAkBA,OAAQjH,EAA1B,EAA0BA,cAU1B,GATIA,IAAkBA,EAAcO,SAChCP,EAAcyF,MAAMD,GAExB/G,KAAKia,KAAK46B,MAAMl1B,IAAI3f,MACG,QAAtBmR,EAAKnR,KAAKqB,cAA2B,IAAP8P,GAAyBA,EAAG9L,SAASsa,IAAI3f,MACxEA,KAAKg0C,WAAah0C,KAAKia,KAAKw6B,eAAeh6B,OAAOza,KAAKg0C,WACnDtB,IAAkBlqC,GAAUjC,KAC5BvG,KAAK0yC,eAAgB,GAErBiB,EAAsB,CACtB,IAAI8B,EACEC,EAAsB,kBAAO,EAAKz7B,KAAKm6B,uBAAwB,CAAzC,EAC5BT,EAAqB5sC,GAAU,WAC3B,EAAKkT,KAAKm6B,uBAAwB,EAClCqB,GAAeA,IACfA,EAAcvjB,GAAMwjB,EAAqB,KACrC3wC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAK6vC,MAAM3+B,QAAQy/B,IAE1B,GACJ,CACGpvC,GACAvG,KAAKia,KAAK27B,mBAAmBrvC,EAAUvG,OAGd,IAAzBA,KAAK4O,QAAQ1L,SACb3B,IACCgF,GAAYiC,IACbxI,KAAKkX,iBAAiB,aAAa,YAA+E,IAC1G/F,EAAIyU,EAAIwkB,EAAIyI,EAAIC,EADc50B,EAA4E,EAA5EA,MAAO4mB,EAAqE,EAArEA,iBAAkB+Q,EAAmD,EAAnDA,yBAAkCC,EAAiB,EAAzBttC,OAErF,GAAI,EAAKutC,yBAGL,OAFA,EAAKx2C,YAAS0C,OACd,EAAK+zC,oBAAiB/zC,GAI1B,IAAMg0C,EAAmI,QAA/GrwB,EAAwC,QAAlCzU,EAAK,EAAKvC,QAAQyH,kBAA+B,IAAPlF,EAAgBA,EAAK5P,EAAcq0B,8BAA2C,IAAPhQ,EAAgBA,EAAKswB,GACtK,EAA+D30C,EAAcga,WAArE46B,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,0BAK1BC,GAAiB,EAAKC,eACvB1E,GAAU,EAAK0E,aAAcR,IAC9BD,EAMEU,GAAgCzR,GAAoB+Q,EAC1D,IAAgC,QAA1BzL,EAAK,EAAKiI,kBAA+B,IAAPjI,OAAgB,EAASA,EAAGrjC,WAChEwvC,GACCzR,IACIuR,IAAkB,EAAKvhB,kBAAoB,CAC5C,EAAKud,aACL,EAAKU,aAAe,EAAKV,WACzB,EAAKU,aAAaA,kBAAe9wC,GAErC,EAAKu0C,mBAAmBt4B,EAAOq4B,GAC/B,IAAME,GAAmB,kBAClBlgB,GAAmB0f,EAAkB,WADtB,IAElBljB,OAAQojB,EACRljB,WAAYmjB,IAEZ70C,EAAc+2B,qBACdme,EAAiBvkB,MAAQ,EACzBukB,EAAiBntC,MAAO,GAE5B,EAAK6rB,eAAeshB,EACvB,MAOQ3R,GAC0B,IAA3B,EAAKqQ,mBACLQ,GAAgB,GAEpB,EAAKpG,WAA2D,QAA7CuD,GAAMD,EAAK,EAAKjkC,SAAS4O,sBAAmC,IAAPs1B,GAAyBA,EAAG7zC,KAAK4zC,IAE7G,EAAKyD,aAAeR,CACvB,GA1FK,CA4Fb,GAvOL,qBAwOI,WACI,IAAI3kC,EAAIyU,EACR5lB,KAAK4O,QAAQrI,UAAYvG,KAAKkvC,aAC9BlvC,KAAKia,KAAK46B,MAAMrc,OAAOx4B,MACI,QAA1BmR,EAAKnR,KAAKqvC,kBAA+B,IAAPl+B,GAAyBA,EAAGqnB,OAAOx4B,MAC/C,QAAtB4lB,EAAK5lB,KAAKqB,cAA2B,IAAPukB,GAAyBA,EAAGvgB,SAASoV,OAAOza,MAC3EA,KAAK+G,cAAW9E,EAChBoe,GAAWq2B,UAAU12C,KAAK40C,iBAC7B,GAhPL,yBAkPI,WACI50C,KAAKm0C,uBAAwB,CAChC,GApPL,2BAqPI,WACIn0C,KAAKm0C,uBAAwB,CAChC,GAvPL,6BAwPI,WACI,OAAOn0C,KAAKm0C,uBAAyBn0C,KAAKo0C,qBAC7C,GA1PL,oCA2PI,WACI,IAAIjjC,EACJ,OAAQnR,KAAKyhC,qBACe,QAAtBtwB,EAAKnR,KAAKqB,cAA2B,IAAP8P,OAAgB,EAASA,EAAG4kC,4BAC5D,CACP,GAhQL,yBAkQI,WACI,IAAI5kC,EACAnR,KAAK22C,oBAET32C,KAAKyyC,YAAa,EACI,QAArBthC,EAAKnR,KAAK60C,aAA0B,IAAP1jC,GAAyBA,EAAG+E,QAAQ0gC,IAClE52C,KAAKuoB,cACR,GAzQL,wBA0QI,WAAyC,IACjCpX,EAAIyU,EAAIwkB,EADLyM,IAA8B,yDAErC,GAAI72C,KAAKia,KAAK08B,kBACoC,QAA7C/wB,GAAMzU,EAAKnR,KAAK4O,SAAS4O,sBAAmC,IAAPoI,GAAyBA,EAAG3mB,KAAKkS,QAI3F,IADCnR,KAAKia,KAAKw4B,YAAczyC,KAAKia,KAAK68B,eAC/B92C,KAAK0yC,cAAT,CAEA1yC,KAAK0yC,eAAgB,EACrB,IAAK,IAAI30B,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAAK,CACvC,IAAM6vB,EAAO5tC,KAAKq1C,KAAKt3B,GACvB6vB,EAAK2G,sBAAuB,EAC5B3G,EAAKtJ,aAAa,WACrB,CACD,MAA6BtkC,KAAK4O,QAA1BrI,EAAR,EAAQA,SAAUiC,EAAlB,EAAkBA,OAClB,QAAiBvG,IAAbsE,GAA2BiC,EAA/B,CAEA,IAAMqG,EAA0D,QAArCu7B,EAAKpqC,KAAK4O,QAAQrN,qBAAkC,IAAP6oC,OAAgB,EAASA,EAAG7uB,WAAW1M,kBAC/G7O,KAAK+2C,2BAAmD,OAAtBloC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB7O,KAAK2O,aAAc,IAC7I3O,KAAKg3C,iBACLH,GAAyB72C,KAAKi3C,gBAAgB,aAJpC,CATA,CAcb,GAhSL,uBAkSI,WAKI,GAJyBj3C,KAAK22C,kBAQ1B,OAHA32C,KAAKk3C,gBACLl3C,KAAK20C,yBACL30C,KAAK60C,MAAM3+B,QAAQihC,IAGlBn3C,KAAKyyC,aAEVzyC,KAAKyyC,YAAa,EAOdzyC,KAAKy0C,eAAetoC,OACpBnM,KAAKy0C,eAAev+B,QAAQkhC,IAC5Bp3C,KAAKy0C,eAAehyB,SAKxBziB,KAAK60C,MAAM3+B,QAAQmhC,IAKnBr3C,KAAK60C,MAAM3+B,QAAQquB,IAKnBvkC,KAAK60C,MAAM3+B,QAAQohC,IACnBt3C,KAAK20C,oBAELr0B,GAAU8R,SACV9R,GAAUo2B,YACVp2B,GAAUle,SACb,GA7UL,+BA8UI,WACIpC,KAAK60C,MAAM3+B,QAAQqhC,IACnBv3C,KAAKo1C,YAAYl/B,QAAQshC,GAC5B,GAjVL,sCAkVI,WACIv3B,GAAKy2B,UAAU12C,KAAK40C,kBAAkB,GAAO,EAChD,GApVL,uCAqVI,WAA4B,WAMxB30B,GAAK6B,YAAW,WACR,EAAK4wB,cACL,EAAKz4B,KAAK80B,YAGV,EAAK90B,KAAKy6B,mBAEjB,GACJ,GAnWL,4BAuWI,YACQ10C,KAAKuyC,UAAavyC,KAAK+G,WAE3B/G,KAAKuyC,SAAWvyC,KAAKy3C,UACxB,GA3WL,0BA4WI,WACI,IAAItmC,EACJ,GAAKnR,KAAK+G,WAGV/G,KAAKskC,eACCtkC,KAAK4O,QAAQq8B,qBAAuBjrC,KAAKuvC,UAC1CvvC,KAAK0yC,eADV,CAWA,GAAI1yC,KAAKqyC,aAAeryC,KAAKqyC,WAAWtrC,SACpC,IAAK,IAAIgX,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAAK,CAC1B/d,KAAKq1C,KAAKt3B,GAClBumB,cACR,CAEL,IAAMoT,EAAa13C,KAAKwI,OACxBxI,KAAKwI,OAASxI,KAAKy3C,SAAQ,GAC3Bz3C,KAAK23C,gB3BxZQ,CACrB9uC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B0Z7B1J,KAAK0yC,eAAgB,EACrB1yC,KAAKguC,qBAAkB/rC,EACvBjC,KAAKi3C,gBAAgB,UAAWj3C,KAAKwI,OAAOo5B,WACN,QAArCzwB,EAAKnR,KAAK4O,QAAQrN,qBAAkC,IAAP4P,GAAyBA,EAAG5O,OAAO,gBAAiBvC,KAAKwI,OAAOo5B,UAA0B,OAAf8V,QAAsC,IAAfA,OAAwB,EAASA,EAAW9V,UApB3L,CAqBJ,GA1YL,0BA2YI,WAAgC,IAAnBgW,EAAmB,uDAAX,UACbC,EAAmBv0C,QAAQtD,KAAK4O,QAAQm8B,cAAgB/qC,KAAK+G,UAC7D/G,KAAKqjC,QACLrjC,KAAKqjC,OAAO9a,cAAgBvoB,KAAKia,KAAKsO,aACtCvoB,KAAKqjC,OAAOuU,QAAUA,IACtBC,GAAmB,GAEnBA,IACA73C,KAAKqjC,OAAS,CACV9a,YAAavoB,KAAKia,KAAKsO,YACvBqvB,MAAAA,EACAE,OAAQhE,EAAkB9zC,KAAK+G,UAC/B2K,OAAQmiC,EAAc7zC,KAAK+G,WAGtC,GA1ZL,4BA2ZI,WACI,IAAIoK,EACJ,GAAK4iC,EAAL,CAEA,IAAMgE,EAAmB/3C,KAAK0yC,eAAiB1yC,KAAKu0C,qBAC9CyD,EAAgBh4C,KAAKguC,kBAAoB2D,GAAY3xC,KAAKguC,iBAC1Dn/B,EAA0D,QAArCsC,EAAKnR,KAAK4O,QAAQrN,qBAAkC,IAAP4P,OAAgB,EAASA,EAAGoK,WAAW1M,kBACzGopC,EAA+C,OAAtBppC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB7O,KAAK2O,aAAc,IACpIupC,EAA8BD,IAA2Bj4C,KAAK+2C,2BAChEgB,IACCC,GACG9oC,GAAalP,KAAK2O,eAClBupC,KACJnE,EAAe/zC,KAAK+G,SAAUkxC,GAC9Bj4C,KAAKu0C,sBAAuB,EAC5Bv0C,KAAKspC,iBAZC,CAcb,GA5aL,qBA6aI,WAAgC,IAAxB6O,IAAwB,yDACtBC,EAAUp4C,KAAKsjC,iBACjB1B,EAAY5hC,KAAKq4C,oBAAoBD,GAUzC,OAJID,IACAvW,EAAY5hC,KAAKm4C,gBAAgBvW,IAErC0W,GAAS1W,GACF,CACHrZ,YAAavoB,KAAKia,KAAKsO,YACvBgwB,YAAaH,EACbxW,UAAAA,EACAjzB,aAAc,CAAC,EACfsB,OAAQjQ,KAAKgC,GAEpB,GAhcL,4BAicI,WACI,IAAQT,EAAkBvB,KAAK4O,QAAvBrN,cACR,IAAKA,EACD,M3BvdS,CACrBsH,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2Byd7B,IAAMi2B,EAAMp+B,EAAci/B,qBAElB6C,EAAWrjC,KAAKia,KAAhBopB,OAKR,OAJIA,IACAtD,GAAcJ,EAAI92B,EAAGw6B,EAAO3xB,OAAO7I,GACnCk3B,GAAcJ,EAAI72B,EAAGu6B,EAAO3xB,OAAO5I,IAEhC62B,CACV,GA7cL,iCA8cI,SAAoBA,GAChB,IAAM6Y,E3BleO,CACrB3vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2Boe7BwnC,GAAYsH,EAAkB7Y,GAK9B,IAAK,IAAI5hB,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAAK,CACvC,IAAM6vB,EAAO5tC,KAAKq1C,KAAKt3B,GACfslB,EAAoBuK,EAApBvK,OAAQz0B,EAAYg/B,EAAZh/B,QAChB,GAAIg/B,IAAS5tC,KAAKia,MAAQopB,GAAUz0B,EAAQm8B,aAAc,CAKtD,GAAI1H,EAAOyU,OAAQ,CACf5G,GAAYsH,EAAkB7Y,GAC9B,IAAgB8Y,EAAez4C,KAAKia,KAA5BopB,OAKJoV,IACA1Y,GAAcyY,EAAiB3vC,GAAI4vC,EAAW/mC,OAAO7I,GACrDk3B,GAAcyY,EAAiB1vC,GAAI2vC,EAAW/mC,OAAO5I,GAE5D,CACDi3B,GAAcyY,EAAiB3vC,EAAGw6B,EAAO3xB,OAAO7I,GAChDk3B,GAAcyY,EAAiB1vC,EAAGu6B,EAAO3xB,OAAO5I,EACnD,CACJ,CACD,OAAO0vC,CACV,GA9eL,4BA+eI,SAAe7Y,GAA4B,IAAvB+Y,EAAuB,wDACjCC,E3BngBO,CACrB9vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2BqgB7BwnC,GAAYyH,EAAgBhZ,GAC5B,IAAK,IAAI5hB,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAAK,CACvC,IAAM6vB,EAAO5tC,KAAKq1C,KAAKt3B,IAClB26B,GACD9K,EAAKh/B,QAAQm8B,cACb6C,EAAKvK,QACLuK,IAASA,EAAK3zB,MACdsmB,GAAaoY,EAAgB,CACzB9vC,GAAI+kC,EAAKvK,OAAO3xB,OAAO7I,EACvBC,GAAI8kC,EAAKvK,OAAO3xB,OAAO5I,IAG1BoG,GAAa0+B,EAAKj/B,eAEvB4xB,GAAaoY,EAAgB/K,EAAKj/B,aACrC,CAID,OAHIO,GAAalP,KAAK2O,eAClB4xB,GAAaoY,EAAgB34C,KAAK2O,cAE/BgqC,CACV,GArgBL,6BAsgBI,SAAgBhZ,GACZ,IAAIxuB,EACEynC,E3B3hBO,CACrB/vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B6hB7BwnC,GAAY0H,EAAqBjZ,GACjC,IAAK,IAAI5hB,EAAI,EAAGA,EAAI/d,KAAKq1C,KAAKx1C,OAAQke,IAAK,CACvC,IAAM6vB,EAAO5tC,KAAKq1C,KAAKt3B,GACvB,GAAK6vB,EAAK7mC,UAELmI,GAAa0+B,EAAKj/B,cAAvB,CAEAwwB,GAASyO,EAAKj/B,eAAiBi/B,EAAKoJ,iBACpC,IAAMvF,E3BpiBG,CACrB5oC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2BuiBzBwnC,GAAYO,EADI7D,EAAKtK,kBAErBkO,GAAoBoH,EAAqBhL,EAAKj/B,aAAuC,QAAxBwC,EAAKy8B,EAAK2E,gBAA6B,IAAPphC,OAAgB,EAASA,EAAGywB,UAAW6P,EALxH,CAMf,CAID,OAHIviC,GAAalP,KAAK2O,eAClB6iC,GAAoBoH,EAAqB54C,KAAK2O,cAE3CiqC,CACV,GA1hBL,4BA8hBI,SAAe16B,GACXle,KAAK64C,YAAc36B,EACnBle,KAAKk0C,mBAAoB,EACzBl0C,KAAKia,KAAK6+B,0BACb,GAliBL,wBAmiBI,SAAWlqC,GACP5O,KAAK4O,SAAL,0BACO5O,KAAK4O,SACLA,GAFP,IAGI+jC,eAAiC1wC,IAAtB2M,EAAQ+jC,WAA0B/jC,EAAQ+jC,WAE5D,GAziBL,+BA0iBI,WACI3yC,KAAKqjC,YAASphC,EACdjC,KAAKwI,YAASvG,EACdjC,KAAKuyC,cAAWtwC,EAChBjC,KAAK+2C,gCAA6B90C,EAClCjC,KAAK64C,iBAAc52C,EACnBjC,KAAKT,YAAS0C,EACdjC,KAAK0yC,eAAgB,CACxB,GAljBL,gCAsjBI,WACI,IAAIvhC,EAMEi/B,EAAOpwC,KAAK+4C,UAOlB,GANA/4C,KAAKk0C,oBAAsBl0C,KAAKk0C,kBAAoB9D,EAAK8D,mBACzDl0C,KAAKwqC,mBAAqBxqC,KAAKwqC,iBAAmB4F,EAAK5F,kBAKlDxqC,KAAKk0C,mBAAsBl0C,KAAKg5C,+BAArC,CAEA,MAA6Bh5C,KAAK4O,QAA1BpG,EAAR,EAAQA,OAAQjC,EAAhB,EAAgBA,SAIhB,GAAKvG,KAAKwI,SAAYA,GAAUjC,GAAhC,CAQA,IAAKvG,KAAK64C,cAAgB74C,KAAKg2C,eAAgB,CAE3C,IAAMiD,EAAiBj5C,KAAKk5C,6BACxBD,GAAkBA,EAAezwC,QACjCxI,KAAKi5C,eAAiBA,EACtBj5C,KAAKg2C,e3B1mBA,CACrBntC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B4mBrB1J,KAAKm5C,qB3B3mBA,CACrBtwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B6mBrB00B,GAAqBp+B,KAAKm5C,qBAAsBn5C,KAAKwI,OAAOo5B,UAAWqX,EAAezwC,OAAOo5B,WAC7FsP,GAAYlxC,KAAKg2C,eAAgBh2C,KAAKm5C,uBAGtCn5C,KAAKi5C,eAAiBj5C,KAAKg2C,oBAAiB/zC,CAEnD,CnClmBb,IAAyB1C,EAAQ2+B,EAAU78B,EmCumB/B,GAAKrB,KAAKg2C,gBAAmBh2C,KAAK64C,YAuClC,GAlCK74C,KAAKT,SACNS,KAAKT,O3B7nBI,CACrBsJ,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B+nBzB1J,KAAKo5C,qB3B9nBI,CACrBvwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,K2BooBzB1J,KAAKg2C,gBACLh2C,KAAKm5C,uBAC2B,QAA9BhoC,EAAKnR,KAAKi5C,sBAAmC,IAAP9nC,OAAgB,EAASA,EAAG5R,SnCrnB3DA,EmCsnBOS,KAAKT,OnCtnBJ2+B,EmCsnBYl+B,KAAKg2C,enCtnBP30C,EmCsnBuBrB,KAAKi5C,eAAe15C,OnCrnBlF0+B,GAAiB1+B,EAAOsJ,EAAGq1B,EAASr1B,EAAGxH,EAAOwH,GAC9Co1B,GAAiB1+B,EAAOuJ,EAAGo1B,EAASp1B,EAAGzH,EAAOyH,ImCynB7B9I,KAAK64C,aACNv1C,QAAQtD,KAAK+yC,cAEb/yC,KAAKT,OAASS,KAAKq5C,eAAer5C,KAAKwI,OAAOo5B,WAG9CsP,GAAYlxC,KAAKT,OAAQS,KAAKwI,OAAOo5B,WAEzClC,GAAc1/B,KAAKT,OAAQS,KAAK64C,cAMhC3H,GAAYlxC,KAAKT,OAAQS,KAAKwI,OAAOo5B,WAKrC5hC,KAAKg5C,+BAAgC,CACrCh5C,KAAKg5C,gCAAiC,EACtC,IAAMC,EAAiBj5C,KAAKk5C,6BACxBD,GACA31C,QAAQ21C,EAAelG,gBACnBzvC,QAAQtD,KAAK+yC,gBAChBkG,EAAerqC,QAAQm8B,cACxBkO,EAAe15C,QACfS,KAAKi5C,eAAiBA,EACtBj5C,KAAKg2C,e3BvqBA,CACrBntC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2ByqBrB1J,KAAKm5C,qB3BxqBA,CACrBtwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B0qBrB00B,GAAqBp+B,KAAKm5C,qBAAsBn5C,KAAKT,OAAQ05C,EAAe15C,QAC5E2xC,GAAYlxC,KAAKg2C,eAAgBh2C,KAAKm5C,uBAGtCn5C,KAAKi5C,eAAiBj5C,KAAKg2C,oBAAiB/zC,CAEnD,CAjFS,CANA,CAwFb,GA7pBL,wCA8pBI,WACI,GAAKjC,KAAKqB,SACN89B,GAASn/B,KAAKqB,OAAOsN,gBACrBywB,GAAep/B,KAAKqB,OAAOsN,cAE/B,OAAK3O,KAAKqB,OAAO20C,gBAAkBh2C,KAAKqB,OAAOw3C,cAC3C74C,KAAKqB,OAAOmH,OACLxI,KAAKqB,OAGLrB,KAAKqB,OAAO63C,4BAE1B,GA1qBL,4BA2qBI,WACI,IAAI/nC,EACI+iC,EAAwCl0C,KAAxCk0C,kBAAmB1J,EAAqBxqC,KAArBwqC,iBAC3BxqC,KAAKk0C,kBAAoBl0C,KAAKwqC,kBAAmB,EACjD,IAAM4F,EAAOpwC,KAAK+4C,UACZO,EAAWh2C,QAAQtD,KAAK+yC,eAAiB/yC,OAASowC,EACpDmJ,GAAU,EAKd,GAJIrF,IACAqF,GAAU,GACVD,GAAY9O,IACZ+O,GAAU,IACVA,EAAJ,CAEA,MAA6Bv5C,KAAK4O,QAA1BpG,EAAR,EAAQA,OAAQjC,EAAhB,EAAgBA,SAWhB,GANAvG,KAAKi0C,gBAAkB3wC,SAAgC,QAAtB6N,EAAKnR,KAAKqB,cAA2B,IAAP8P,OAAgB,EAASA,EAAG8iC,kBACvFj0C,KAAK80B,kBACL90B,KAAKw5C,kBACJx5C,KAAKi0C,kBACNj0C,KAAK64C,YAAc74C,KAAKg2C,oBAAiB/zC,GAExCjC,KAAKwI,SAAYA,GAAUjC,GAAhC,CAMA2qC,GAAYlxC,KAAK23C,gBAAiB33C,KAAKwI,OAAOo5B,W9B/rB1D,SAAyBjC,EAAKoO,EAAW0L,GAAsC,IACvEtoC,EAAIyU,EADuC8zB,EAA4B,wDAErEC,EAAaF,EAAS55C,OAC5B,GAAK85C,EAAL,CAIA,IAAI/L,EACA1vB,EAFJ6vB,EAAUllC,EAAIklC,EAAUjlC,EAAI,EAG5B,IAAK,IAAIiV,EAAI,EAAGA,EAAI47B,EAAY57B,IAE5BG,GADA0vB,EAAO6L,EAAS17B,IACHiwB,gBACuH,cAAjD,QAA7EpoB,EAA8B,QAAxBzU,EAAKy8B,EAAK7mC,gBAA6B,IAAPoK,OAAgB,EAASA,EAAGrC,aAA0B,IAAP8W,OAAgB,EAASA,EAAG0hB,WAEnHoS,GACA9L,EAAKh/B,QAAQm8B,cACb6C,EAAKvK,QACLuK,IAASA,EAAK3zB,MACdsmB,GAAaZ,EAAK,CACd92B,GAAI+kC,EAAKvK,OAAO3xB,OAAO7I,EACvBC,GAAI8kC,EAAKvK,OAAO3xB,OAAO5I,IAG3BoV,IAEA6vB,EAAUllC,GAAKqV,EAAMrV,EAAEmB,MACvB+jC,EAAUjlC,GAAKoV,EAAMpV,EAAEkB,MAEvB01B,GAAcC,EAAKzhB,IAEnBw7B,GAAsBxqC,GAAa0+B,EAAKj/B,eACxC4xB,GAAaZ,EAAKiO,EAAKj/B,eAO/Bo/B,EAAUllC,EAAI+2B,GAAcmO,EAAUllC,GACtCklC,EAAUjlC,EAAI82B,GAAcmO,EAAUjlC,EAnC5B,CAoCb,C8B4pBW8wC,CAAgB55C,KAAK23C,gBAAiB33C,KAAK+tC,UAAW/tC,KAAKq1C,KAAMiE,GACjE,IAAQ/5C,EAAW6wC,EAAX7wC,OACR,GAAKA,EAAL,CAEKS,KAAKguC,kBACNhuC,KAAKguC,gB3B3uBM,CACvBnlC,EAP2B,CAC3Bk1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,GAIbh1B,EAR2B,CAC3Bi1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,I2B8uBD99B,KAAK65C,6B3B5uBM,CACvBhxC,EAP2B,CAC3Bk1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,GAIbh1B,EAR2B,CAC3Bi1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,K2BgvBL,IAAMgc,EAAiB95C,KAAK+tC,UAAUllC,EAChCkxC,EAAiB/5C,KAAK+tC,UAAUjlC,EAChCkxC,EAA0Bh6C,KAAKi6C,oBAUrCjc,GAAah+B,KAAKguC,gBAAiBhuC,KAAK23C,gBAAiBp4C,EAAQS,KAAK2O,cACtE3O,KAAKi6C,oBAAsBjH,GAAyBhzC,KAAKguC,gBAAiBhuC,KAAK+tC,WAC3E/tC,KAAKi6C,sBAAwBD,GAC7Bh6C,KAAK+tC,UAAUllC,IAAMixC,GACrB95C,KAAK+tC,UAAUjlC,IAAMixC,IACrB/5C,KAAKi1C,cAAe,EACpBj1C,KAAKspC,iBACLtpC,KAAKi3C,gBAAgB,mBAAoB13C,GAxBnC,CAbA,CAbA,CAoDb,GA3uBL,kBA4uBI,WACIS,KAAKk1C,WAAY,CAEpB,GA/uBL,kBAgvBI,WACIl1C,KAAKk1C,WAAY,CAEpB,GAnvBL,4BAovBI,WAAiC,IACzB/jC,EAAIyU,EAAIwkB,EADD8P,IAAkB,yDAEiB,QAA7Ct0B,GAAMzU,EAAKnR,KAAK4O,SAAS06B,sBAAmC,IAAP1jB,GAAyBA,EAAG3mB,KAAKkS,GACvF+oC,IAAyC,QAA1B9P,EAAKpqC,KAAKqvC,kBAA+B,IAAPjF,GAAyBA,EAAGd,kBACzEtpC,KAAK+yC,eAAiB/yC,KAAK+yC,aAAahsC,WACxC/G,KAAK+yC,kBAAe9wC,EAE3B,GA3vBL,gCA4vBI,SAAmBic,GAA6C,IACxD/M,EAAIyU,EADoD,OAAtC2wB,EAAsC,wDAEtDhE,EAAWvyC,KAAKuyC,SAChB4H,GAAqC,OAAb5H,QAAkC,IAAbA,OAAsB,EAASA,EAAS5jC,eAAiB,CAAC,EACvGyrC,GAAc,UAAKp6C,KAAK2O,cACxBkqC,E3BzxBS,CACvBhwC,EAP2B,CAC3Bk1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,GAIbh1B,EAR2B,CAC3Bi1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,I2B4xBL99B,KAAKg2C,eAAiBh2C,KAAKm5C,0BAAuBl3C,EAClDjC,KAAKg5C,gCAAkCzC,EACvC,IAAM8D,E3BvxBO,CACrBxxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2ByxBvB4wC,GAAwC,OAAb/H,QAAkC,IAAbA,OAAsB,EAASA,EAAStiC,WAAoC,QAAtBkB,EAAKnR,KAAKwI,cAA2B,IAAP2I,OAAgB,EAASA,EAAGlB,QAChKqgC,IAA4C,QAA1B1qB,EAAK5lB,KAAKqvC,kBAA+B,IAAPzpB,OAAgB,EAASA,EAAG0pB,QAAQzvC,SAAW,IAAM,EACzGwwC,EAAyB/sC,QAAQg3C,IAClChK,IAC0B,IAA3BtwC,KAAK4O,QAAQ+jC,YACZ3yC,KAAKq1C,KAAKlyC,KAAKo3C,KACpBv6C,KAAKm1C,kBAAoB,EACzBn1C,KAAKw6C,eAAiB,SAACjoB,GACnB,IAAIphB,EACEkY,EAAWkJ,EAAS,IAC1BkoB,GAAa5B,EAAYhwC,EAAGqV,EAAMrV,EAAGwgB,GACrCoxB,GAAa5B,EAAY/vC,EAAGoV,EAAMpV,EAAGugB,GACrC,EAAKqxB,eAAe7B,GAChB,EAAK7C,gBACL,EAAKmD,sBACL,EAAK3wC,SAC2B,QAA9B2I,EAAK,EAAK8nC,sBAAmC,IAAP9nC,OAAgB,EAASA,EAAG3I,UACpE41B,GAAqBic,EAAgB,EAAK7xC,OAAOo5B,UAAW,EAAKqX,eAAezwC,OAAOo5B,WACvF+Y,GAAO,EAAK3E,eAAgB,EAAKmD,qBAAsBkB,EAAgBhxB,IAEvEixB,IACA,EAAK9H,gBAAkB4H,EACvBlK,GAAUkK,EAAaD,EAAsB,EAAKxrC,aAAc0a,EAAUgnB,EAAwBC,IAEtG,EAAKr2B,KAAK6+B,2BACV,EAAKxP,iBACL,EAAK6L,kBAAoB9rB,CAC5B,EACDrpB,KAAKw6C,eAAe,EACvB,GAlyBL,4BAmyBI,SAAe5rC,GAAS,IAChBuC,EAAIyU,EADY,OAEpB5lB,KAAKi3C,gBAAgB,kBACY,QAAhC9lC,EAAKnR,KAAK80B,wBAAqC,IAAP3jB,GAAyBA,EAAGwR,OACjE3iB,KAAK+yC,eACyC,QAA7CntB,EAAK5lB,KAAK+yC,aAAaje,wBAAqC,IAAPlP,GAAyBA,EAAGjD,QAElF3iB,KAAKw5C,mBACLn5B,GAAW+R,OAAOpyB,KAAKw5C,kBACvBx5C,KAAKw5C,sBAAmBv3C,GAO5BjC,KAAKw5C,iBAAmBv5B,GAAKmS,QAAO,WAChCrtB,EAAsBC,wBAAyB,EAC/C,EAAK8vB,iBCpzBrB,SAAiB3M,EAAMiB,GAAqB,IAAjB/S,EAAiB,uDAAJ,CAAC,EAC/BvW,EAAQ4I,EAAcyf,GAAQA,EAAO9E,GAAY8E,GAEvD,OADAroB,EAAMiD,MAAMi0B,GAA2B,GAAIl3B,EAAOspB,EAAI/S,IAC/C,CACHsM,KAAM,kBAAM7iB,EAAM6iB,MAAZ,EACNi4B,YAAa,kBAAM96C,EAAM86C,aAAZ,EAEpB,CD6yBuC13C,CAAQ,EAxzBxB,KAwzBuB,QAAC,UACzB0L,GADwB,IAE3BukB,SAAU,SAACZ,GACP,IAAIphB,EACJ,EAAKqpC,eAAejoB,GACQ,QAA3BphB,EAAKvC,EAAQukB,gBAA6B,IAAPhiB,GAAyBA,EAAGlS,KAAK2P,EAAS2jB,EACjF,EACDU,WAAY,WACR,IAAI9hB,EAC0B,QAA7BA,EAAKvC,EAAQqkB,kBAA+B,IAAP9hB,GAAyBA,EAAGlS,KAAK2P,GACvE,EAAKisC,mBACR,KAED,EAAK9H,eACL,EAAKA,aAAaje,iBAAmB,EAAKA,kBAE9C,EAAK0kB,sBAAmBv3C,CAC3B,GACJ,GAv0BL,+BAw0BI,WACI,IAAIkP,EACAnR,KAAK+yC,eACL/yC,KAAK+yC,aAAaje,sBAAmB7yB,EACrCjC,KAAK+yC,aAAaT,qBAAkBrwC,GAEb,QAA1BkP,EAAKnR,KAAKqvC,kBAA+B,IAAPl+B,GAAyBA,EAAG2pC,wBAC/D96C,KAAK+yC,aACD/yC,KAAK80B,iBACD90B,KAAKwyC,qBACDvwC,EACZjC,KAAKi3C,gBAAgB,oBACxB,GAp1BL,6BAq1BI,WACI,IAAI9lC,EACAnR,KAAK80B,mBAC0B,QAA9B3jB,EAAKnR,KAAKw6C,sBAAmC,IAAPrpC,GAAyBA,EAAGlS,KAAKe,KA31BhE,KA41BRA,KAAK80B,iBAAiBnS,QAE1B3iB,KAAK66C,mBACR,GA51BL,qCA61BI,WACI,IAAMzK,EAAOpwC,KAAK+4C,UACZK,EAAuDhJ,EAAvDgJ,qBAAsB75C,EAAiC6wC,EAAjC7wC,OAAQiJ,EAAyB4nC,EAAzB5nC,OAAQmG,EAAiByhC,EAAjBzhC,aAC5C,GAAKyqC,GAAyB75C,GAAWiJ,EAAzC,CAOA,GAAIxI,OAASowC,GACTpwC,KAAKwI,QACLA,GACAuyC,GAA0B/6C,KAAK4O,QAAQs8B,cAAelrC,KAAKwI,OAAOo5B,UAAWp5B,EAAOo5B,WAAY,CAChGriC,EAASS,KAAKT,Q3B93BL,CACrBsJ,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2Bg4BzB,IAAMsxC,EAAUvd,GAAWz9B,KAAKwI,OAAOo5B,UAAU/4B,GACjDtJ,EAAOsJ,EAAEY,IAAM2mC,EAAK7wC,OAAOsJ,EAAEY,IAC7BlK,EAAOsJ,EAAEa,IAAMnK,EAAOsJ,EAAEY,IAAMuxC,EAC9B,IAAMC,EAAUxd,GAAWz9B,KAAKwI,OAAOo5B,UAAU94B,GACjDvJ,EAAOuJ,EAAEW,IAAM2mC,EAAK7wC,OAAOuJ,EAAEW,IAC7BlK,EAAOuJ,EAAEY,IAAMnK,EAAOuJ,EAAEW,IAAMwxC,CACjC,CACD/J,GAAYkI,EAAsB75C,GAMlCghC,GAAa6Y,EAAsBzqC,GAOnCqvB,GAAah+B,KAAK65C,6BAA8B75C,KAAK23C,gBAAiByB,EAAsBzqC,EA/BlF,CAgCb,GAj4BL,gCAk4BI,SAAmBpI,EAAUqnC,GACzB,IAAIz8B,EAAIyU,EAAIwkB,EACPpqC,KAAKo1C,YAAYxtC,IAAIrB,IACtBvG,KAAKo1C,YAAYvtC,IAAItB,EAAU,IAAIurC,IAEzB9xC,KAAKo1C,YAAY/1C,IAAIkH,GAC7BoZ,IAAIiuB,GACVA,EAAKuB,QAAQ,CACT94B,WAA2D,QAA9ClF,EAAKy8B,EAAKh/B,QAAQu8B,8BAA2C,IAAPh6B,OAAgB,EAASA,EAAGkF,WAC/F87B,sBAAiJ,QAAzH/H,EAAoD,QAA9CxkB,EAAKgoB,EAAKh/B,QAAQu8B,8BAA2C,IAAPvlB,OAAgB,EAASA,EAAGs1B,mCAAgD,IAAP9Q,OAAgB,EAASA,EAAGnrC,KAAK2mB,EAAIgoB,IAErM,GA74BL,oBA84BI,WACI,IAAMuN,EAAQn7C,KAAKqvC,WACnB,OAAO8L,GAAQA,EAAM/K,OAASpwC,IACjC,GAj5BL,qBAk5BI,WACI,IAAImR,EAEJ,OADqBnR,KAAK4O,QAAlBrI,WACsC,QAA1B4K,EAAKnR,KAAKqvC,kBAA+B,IAAPl+B,OAAgB,EAASA,EAAGi/B,OAAgBpwC,IACrG,GAt5BL,yBAu5BI,WACI,IAAImR,EAEJ,OADqBnR,KAAK4O,QAAlBrI,SACqC,QAA1B4K,EAAKnR,KAAKqvC,kBAA+B,IAAPl+B,OAAgB,EAASA,EAAG4gC,cAAW9vC,CAC/F,GA35BL,sBA45BI,WACI,IAAQsE,EAAavG,KAAK4O,QAAlBrI,SACR,GAAIA,EACA,OAAOvG,KAAKia,KAAKm7B,YAAY/1C,IAAIkH,EACxC,GAh6BL,qBAi6BI,WAAiE,6DAAJ,CAAC,EAApD+tC,EAAuD,EAAvDA,WAAYj+B,EAA2C,EAA3CA,WAAY87B,EAA+B,EAA/BA,sBACxBgJ,EAAQn7C,KAAKqvC,WACf8L,GACAA,EAAMhM,QAAQnvC,KAAMmyC,GACpBmC,IACAt0C,KAAKguC,qBAAkB/rC,EACvBjC,KAAKs0C,YAAa,GAElBj+B,GACArW,KAAKgrC,WAAW,CAAE30B,WAAAA,GACzB,GA36BL,sBA46BI,WACI,IAAM8kC,EAAQn7C,KAAKqvC,WACnB,QAAI8L,GACOA,EAAM/L,SAASpvC,KAK7B,GAp7BL,2BAq7BI,WACI,IAAQuB,EAAkBvB,KAAK4O,QAAvBrN,cACR,GAAKA,EAAL,CAGA,IAAI65C,GAAY,EAKRzsC,EAAiBpN,EAAjBoN,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb+tC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZt9B,EAAI,EAAGA,EAAI01B,GAAc5zC,OAAQke,IAAK,CAC3C,IAAM9X,EAAM,SAAWwtC,GAAc11B,GAEjCpP,EAAa1I,KACbo1C,EAAYp1C,GAAO0I,EAAa1I,GAChC1E,EAAcgmC,eAAethC,EAAK,GAEzC,CAKD,IAAK,IAAMA,KAFO,OAAlB1E,QAA4C,IAAlBA,GAAoCA,EAAca,SAE1Di5C,EACd95C,EAAcgmC,eAAethC,EAAKo1C,EAAYp1C,IAIlD1E,EAAc+nC,gBApBJ,CAhBA,CAqCb,GA79BL,iCA89BI,WAAoC,IAC5Bn4B,EAAIyU,EAAIwkB,EADIt2B,EAAgB,uDAAJ,CAAC,EAGvBwnC,EAAS,CAAC,EAChB,IAAKt7C,KAAK+G,UAAY/G,KAAKq0C,MACvB,OAAOiH,EACX,IAAKt7C,KAAKk1C,UACN,MAAO,CAAEqG,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAM1sC,EAA0D,QAArCsC,EAAKnR,KAAK4O,QAAQrN,qBAAkC,IAAP4P,OAAgB,EAASA,EAAGoK,WAAW1M,kBAC/G,GAAI7O,KAAKs0C,WAQL,OAPAt0C,KAAKs0C,YAAa,EAClBgH,EAAOrtC,QAAU,GACjBqtC,EAAOE,cACHxmC,GAAmBlB,EAAU0nC,gBAAkB,GACnDF,EAAO/xC,UAAYsF,EACbA,EAAkB7O,KAAK2O,aAAc,IACrC,OACC2sC,EAEX,IAAMlL,EAAOpwC,KAAK+4C,UAClB,IAAK/4C,KAAKguC,kBAAoBhuC,KAAKwI,SAAW4nC,EAAK7wC,OAAQ,CACvD,IAAMk8C,EAAc,CAAC,EAerB,OAdIz7C,KAAK4O,QAAQrI,WACbk1C,EAAYxtC,aACsBhM,IAA9BjC,KAAK2O,aAAaV,QACZjO,KAAK2O,aAAaV,QAClB,EACVwtC,EAAYD,cACRxmC,GAAmBlB,EAAU0nC,gBAAkB,IAEnDx7C,KAAKi1C,eAAiB/lC,GAAalP,KAAK2O,gBACxC8sC,EAAYlyC,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN7O,KAAKi1C,cAAe,GAEjBwG,CACV,CACD,IAAMC,EAAiBtL,EAAKoC,iBAAmBpC,EAAKzhC,aACpD3O,KAAK27C,0BACLL,EAAO/xC,UAAYypC,GAAyBhzC,KAAK65C,6BAA8B75C,KAAK+tC,UAAW2N,GAC3F7sC,IACAysC,EAAO/xC,UAAYsF,EAAkB6sC,EAAgBJ,EAAO/xC,YAEhE,MAAiBvJ,KAAKguC,gBAAdnlC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EA+BX,IAAK,IAAM7C,KA9BXq1C,EAAOrsC,gBAAP,UAAuC,IAAXpG,EAAE4I,OAA9B,aAA0D,IAAX3I,EAAE2I,OAAjD,OACI2+B,EAAKoC,gBAKL8I,EAAOrtC,QACHmiC,IAASpwC,KACiG,QAAnGoqC,EAAuC,QAAjCxkB,EAAK81B,EAAeztC,eAA4B,IAAP2X,EAAgBA,EAAK5lB,KAAK2O,aAAaV,eAA4B,IAAPm8B,EAAgBA,EAAK,EACjIpqC,KAAKsyC,gBACDtyC,KAAK2O,aAAaV,QAClBytC,EAAelL,YAO7B8K,EAAOrtC,QACHmiC,IAASpwC,UACwBiC,IAA3By5C,EAAeztC,QACXytC,EAAeztC,QACf,QAC2BhM,IAA/By5C,EAAelL,YACXkL,EAAelL,YACf,EAKAroC,EACd,QAA4BlG,IAAxBy5C,EAAez1C,GAAnB,CAEA,MAA6BkC,EAAgBlC,GAArC0nC,EAAR,EAAQA,QAASgC,EAAjB,EAAiBA,QACXiM,EAAYjO,EAAQ+N,EAAez1C,GAAMmqC,GAC/C,GAAIT,EAEA,IADA,IAAMkM,EAAMlM,EAAQ9vC,OACXke,EAAI,EAAGA,EAAI89B,EAAK99B,IACrBu9B,EAAO3L,EAAQ5xB,IAAM69B,OAIzBN,EAAOr1C,GAAO21C,CAVN,CAwBhB,OANI57C,KAAK4O,QAAQrI,WACb+0C,EAAOE,cACHpL,IAASpwC,KACHgV,GAAmBlB,EAAU0nC,gBAAkB,GAC/C,QAEPF,CACV,GAxkCL,2BAykCI,WACIt7C,KAAKqyC,WAAaryC,KAAKuyC,cAAWtwC,CACrC,GA3kCL,uBA6kCI,WACIjC,KAAKia,KAAK46B,MAAM3+B,SAAQ,SAAC03B,GAAW,IAAIz8B,EAAI,OAAwC,QAAhCA,EAAKy8B,EAAK9Y,wBAAqC,IAAP3jB,OAAgB,EAASA,EAAGwR,MAAS,IACjI3iB,KAAKia,KAAK46B,MAAM3+B,QAAQihC,IACxBn3C,KAAKia,KAAKm7B,YAAY3yB,OACzB,KAjlCL,IAmlCH,CACD,SAAS8hB,GAAaqJ,GAClBA,EAAKrJ,cACR,CACD,SAAS+S,GAAmB1J,GACxB,IAAIz8B,EAAIyU,EAAIwkB,EACNmI,GAAuC,QAA1BphC,EAAKy8B,EAAKyE,kBAA+B,IAAPlhC,OAAgB,EAASA,EAAGohC,WAAa3E,EAAK2E,SACnG,GAAI3E,EAAK2B,UACL3B,EAAKplC,QACL+pC,GACA3E,EAAKkO,aAAa,aAAc,CAChC,MAA2DlO,EAAKplC,OAA7CA,EAAnB,EAAQo5B,UAAgCma,EAAxC,EAA2BxD,YACnBrN,EAAkB0C,EAAKh/B,QAAvBs8B,cACFoO,EAAW/G,EAAStiC,SAAW29B,EAAKplC,OAAOyH,OAG3B,SAAlBi7B,EACAlM,IAAS,SAACtB,GACN,IAAMse,EAAe1C,EACf/G,EAASgG,YAAY7a,GACrB6U,EAAS3Q,UAAUlE,GACnB79B,EAAS49B,GAAWue,GAC1BA,EAAavyC,IAAMjB,EAAOk1B,GAAMj0B,IAChCuyC,EAAatyC,IAAMsyC,EAAavyC,IAAM5J,CACzC,IAEIk7C,GAA0B7P,EAAeqH,EAAS3Q,UAAWp5B,IAClEw2B,IAAS,SAACtB,GACN,IAAMse,EAAe1C,EACf/G,EAASgG,YAAY7a,GACrB6U,EAAS3Q,UAAUlE,GACnB79B,EAAS49B,GAAWj1B,EAAOk1B,IACjCse,EAAatyC,IAAMsyC,EAAavyC,IAAM5J,CACzC,IAEL,IAAMo8C,E3B9oCa,CACvBpzC,EAP2B,CAC3Bk1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,GAIbh1B,EAR2B,CAC3Bi1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,I2BipCTE,GAAaie,EAAazzC,EAAQ+pC,EAAS3Q,WAC3C,IAAMsa,E3BhpCa,CACvBrzC,EAP2B,CAC3Bk1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,GAIbh1B,EAR2B,CAC3Bi1B,UAAW,EACX/zB,MAAO,EACPyH,OAAQ,EACRqsB,YAAa,I2BmpCLwb,EACAtb,GAAake,EAAatO,EAAKyL,eAAe0C,GAAgB,GAAOxJ,EAASgG,aAG9Eva,GAAake,EAAa1zC,EAAQ+pC,EAAS3Q,WAE/C,IAAMkD,GAAoB6M,GAAYsK,GAClCpG,GAA2B,EAC/B,IAAKjI,EAAKyE,WAAY,CAClB,IAAM4G,EAAiBrL,EAAKsL,6BAK5B,GAAID,IAAmBA,EAAe5G,WAAY,CAC9C,IAAkB8J,EAAyClD,EAAnD1G,SAAkC6J,EAAiBnD,EAAzBzwC,OAClC,GAAI2zC,GAAkBC,EAAc,CAChC,IAAMC,E3B7pCD,CACrBxzC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2B+pCrB00B,GAAqBie,EAAkB9J,EAAS3Q,UAAWua,EAAeva,WAC1E,IAAMyY,E3B/pCD,CACrBxxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I2BiqCrB00B,GAAqBic,EAAgB7xC,EAAQ4zC,EAAaxa,WACrDgQ,GAAUyK,EAAkBhC,KAC7BxE,GAA2B,EAElC,CACJ,CACJ,CACDjI,EAAKqJ,gBAAgB,YAAa,CAC9BzuC,OAAAA,EACA+pC,SAAAA,EACAr0B,MAAOg+B,EACPD,YAAAA,EACAnX,iBAAAA,EACA+Q,yBAAAA,GAEP,MACQjI,EAAK2B,WACoC,QAA7CnF,GAAMxkB,EAAKgoB,EAAKh/B,SAAS4O,sBAAmC,IAAP4sB,GAAyBA,EAAGnrC,KAAK2mB,IAO3FgoB,EAAKh/B,QAAQyH,gBAAapU,CAC7B,CACD,SAAS6yC,GAAoBlH,GAKzBA,EAAKsG,oBAAsBtG,EAAKsG,kBAAoB5wC,QAAQsqC,EAAKvsC,QAAUusC,EAAKvsC,OAAO6yC,oBAIvFtG,EAAKpD,mBAAqBoD,EAAKpD,iBAAmBlnC,QAAQsqC,EAAKvsC,QAAUusC,EAAKvsC,OAAOmpC,kBACxF,CACD,SAAS+M,GAAc3J,GACnBA,EAAK2J,eACR,CACD,SAASJ,GAAkBvJ,GACvBA,EAAKuJ,mBACR,CACD,SAASE,GAAoBzJ,GACzB,IAAQrsC,EAAkBqsC,EAAKh/B,QAAvBrN,eACc,OAAlBA,QAA4C,IAAlBA,OAA2B,EAASA,EAAcga,WAAW+gC,wBACvF/6C,EAAcgB,OAAO,uBAEzBqrC,EAAKmG,gBACR,CACD,SAAS4B,GAAgB/H,GACrBA,EAAK+H,kBACL/H,EAAKiL,YAAcjL,EAAKoI,eAAiBpI,EAAKruC,YAAS0C,CAC1D,CACD,SAAS8yC,GAAmBnH,GACxBA,EAAKmH,oBACR,CACD,SAASC,GAAepH,GACpBA,EAAKoH,gBACR,CACD,SAAS4B,GAAchJ,GACnBA,EAAKgJ,eACR,CACD,SAASY,GAAoB2D,GACzBA,EAAMoB,oBACT,CACD,SAAS9B,GAAah1B,EAAQvH,EAAO9d,GACjCqlB,EAAOsY,UAAY7oB,GAAIgJ,EAAM6f,UAAW,EAAG39B,GAC3CqlB,EAAOzb,MAAQkL,GAAIgJ,EAAMlU,MAAO,EAAG5J,GACnCqlB,EAAOhU,OAASyM,EAAMzM,OACtBgU,EAAOqY,YAAc5f,EAAM4f,WAC9B,CACD,SAAS0e,GAAQ/2B,EAAQ0C,EAAMiB,EAAIhpB,GAC/BqlB,EAAOhc,IAAMyL,GAAIiT,EAAK1e,IAAK2f,EAAG3f,IAAKrJ,GACnCqlB,EAAO/b,IAAMwL,GAAIiT,EAAKze,IAAK0f,EAAG1f,IAAKtJ,EACtC,CACD,SAASu6C,GAAOl1B,EAAQ0C,EAAMiB,EAAIhpB,GAC9Bo8C,GAAQ/2B,EAAO5c,EAAGsf,EAAKtf,EAAGugB,EAAGvgB,EAAGzI,GAChCo8C,GAAQ/2B,EAAO3c,EAAGqf,EAAKrf,EAAGsgB,EAAGtgB,EAAG1I,EACnC,CACD,SAASm6C,GAAoB3M,GACzB,OAAQA,EAAK4E,sBAAwDvwC,IAArC2rC,EAAK4E,gBAAgBhC,WACxD,CACD,IAAM0F,GAA0B,CAC5BloB,SAAU,IACVhD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASosB,GAAexJ,EAAMoG,GAM1B,IADA,IAAIyI,EAAa7O,EAAK3zB,KACb8D,EAAI6vB,EAAKyH,KAAKx1C,OAAS,EAAGke,GAAK,EAAGA,IACvC,GAAIza,QAAQsqC,EAAKyH,KAAKt3B,GAAGhX,UAAW,CAChC01C,EAAa7O,EAAKyH,KAAKt3B,GACvB,KACH,CAEL,IACMlK,GADgB4oC,GAAcA,IAAe7O,EAAK3zB,KAAOwiC,EAAW11C,SAAWrG,UACvDg8C,cAAd,+BAAoD1I,EAApD,OACZngC,GACA+5B,EAAK5mC,MAAM6M,GAAS,EAC3B,CACD,SAAS8oC,GAAUjf,GACfA,EAAKj0B,IAAME,KAAKQ,MAAMuzB,EAAKj0B,KAC3Bi0B,EAAKh0B,IAAMC,KAAKQ,MAAMuzB,EAAKh0B,IAC9B,CACD,SAAS4uC,GAAS3Y,GACdgd,GAAUhd,EAAI92B,GACd8zC,GAAUhd,EAAI72B,EACjB,CACD,SAASiyC,GAA0B7P,EAAeqH,EAAU/pC,GACxD,MAA0B,aAAlB0iC,GACe,oBAAlBA,IACIvN,GAAOkU,GAAYU,GAAWV,GAAYrpC,GAAS,GAC/D,CE5xCD,IAAMo0C,GAAyBlJ,GAAqB,CAChDC,qBAAsB,SAAClxC,EAAKF,GAAN,OAAiBuU,GAAYrU,EAAK,SAAUF,EAA5C,EACtBsxC,cAAe,iBAAO,CAClBhrC,EAAGnI,SAASm8C,gBAAgBC,YAAcp8C,SAASq8C,KAAKD,WACxDh0C,EAAGpI,SAASm8C,gBAAgBG,WAAat8C,SAASq8C,KAAKC,UAF5C,EAIflJ,kBAAmB,kBAAM,CAAN,ICNjB3Q,GAAqB,CACvBrhC,aAASG,GAEPg7C,GAAqBvJ,GAAqB,CAC5CG,cAAe,SAAC9sC,GAAD,MAAe,CAC1B8B,EAAG9B,EAAS+1C,WACZh0C,EAAG/B,EAASi2C,UAFD,EAIfpJ,cAAe,WACX,IAAKzQ,GAAmBrhC,QAAS,CAC7B,IAAMo7C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAal2C,MAAMgW,QACnBkgC,EAAalS,WAAW,CAAED,cAAc,IACxC5H,GAAmBrhC,QAAUo7C,CAChC,CACD,OAAO/Z,GAAmBrhC,OAC7B,EACDiyC,eAAgB,SAAChtC,EAAUjH,GACvBiH,EAAS+H,MAAMvF,eAAsBtH,IAAVnC,EAAsBA,EAAQ,MAC5D,EACDg0C,kBAAmB,SAAC/sC,GAAD,OAAczD,QAAuD,UAA/C0Z,OAAO+oB,iBAAiBh/B,GAAUo2C,SAAxD,ICbjBC,IAAgB,kCACfllB,IACAnc,IACAxX,IACAsrC,IAQDwN,GAAuBj2C,GAAkB,SAACnG,EAAWoU,GAAZ,OCjB/C,SAA+BpU,EAA/B,EAA0E2E,EAAmBxE,EAAqByE,GAA2B,QAAjGyL,mBAAAA,OAAiG,SACnIgsC,EAAav1C,EAAe9G,GAC5BuV,GACAK,GACN,yBACOymC,GADP,IAEI13C,kBAAAA,EACAE,UAAWwN,GAAgBhC,GAC3BlQ,oBAAAA,EACAyE,0BAAAA,EACA5E,UAAAA,GAEP,CDKqEs8C,CAAsBt8C,EAAWoU,EAAQ+nC,GAAe7P,GAAwB0P,GAAvG,G","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? (event) => isPrimaryPointer(event) && listener(event)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","wrapHandler","shouldFilterPrimaryPointer","listener","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","window","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","eventManagers","clear","passiveEffect","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","latest","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}