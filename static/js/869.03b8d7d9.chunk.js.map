{"version":3,"file":"static/js/869.03b8d7d9.chunk.js","mappings":"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","sources":["components/Animations/SectionAnim.js","components/Box.js","helpers/numberSpace.js","helpers/colorsDonut.js","components/StatTab/styled.js","helpers/statSelectStyles.js","components/StatTab/DiagramTab.jsx","components/StatTab/DoughnutChart.js","pages/StatTab/StatTab.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\n\nconst SectionAnim = ({ children, delay = 0 }) => {\n  return (\n    <>\n      <motion.div\n        initial={{ y: 10, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.8, delay }}\n        mb={6}\n      >\n        {children}\n      </motion.div>\n    </>\n  );\n};\n\nexport default SectionAnim;\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  fontFamily,\n  border,\n  shadow,\n  margin,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  margin,\n  flexbox,\n  fontFamily,\n  grid,\n  background,\n  border,\n  shadow,\n  position\n);\n","export const numberSpace = number => {\n  if (!number) return '0.00';\n  const units = number.toFixed(2).toString().slice(-6);\n  const thousands = number.toFixed(2).toString().slice(-9, -6);\n  const millions = number.toFixed(2).toString().slice(-12, -9);\n  const billions = number.toFixed(2).toString().slice(-15, -12);\n  const trillions = number.toFixed(2).toString().slice(-18, -15);\n\n  if (trillions)\n    return `${trillions} ${billions} ${millions} ${thousands} ${units}`;\n  if (billions) return `${billions} ${millions} ${thousands} ${units}`;\n  if (millions) return `${millions} ${thousands} ${units}`;\n  if (thousands) return `${thousands} ${units}`;\n\n  return units;\n};\n","const colorsDonut = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n];\n\nexport default colorsDonut;\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: 40px;\n  /* margin-left: -6px;\n  margin-right: -6px; */\n  width: 100%;\n  max-width: 320px;\n\n  @media screen and (min-width: 480px) {\n    width: 320px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0;\n    margin: 0;\n    width: 768px;\n    gap: 70px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 0;\n    margin: 0;\n    margin-left: 30px;\n    width: 100%;\n    max-width: 100%;\n    gap: 40px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nexport const DropDown = styled.select`\n  box-sizing: border-box;\n\n  // left: 869px;\n  // top: 177px;\n  background: none;\n  width: 181px;\n  border: 1px solid #000000;\n  border-radius: 30px;\n  padding: 12px 0 14px 20px;\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nexport const TabHeader = styled.h1`\n  font-family: 'Poppins';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n`;\n\nexport const DropDownTitle = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: #000000;\n`;\n\nexport const DropDownWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 32px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const TabItem = styled.tr`\n  border-bottom: 2px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  max-width: 320px;\n  padding-top: 20px;\n  padding-bottom: 33px;\n  margin: 0 auto;\n\n  /* @media screen and (min-width: 480px) {\n    max-width: 320px;\n  } */\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    max-width: 395px;\n  }\n`;\n\nexport const TableHeaderWrapper = styled.tr`\n  background: #ffffff;\n  border-color: #ffffff;\n  border: none;\n  /* margin: 0; */\n`;\n\nexport const TableHeaderL = styled.th`\n  padding: 15px;\n  border-top-left-radius: 30px;\n  border: none;\n  border-bottom-left-radius: 30px;\n`;\nexport const TableHeaderR = styled.th`\n  padding: 15px;\n  border-top-right-radius: 30px;\n  border: none;\n\n  border-bottom-right-radius: 30px;\n`;\n\nexport const TableData = styled.td`\n  padding: 15px;\n  border: 1px solid #dcdcdf;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n`;\n\nexport const TableDataAmount = styled.td`\n  padding: 15px;\n  text-align: end;\n  border: 1px solid #dcdcdf;\n  border: none;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n`;\n\nexport const DoughnutBalance = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  margin-bottom: 32px;\n`;\n\nexport const StatLabel = styled.p`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nexport const StatInc = styled.p`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #24cca7;\n`;\n\nexport const StatExp = styled.p`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #ff6596;\n`;\n\nexport const ColorLegend = styled.p`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const DonutSection = styled.div`\n  margin: 0 auto;\n  @media screen and (min-width: 1280px) {\n    margin: 0;\n  }\n`;\n","const statSelectStyles = {\n  dropdownIndicator: (prevStyle, state) => ({\n    ...prevStyle,\n    display: '',\n    transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n    color: '#000',\n  }),\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    '&:hover': {\n      borderWeight: '3px',\n      borderColor: '#000',\n    },\n\n    borderWeight: '2px',\n    borderColor: state.isFocused ? '#000' : '#000',\n    borderRadius: '30px',\n    padding: '9px 16px',\n    color: '#000',\n\n    '@media only screen and (max-width: 767px)': {\n      ...baseStyles['@media only screen and (max-width: 767px)'],\n      width: '280px',\n    },\n\n    '@media only screen and (min-width: 768px) and (max-width: 1279px)': {\n      ...baseStyles[\n        '@media only screen and (min-width: 768px) and (max-width: 1279px)'\n      ],\n      width: '150px',\n    },\n\n    background: 'none',\n    width: '181px',\n    fontFamily: 'Circe',\n    fontWeight: '500',\n    fontSize: '16px',\n  }),\n  menu: styles => ({\n    ...styles,\n    overflow: 'hidden',\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n    backdropFilter: 'blur(25px)',\n    borderRadius: 20,\n    outline: 0,\n  }),\n  option: (styles, { isFocused, isSelected }) => ({\n    ...styles,\n    color: isFocused ? '#FF6596' : isSelected ? '#FF6596' : undefined,\n    backgroundColor: isFocused ? '#ffffff' : isSelected ? '#ffffff' : undefined,\n    cursor: 'pointer',\n    borderRadius: isFocused ? '0' : isSelected ? '0' : undefined,\n    fontFamily: 'Circe',\n    fontWeight: isFocused ? '700' : isSelected ? '700' : '400',\n    fontSize: '16px',\n    lineHeight: 1.5,\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  placeholder: defaultStyles => ({\n    ...defaultStyles,\n    color: '#000',\n  }),\n};\n\nexport default statSelectStyles;\n","import { Box } from 'components/Box';\nimport colorsDonut from 'helpers/colorsDonut';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport getTransactionSummary from 'redux/statistic/statistic-operations';\nimport Select from 'react-select';\nimport {\n  ColorLegend,\n  DropDownWrapper,\n  StatExp,\n  StatInc,\n  StatLabel,\n  TabItem,\n  Table,\n  TableData,\n  TableDataAmount,\n  TableHeaderL,\n  TableHeaderR,\n  TableHeaderWrapper,\n} from './styled';\nimport statSelectStyles from 'helpers/statSelectStyles';\n\nconst monthsList = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n\nconst yearsList = [\n  { value: '2022', label: '2022' },\n  { value: '2021', label: '2021' },\n  { value: '2020', label: '2020' },\n];\nfunction DiagramTab() {\n  let statisticLS = JSON.parse(localStorage.getItem('statistic')) || {\n    month: '',\n    year: '',\n  };\n  const [month, setMonth] = useState(statisticLS.month || '');\n  const [year, setYear] = useState(statisticLS.year || '');\n  const dispatch = useDispatch();\n\n  const statData = useSelector(state => state.statistic.statistic);\n\n  useEffect(() => {\n    if (month.length > 0 && year.length > 0)\n      dispatch(getTransactionSummary({ month, year }));\n  }, [month, year, dispatch]);\n\n  const filteredExp = statData?.categoriesSummary?.filter(\n    el => el.type !== 'INCOME'\n  );\n\n  const handleChangeMonth = e => {\n    const month = e.value;\n    statisticLS.month = month;\n    setMonth(month);\n    localStorage.setItem('statistic', JSON.stringify(statisticLS));\n  };\n  const handleChangeYear = e => {\n    const year = e.value;\n    statisticLS.year = year;\n    setYear(year);\n    localStorage.setItem('statistic', JSON.stringify(statisticLS));\n  };\n  return (\n    <Box marginTop=\"20px\" marginBottom=\"50px\">\n      <DropDownWrapper>\n        <Select\n          // defaultValue={{ value: month }}\n          placeholder={\n            month\n              ? monthsList.filter(el => el.value === month)[0].label\n              : 'Month'\n          }\n          options={monthsList}\n          onChange={e => handleChangeMonth(e)}\n          components={{\n            IndicatorSeparator: () => null,\n          }}\n          styles={statSelectStyles}\n        />\n        <Select\n          placeholder={\n            year ? yearsList.filter(el => el.value === year)[0].label : 'Year'\n          }\n          options={yearsList}\n          onChange={e => handleChangeYear(e)}\n          components={{\n            IndicatorSeparator: () => null,\n          }}\n          styles={statSelectStyles}\n        />\n      </DropDownWrapper>\n      <Table>\n        <thead>\n          <TableHeaderWrapper>\n            <TableHeaderL scope=\"col\">\n              <span>Category </span>\n            </TableHeaderL>\n            <TableHeaderR scope=\"col\">\n              <span>Sum</span>\n            </TableHeaderR>\n          </TableHeaderWrapper>\n        </thead>\n        {filteredExp?.length > 0 && (\n          <>\n            <tbody>\n              {filteredExp?.map(({ name, total }, ind) => {\n                return (\n                  <TabItem key={name}>\n                    <TableData scope=\"row\">\n                      <ColorLegend\n                        style={{ backgroundColor: colorsDonut[ind] }}\n                      />\n                      {name}\n                    </TableData>\n                    <TableDataAmount>{Math.abs(total)}</TableDataAmount>\n                  </TabItem>\n                );\n              })}\n            </tbody>\n          </>\n        )}\n      </Table>\n      {filteredExp?.length > 0 && (\n        <>\n          <Box\n            display=\"flex\"\n            pl=\"20px\"\n            pr=\"10px\"\n            flexDirection=\"column\"\n            gridGap=\"20px\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              gridGap=\"20px\"\n            >\n              <StatLabel>Expenses:</StatLabel>\n              <StatExp>{Number(statData.expenseSummary).toFixed(2)}</StatExp>\n            </Box>\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              gridGap=\"20px\"\n            >\n              <StatLabel>Income:</StatLabel>\n              <StatInc>{Number(statData.incomeSummary).toFixed(2)}</StatInc>\n            </Box>\n          </Box>\n        </>\n      )}\n      {!filteredExp && <>No data statistic...</>}\n      {filteredExp?.length === 0 && <>No data statistic for this period...</>}\n    </Box>\n  );\n}\n\nexport default DiagramTab;\n","import React, { useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ChartContainer, DoughnutBalance } from './styled';\nimport { numberSpace } from 'helpers/numberSpace';\nimport colorsDonut from 'helpers/colorsDonut';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst DoughnutChart = () => {\n  const statData = useSelector(state => state.statistic.statistic);\n\n  const [expenses, setExpenses] = useState([]);\n  const [category, setCategory] = useState([]);\n\n  useEffect(() => {\n    if (!statData?.categoriesSummary?.length) return setExpenses([]);\n    const filteredStat = statData.categoriesSummary.reduce(function (\n      prev,\n      curr\n    ) {\n      if (curr.type !== 'INCOME') {\n        return [...prev, Math.abs(curr.total)];\n      } else {\n        return [...prev];\n      }\n    },\n    []);\n    setExpenses(filteredStat);\n\n    const filteredLabel = statData.categoriesSummary.reduce(function (\n      prev,\n      curr\n    ) {\n      if (curr.type !== 'INCOME') {\n        return [...prev, curr.name];\n      } else {\n        return [...prev];\n      }\n    },\n    []);\n    setCategory(filteredLabel);\n  }, [statData]);\n\n  const data = {\n    labels: category,\n    datasets: [\n      {\n        data: expenses,\n        backgroundColor: colorsDonut,\n        borderWidth: 1,\n      },\n    ],\n  };\n  const options = {\n    cutout: '70%',\n  };\n\n  return (\n    <>\n      <ChartContainer>\n        {expenses?.length > 0 && <Doughnut data={data} options={options} />}\n        {expenses?.length > 0 && (\n          <DoughnutBalance>\n            {'\\u20B4'} {numberSpace(Math.abs(statData?.expenseSummary))}\n          </DoughnutBalance>\n        )}\n      </ChartContainer>\n    </>\n  );\n};\n\nexport default DoughnutChart;\n","import SectionAnim from 'components/Animations/SectionAnim';\nimport React from 'react';\nimport DiagramTab from '../../components/StatTab/DiagramTab';\nimport DoughnutChart from '../../components/StatTab/DoughnutChart';\nimport {\n  DonutSection,\n  MainContainer,\n  TabHeader,\n} from '../../components/StatTab/styled';\n\nfunction StatTab() {\n  return (\n    <MainContainer>\n      <SectionAnim delay={0.2}>\n        <DonutSection>\n          <TabHeader>Statistics</TabHeader>\n          <DoughnutChart />\n        </DonutSection>\n      </SectionAnim>\n      <SectionAnim delay={0.3}>\n        <DiagramTab />\n      </SectionAnim>\n    </MainContainer>\n  );\n}\n\nexport default StatTab;\n"],"names":["children","delay","initial","y","opacity","animate","transition","duration","mb","Box","styled","color","space","layout","margin","flexbox","fontFamily","grid","background","border","shadow","position","numberSpace","number","units","toFixed","toString","slice","thousands","millions","billions","trillions","MainContainer","TabHeader","DropDownWrapper","TabItem","Table","TableHeaderWrapper","TableHeaderL","TableHeaderR","TableData","TableDataAmount","DoughnutBalance","ChartContainer","StatLabel","StatInc","StatExp","ColorLegend","DonutSection","dropdownIndicator","prevStyle","state","display","transform","selectProps","menuIsOpen","control","baseStyles","borderWeight","borderColor","isFocused","borderRadius","padding","width","fontWeight","fontSize","menu","styles","overflow","backgroundColor","boxShadow","backdropFilter","outline","option","isSelected","undefined","cursor","lineHeight","alignItems","placeholder","defaultStyles","monthsList","value","label","yearsList","statisticLS","JSON","parse","localStorage","getItem","month","year","useState","setMonth","setYear","dispatch","useDispatch","statData","useSelector","statistic","useEffect","length","getTransactionSummary","filteredExp","categoriesSummary","filter","el","type","marginTop","marginBottom","options","onChange","e","setItem","stringify","handleChangeMonth","components","IndicatorSeparator","statSelectStyles","handleChangeYear","scope","map","ind","name","total","style","colorsDonut","Math","abs","pl","pr","flexDirection","gridGap","justifyContent","Number","expenseSummary","incomeSummary","ChartJS","ArcElement","Tooltip","expenses","setExpenses","category","setCategory","filteredStat","reduce","prev","curr","filteredLabel","data","labels","datasets","borderWidth","cutout","SectionAnim"],"sourceRoot":""}